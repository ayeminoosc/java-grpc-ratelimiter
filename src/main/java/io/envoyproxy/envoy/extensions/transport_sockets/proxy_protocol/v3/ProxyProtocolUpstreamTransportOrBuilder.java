// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/transport_sockets/proxy_protocol/v3/upstream_proxy_protocol.proto

package io.envoyproxy.envoy.extensions.transport_sockets.proxy_protocol.v3;

public interface ProxyProtocolUpstreamTransportOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.transport_sockets.proxy_protocol.v3.ProxyProtocolUpstreamTransport)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The PROXY protocol settings
   * </pre>
   *
   * <code>.envoy.config.core.v3.ProxyProtocolConfig config = 1;</code>
   * @return Whether the config field is set.
   */
  boolean hasConfig();
  /**
   * <pre>
   * The PROXY protocol settings
   * </pre>
   *
   * <code>.envoy.config.core.v3.ProxyProtocolConfig config = 1;</code>
   * @return The config.
   */
  io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig getConfig();
  /**
   * <pre>
   * The PROXY protocol settings
   * </pre>
   *
   * <code>.envoy.config.core.v3.ProxyProtocolConfig config = 1;</code>
   */
  io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfigOrBuilder getConfigOrBuilder();

  /**
   * <pre>
   * The underlying transport socket being wrapped.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TransportSocket transport_socket = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the transportSocket field is set.
   */
  boolean hasTransportSocket();
  /**
   * <pre>
   * The underlying transport socket being wrapped.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TransportSocket transport_socket = 2 [(.validate.rules) = { ... }</code>
   * @return The transportSocket.
   */
  io.envoyproxy.envoy.config.core.v3.TransportSocket getTransportSocket();
  /**
   * <pre>
   * The underlying transport socket being wrapped.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TransportSocket transport_socket = 2 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.TransportSocketOrBuilder getTransportSocketOrBuilder();
}
