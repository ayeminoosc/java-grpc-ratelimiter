// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/wasm/v3/wasm.proto

package io.envoyproxy.envoy.extensions.wasm.v3;

/**
 * <pre>
 * Configuration for a Wasm VM.
 * [#next-free-field: 7]
 * </pre>
 *
 * Protobuf type {@code envoy.extensions.wasm.v3.VmConfig}
 */
public final class VmConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.wasm.v3.VmConfig)
    VmConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VmConfig.newBuilder() to construct.
  private VmConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VmConfig() {
    vmId_ = "";
    runtime_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VmConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private VmConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            vmId_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            runtime_ = s;
            break;
          }
          case 26: {
            io.envoyproxy.envoy.config.core.v3.AsyncDataSource.Builder subBuilder = null;
            if (code_ != null) {
              subBuilder = code_.toBuilder();
            }
            code_ = input.readMessage(io.envoyproxy.envoy.config.core.v3.AsyncDataSource.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(code_);
              code_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.protobuf.Any.Builder subBuilder = null;
            if (configuration_ != null) {
              subBuilder = configuration_.toBuilder();
            }
            configuration_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(configuration_);
              configuration_ = subBuilder.buildPartial();
            }

            break;
          }
          case 40: {

            allowPrecompiled_ = input.readBool();
            break;
          }
          case 48: {

            nackOnCodeCacheMiss_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.wasm.v3.WasmProto.internal_static_envoy_extensions_wasm_v3_VmConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.wasm.v3.WasmProto.internal_static_envoy_extensions_wasm_v3_VmConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.wasm.v3.VmConfig.class, io.envoyproxy.envoy.extensions.wasm.v3.VmConfig.Builder.class);
  }

  public static final int VM_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object vmId_;
  /**
   * <pre>
   * An ID which will be used along with a hash of the wasm code (or the name of the registered Null
   * VM plugin) to determine which VM will be used for the plugin. All plugins which use the same
   * *vm_id* and code will use the same VM. May be left blank. Sharing a VM between plugins can
   * reduce memory utilization and make sharing of data easier which may have security implications.
   * See ref: "TODO: add ref" for details.
   * </pre>
   *
   * <code>string vm_id = 1;</code>
   * @return The vmId.
   */
  @java.lang.Override
  public java.lang.String getVmId() {
    java.lang.Object ref = vmId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      vmId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * An ID which will be used along with a hash of the wasm code (or the name of the registered Null
   * VM plugin) to determine which VM will be used for the plugin. All plugins which use the same
   * *vm_id* and code will use the same VM. May be left blank. Sharing a VM between plugins can
   * reduce memory utilization and make sharing of data easier which may have security implications.
   * See ref: "TODO: add ref" for details.
   * </pre>
   *
   * <code>string vm_id = 1;</code>
   * @return The bytes for vmId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getVmIdBytes() {
    java.lang.Object ref = vmId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      vmId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RUNTIME_FIELD_NUMBER = 2;
  private volatile java.lang.Object runtime_;
  /**
   * <pre>
   * The Wasm runtime type.
   * Available Wasm runtime types are registered as extensions. The following runtimes are included
   * in Envoy code base:
   * .. _extension_envoy.wasm.runtime.null:
   * **envoy.wasm.runtime.null**: Null sandbox, the Wasm module must be compiled and linked into the
   * Envoy binary. The registered name is given in the *code* field as *inline_string*.
   * .. _extension_envoy.wasm.runtime.v8:
   * **envoy.wasm.runtime.v8**: `V8 &lt;https://v8.dev/&gt;`_-based WebAssembly runtime.
   * .. _extension_envoy.wasm.runtime.wavm:
   * **envoy.wasm.runtime.wavm**: `WAVM &lt;https://wavm.github.io/&gt;`_-based WebAssembly runtime.
   * This runtime is not enabled in the official build.
   * .. _extension_envoy.wasm.runtime.wasmtime:
   * **envoy.wasm.runtime.wasmtime**: `Wasmtime &lt;https://wasmtime.dev/&gt;`_-based WebAssembly runtime.
   * This runtime is not enabled in the official build.
   * </pre>
   *
   * <code>string runtime = 2 [(.validate.rules) = { ... }</code>
   * @return The runtime.
   */
  @java.lang.Override
  public java.lang.String getRuntime() {
    java.lang.Object ref = runtime_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      runtime_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The Wasm runtime type.
   * Available Wasm runtime types are registered as extensions. The following runtimes are included
   * in Envoy code base:
   * .. _extension_envoy.wasm.runtime.null:
   * **envoy.wasm.runtime.null**: Null sandbox, the Wasm module must be compiled and linked into the
   * Envoy binary. The registered name is given in the *code* field as *inline_string*.
   * .. _extension_envoy.wasm.runtime.v8:
   * **envoy.wasm.runtime.v8**: `V8 &lt;https://v8.dev/&gt;`_-based WebAssembly runtime.
   * .. _extension_envoy.wasm.runtime.wavm:
   * **envoy.wasm.runtime.wavm**: `WAVM &lt;https://wavm.github.io/&gt;`_-based WebAssembly runtime.
   * This runtime is not enabled in the official build.
   * .. _extension_envoy.wasm.runtime.wasmtime:
   * **envoy.wasm.runtime.wasmtime**: `Wasmtime &lt;https://wasmtime.dev/&gt;`_-based WebAssembly runtime.
   * This runtime is not enabled in the official build.
   * </pre>
   *
   * <code>string runtime = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for runtime.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRuntimeBytes() {
    java.lang.Object ref = runtime_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      runtime_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CODE_FIELD_NUMBER = 3;
  private io.envoyproxy.envoy.config.core.v3.AsyncDataSource code_;
  /**
   * <pre>
   * The Wasm code that Envoy will execute.
   * </pre>
   *
   * <code>.envoy.config.core.v3.AsyncDataSource code = 3;</code>
   * @return Whether the code field is set.
   */
  @java.lang.Override
  public boolean hasCode() {
    return code_ != null;
  }
  /**
   * <pre>
   * The Wasm code that Envoy will execute.
   * </pre>
   *
   * <code>.envoy.config.core.v3.AsyncDataSource code = 3;</code>
   * @return The code.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.AsyncDataSource getCode() {
    return code_ == null ? io.envoyproxy.envoy.config.core.v3.AsyncDataSource.getDefaultInstance() : code_;
  }
  /**
   * <pre>
   * The Wasm code that Envoy will execute.
   * </pre>
   *
   * <code>.envoy.config.core.v3.AsyncDataSource code = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.AsyncDataSourceOrBuilder getCodeOrBuilder() {
    return getCode();
  }

  public static final int CONFIGURATION_FIELD_NUMBER = 4;
  private com.google.protobuf.Any configuration_;
  /**
   * <pre>
   * The Wasm configuration used in initialization of a new VM
   * (proxy_on_start). `google.protobuf.Struct` is serialized as JSON before
   * passing it to the plugin. `google.protobuf.BytesValue` and
   * `google.protobuf.StringValue` are passed directly without the wrapper.
   * </pre>
   *
   * <code>.google.protobuf.Any configuration = 4;</code>
   * @return Whether the configuration field is set.
   */
  @java.lang.Override
  public boolean hasConfiguration() {
    return configuration_ != null;
  }
  /**
   * <pre>
   * The Wasm configuration used in initialization of a new VM
   * (proxy_on_start). `google.protobuf.Struct` is serialized as JSON before
   * passing it to the plugin. `google.protobuf.BytesValue` and
   * `google.protobuf.StringValue` are passed directly without the wrapper.
   * </pre>
   *
   * <code>.google.protobuf.Any configuration = 4;</code>
   * @return The configuration.
   */
  @java.lang.Override
  public com.google.protobuf.Any getConfiguration() {
    return configuration_ == null ? com.google.protobuf.Any.getDefaultInstance() : configuration_;
  }
  /**
   * <pre>
   * The Wasm configuration used in initialization of a new VM
   * (proxy_on_start). `google.protobuf.Struct` is serialized as JSON before
   * passing it to the plugin. `google.protobuf.BytesValue` and
   * `google.protobuf.StringValue` are passed directly without the wrapper.
   * </pre>
   *
   * <code>.google.protobuf.Any configuration = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.AnyOrBuilder getConfigurationOrBuilder() {
    return getConfiguration();
  }

  public static final int ALLOW_PRECOMPILED_FIELD_NUMBER = 5;
  private boolean allowPrecompiled_;
  /**
   * <pre>
   * Allow the wasm file to include pre-compiled code on VMs which support it.
   * Warning: this should only be enable for trusted sources as the precompiled code is not
   * verified.
   * </pre>
   *
   * <code>bool allow_precompiled = 5;</code>
   * @return The allowPrecompiled.
   */
  @java.lang.Override
  public boolean getAllowPrecompiled() {
    return allowPrecompiled_;
  }

  public static final int NACK_ON_CODE_CACHE_MISS_FIELD_NUMBER = 6;
  private boolean nackOnCodeCacheMiss_;
  /**
   * <pre>
   * If true and the code needs to be remotely fetched and it is not in the cache then NACK the configuration
   * update and do a background fetch to fill the cache, otherwise fetch the code asynchronously and enter
   * warming state.
   * </pre>
   *
   * <code>bool nack_on_code_cache_miss = 6;</code>
   * @return The nackOnCodeCacheMiss.
   */
  @java.lang.Override
  public boolean getNackOnCodeCacheMiss() {
    return nackOnCodeCacheMiss_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getVmIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, vmId_);
    }
    if (!getRuntimeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, runtime_);
    }
    if (code_ != null) {
      output.writeMessage(3, getCode());
    }
    if (configuration_ != null) {
      output.writeMessage(4, getConfiguration());
    }
    if (allowPrecompiled_ != false) {
      output.writeBool(5, allowPrecompiled_);
    }
    if (nackOnCodeCacheMiss_ != false) {
      output.writeBool(6, nackOnCodeCacheMiss_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getVmIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, vmId_);
    }
    if (!getRuntimeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, runtime_);
    }
    if (code_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getCode());
    }
    if (configuration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getConfiguration());
    }
    if (allowPrecompiled_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, allowPrecompiled_);
    }
    if (nackOnCodeCacheMiss_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, nackOnCodeCacheMiss_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.wasm.v3.VmConfig)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.wasm.v3.VmConfig other = (io.envoyproxy.envoy.extensions.wasm.v3.VmConfig) obj;

    if (!getVmId()
        .equals(other.getVmId())) return false;
    if (!getRuntime()
        .equals(other.getRuntime())) return false;
    if (hasCode() != other.hasCode()) return false;
    if (hasCode()) {
      if (!getCode()
          .equals(other.getCode())) return false;
    }
    if (hasConfiguration() != other.hasConfiguration()) return false;
    if (hasConfiguration()) {
      if (!getConfiguration()
          .equals(other.getConfiguration())) return false;
    }
    if (getAllowPrecompiled()
        != other.getAllowPrecompiled()) return false;
    if (getNackOnCodeCacheMiss()
        != other.getNackOnCodeCacheMiss()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VM_ID_FIELD_NUMBER;
    hash = (53 * hash) + getVmId().hashCode();
    hash = (37 * hash) + RUNTIME_FIELD_NUMBER;
    hash = (53 * hash) + getRuntime().hashCode();
    if (hasCode()) {
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode().hashCode();
    }
    if (hasConfiguration()) {
      hash = (37 * hash) + CONFIGURATION_FIELD_NUMBER;
      hash = (53 * hash) + getConfiguration().hashCode();
    }
    hash = (37 * hash) + ALLOW_PRECOMPILED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAllowPrecompiled());
    hash = (37 * hash) + NACK_ON_CODE_CACHE_MISS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNackOnCodeCacheMiss());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.wasm.v3.VmConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.wasm.v3.VmConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.wasm.v3.VmConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.wasm.v3.VmConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.wasm.v3.VmConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.wasm.v3.VmConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.wasm.v3.VmConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.wasm.v3.VmConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.wasm.v3.VmConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.wasm.v3.VmConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.wasm.v3.VmConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.wasm.v3.VmConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.wasm.v3.VmConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Configuration for a Wasm VM.
   * [#next-free-field: 7]
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.wasm.v3.VmConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.wasm.v3.VmConfig)
      io.envoyproxy.envoy.extensions.wasm.v3.VmConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.wasm.v3.WasmProto.internal_static_envoy_extensions_wasm_v3_VmConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.wasm.v3.WasmProto.internal_static_envoy_extensions_wasm_v3_VmConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.wasm.v3.VmConfig.class, io.envoyproxy.envoy.extensions.wasm.v3.VmConfig.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.wasm.v3.VmConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      vmId_ = "";

      runtime_ = "";

      if (codeBuilder_ == null) {
        code_ = null;
      } else {
        code_ = null;
        codeBuilder_ = null;
      }
      if (configurationBuilder_ == null) {
        configuration_ = null;
      } else {
        configuration_ = null;
        configurationBuilder_ = null;
      }
      allowPrecompiled_ = false;

      nackOnCodeCacheMiss_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.wasm.v3.WasmProto.internal_static_envoy_extensions_wasm_v3_VmConfig_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.wasm.v3.VmConfig getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.wasm.v3.VmConfig.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.wasm.v3.VmConfig build() {
      io.envoyproxy.envoy.extensions.wasm.v3.VmConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.wasm.v3.VmConfig buildPartial() {
      io.envoyproxy.envoy.extensions.wasm.v3.VmConfig result = new io.envoyproxy.envoy.extensions.wasm.v3.VmConfig(this);
      result.vmId_ = vmId_;
      result.runtime_ = runtime_;
      if (codeBuilder_ == null) {
        result.code_ = code_;
      } else {
        result.code_ = codeBuilder_.build();
      }
      if (configurationBuilder_ == null) {
        result.configuration_ = configuration_;
      } else {
        result.configuration_ = configurationBuilder_.build();
      }
      result.allowPrecompiled_ = allowPrecompiled_;
      result.nackOnCodeCacheMiss_ = nackOnCodeCacheMiss_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.wasm.v3.VmConfig) {
        return mergeFrom((io.envoyproxy.envoy.extensions.wasm.v3.VmConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.wasm.v3.VmConfig other) {
      if (other == io.envoyproxy.envoy.extensions.wasm.v3.VmConfig.getDefaultInstance()) return this;
      if (!other.getVmId().isEmpty()) {
        vmId_ = other.vmId_;
        onChanged();
      }
      if (!other.getRuntime().isEmpty()) {
        runtime_ = other.runtime_;
        onChanged();
      }
      if (other.hasCode()) {
        mergeCode(other.getCode());
      }
      if (other.hasConfiguration()) {
        mergeConfiguration(other.getConfiguration());
      }
      if (other.getAllowPrecompiled() != false) {
        setAllowPrecompiled(other.getAllowPrecompiled());
      }
      if (other.getNackOnCodeCacheMiss() != false) {
        setNackOnCodeCacheMiss(other.getNackOnCodeCacheMiss());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.wasm.v3.VmConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.wasm.v3.VmConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object vmId_ = "";
    /**
     * <pre>
     * An ID which will be used along with a hash of the wasm code (or the name of the registered Null
     * VM plugin) to determine which VM will be used for the plugin. All plugins which use the same
     * *vm_id* and code will use the same VM. May be left blank. Sharing a VM between plugins can
     * reduce memory utilization and make sharing of data easier which may have security implications.
     * See ref: "TODO: add ref" for details.
     * </pre>
     *
     * <code>string vm_id = 1;</code>
     * @return The vmId.
     */
    public java.lang.String getVmId() {
      java.lang.Object ref = vmId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        vmId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * An ID which will be used along with a hash of the wasm code (or the name of the registered Null
     * VM plugin) to determine which VM will be used for the plugin. All plugins which use the same
     * *vm_id* and code will use the same VM. May be left blank. Sharing a VM between plugins can
     * reduce memory utilization and make sharing of data easier which may have security implications.
     * See ref: "TODO: add ref" for details.
     * </pre>
     *
     * <code>string vm_id = 1;</code>
     * @return The bytes for vmId.
     */
    public com.google.protobuf.ByteString
        getVmIdBytes() {
      java.lang.Object ref = vmId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vmId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * An ID which will be used along with a hash of the wasm code (or the name of the registered Null
     * VM plugin) to determine which VM will be used for the plugin. All plugins which use the same
     * *vm_id* and code will use the same VM. May be left blank. Sharing a VM between plugins can
     * reduce memory utilization and make sharing of data easier which may have security implications.
     * See ref: "TODO: add ref" for details.
     * </pre>
     *
     * <code>string vm_id = 1;</code>
     * @param value The vmId to set.
     * @return This builder for chaining.
     */
    public Builder setVmId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      vmId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An ID which will be used along with a hash of the wasm code (or the name of the registered Null
     * VM plugin) to determine which VM will be used for the plugin. All plugins which use the same
     * *vm_id* and code will use the same VM. May be left blank. Sharing a VM between plugins can
     * reduce memory utilization and make sharing of data easier which may have security implications.
     * See ref: "TODO: add ref" for details.
     * </pre>
     *
     * <code>string vm_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearVmId() {
      
      vmId_ = getDefaultInstance().getVmId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An ID which will be used along with a hash of the wasm code (or the name of the registered Null
     * VM plugin) to determine which VM will be used for the plugin. All plugins which use the same
     * *vm_id* and code will use the same VM. May be left blank. Sharing a VM between plugins can
     * reduce memory utilization and make sharing of data easier which may have security implications.
     * See ref: "TODO: add ref" for details.
     * </pre>
     *
     * <code>string vm_id = 1;</code>
     * @param value The bytes for vmId to set.
     * @return This builder for chaining.
     */
    public Builder setVmIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      vmId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object runtime_ = "";
    /**
     * <pre>
     * The Wasm runtime type.
     * Available Wasm runtime types are registered as extensions. The following runtimes are included
     * in Envoy code base:
     * .. _extension_envoy.wasm.runtime.null:
     * **envoy.wasm.runtime.null**: Null sandbox, the Wasm module must be compiled and linked into the
     * Envoy binary. The registered name is given in the *code* field as *inline_string*.
     * .. _extension_envoy.wasm.runtime.v8:
     * **envoy.wasm.runtime.v8**: `V8 &lt;https://v8.dev/&gt;`_-based WebAssembly runtime.
     * .. _extension_envoy.wasm.runtime.wavm:
     * **envoy.wasm.runtime.wavm**: `WAVM &lt;https://wavm.github.io/&gt;`_-based WebAssembly runtime.
     * This runtime is not enabled in the official build.
     * .. _extension_envoy.wasm.runtime.wasmtime:
     * **envoy.wasm.runtime.wasmtime**: `Wasmtime &lt;https://wasmtime.dev/&gt;`_-based WebAssembly runtime.
     * This runtime is not enabled in the official build.
     * </pre>
     *
     * <code>string runtime = 2 [(.validate.rules) = { ... }</code>
     * @return The runtime.
     */
    public java.lang.String getRuntime() {
      java.lang.Object ref = runtime_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        runtime_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The Wasm runtime type.
     * Available Wasm runtime types are registered as extensions. The following runtimes are included
     * in Envoy code base:
     * .. _extension_envoy.wasm.runtime.null:
     * **envoy.wasm.runtime.null**: Null sandbox, the Wasm module must be compiled and linked into the
     * Envoy binary. The registered name is given in the *code* field as *inline_string*.
     * .. _extension_envoy.wasm.runtime.v8:
     * **envoy.wasm.runtime.v8**: `V8 &lt;https://v8.dev/&gt;`_-based WebAssembly runtime.
     * .. _extension_envoy.wasm.runtime.wavm:
     * **envoy.wasm.runtime.wavm**: `WAVM &lt;https://wavm.github.io/&gt;`_-based WebAssembly runtime.
     * This runtime is not enabled in the official build.
     * .. _extension_envoy.wasm.runtime.wasmtime:
     * **envoy.wasm.runtime.wasmtime**: `Wasmtime &lt;https://wasmtime.dev/&gt;`_-based WebAssembly runtime.
     * This runtime is not enabled in the official build.
     * </pre>
     *
     * <code>string runtime = 2 [(.validate.rules) = { ... }</code>
     * @return The bytes for runtime.
     */
    public com.google.protobuf.ByteString
        getRuntimeBytes() {
      java.lang.Object ref = runtime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        runtime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The Wasm runtime type.
     * Available Wasm runtime types are registered as extensions. The following runtimes are included
     * in Envoy code base:
     * .. _extension_envoy.wasm.runtime.null:
     * **envoy.wasm.runtime.null**: Null sandbox, the Wasm module must be compiled and linked into the
     * Envoy binary. The registered name is given in the *code* field as *inline_string*.
     * .. _extension_envoy.wasm.runtime.v8:
     * **envoy.wasm.runtime.v8**: `V8 &lt;https://v8.dev/&gt;`_-based WebAssembly runtime.
     * .. _extension_envoy.wasm.runtime.wavm:
     * **envoy.wasm.runtime.wavm**: `WAVM &lt;https://wavm.github.io/&gt;`_-based WebAssembly runtime.
     * This runtime is not enabled in the official build.
     * .. _extension_envoy.wasm.runtime.wasmtime:
     * **envoy.wasm.runtime.wasmtime**: `Wasmtime &lt;https://wasmtime.dev/&gt;`_-based WebAssembly runtime.
     * This runtime is not enabled in the official build.
     * </pre>
     *
     * <code>string runtime = 2 [(.validate.rules) = { ... }</code>
     * @param value The runtime to set.
     * @return This builder for chaining.
     */
    public Builder setRuntime(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      runtime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Wasm runtime type.
     * Available Wasm runtime types are registered as extensions. The following runtimes are included
     * in Envoy code base:
     * .. _extension_envoy.wasm.runtime.null:
     * **envoy.wasm.runtime.null**: Null sandbox, the Wasm module must be compiled and linked into the
     * Envoy binary. The registered name is given in the *code* field as *inline_string*.
     * .. _extension_envoy.wasm.runtime.v8:
     * **envoy.wasm.runtime.v8**: `V8 &lt;https://v8.dev/&gt;`_-based WebAssembly runtime.
     * .. _extension_envoy.wasm.runtime.wavm:
     * **envoy.wasm.runtime.wavm**: `WAVM &lt;https://wavm.github.io/&gt;`_-based WebAssembly runtime.
     * This runtime is not enabled in the official build.
     * .. _extension_envoy.wasm.runtime.wasmtime:
     * **envoy.wasm.runtime.wasmtime**: `Wasmtime &lt;https://wasmtime.dev/&gt;`_-based WebAssembly runtime.
     * This runtime is not enabled in the official build.
     * </pre>
     *
     * <code>string runtime = 2 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearRuntime() {
      
      runtime_ = getDefaultInstance().getRuntime();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The Wasm runtime type.
     * Available Wasm runtime types are registered as extensions. The following runtimes are included
     * in Envoy code base:
     * .. _extension_envoy.wasm.runtime.null:
     * **envoy.wasm.runtime.null**: Null sandbox, the Wasm module must be compiled and linked into the
     * Envoy binary. The registered name is given in the *code* field as *inline_string*.
     * .. _extension_envoy.wasm.runtime.v8:
     * **envoy.wasm.runtime.v8**: `V8 &lt;https://v8.dev/&gt;`_-based WebAssembly runtime.
     * .. _extension_envoy.wasm.runtime.wavm:
     * **envoy.wasm.runtime.wavm**: `WAVM &lt;https://wavm.github.io/&gt;`_-based WebAssembly runtime.
     * This runtime is not enabled in the official build.
     * .. _extension_envoy.wasm.runtime.wasmtime:
     * **envoy.wasm.runtime.wasmtime**: `Wasmtime &lt;https://wasmtime.dev/&gt;`_-based WebAssembly runtime.
     * This runtime is not enabled in the official build.
     * </pre>
     *
     * <code>string runtime = 2 [(.validate.rules) = { ... }</code>
     * @param value The bytes for runtime to set.
     * @return This builder for chaining.
     */
    public Builder setRuntimeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      runtime_ = value;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.config.core.v3.AsyncDataSource code_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.AsyncDataSource, io.envoyproxy.envoy.config.core.v3.AsyncDataSource.Builder, io.envoyproxy.envoy.config.core.v3.AsyncDataSourceOrBuilder> codeBuilder_;
    /**
     * <pre>
     * The Wasm code that Envoy will execute.
     * </pre>
     *
     * <code>.envoy.config.core.v3.AsyncDataSource code = 3;</code>
     * @return Whether the code field is set.
     */
    public boolean hasCode() {
      return codeBuilder_ != null || code_ != null;
    }
    /**
     * <pre>
     * The Wasm code that Envoy will execute.
     * </pre>
     *
     * <code>.envoy.config.core.v3.AsyncDataSource code = 3;</code>
     * @return The code.
     */
    public io.envoyproxy.envoy.config.core.v3.AsyncDataSource getCode() {
      if (codeBuilder_ == null) {
        return code_ == null ? io.envoyproxy.envoy.config.core.v3.AsyncDataSource.getDefaultInstance() : code_;
      } else {
        return codeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The Wasm code that Envoy will execute.
     * </pre>
     *
     * <code>.envoy.config.core.v3.AsyncDataSource code = 3;</code>
     */
    public Builder setCode(io.envoyproxy.envoy.config.core.v3.AsyncDataSource value) {
      if (codeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        code_ = value;
        onChanged();
      } else {
        codeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The Wasm code that Envoy will execute.
     * </pre>
     *
     * <code>.envoy.config.core.v3.AsyncDataSource code = 3;</code>
     */
    public Builder setCode(
        io.envoyproxy.envoy.config.core.v3.AsyncDataSource.Builder builderForValue) {
      if (codeBuilder_ == null) {
        code_ = builderForValue.build();
        onChanged();
      } else {
        codeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The Wasm code that Envoy will execute.
     * </pre>
     *
     * <code>.envoy.config.core.v3.AsyncDataSource code = 3;</code>
     */
    public Builder mergeCode(io.envoyproxy.envoy.config.core.v3.AsyncDataSource value) {
      if (codeBuilder_ == null) {
        if (code_ != null) {
          code_ =
            io.envoyproxy.envoy.config.core.v3.AsyncDataSource.newBuilder(code_).mergeFrom(value).buildPartial();
        } else {
          code_ = value;
        }
        onChanged();
      } else {
        codeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The Wasm code that Envoy will execute.
     * </pre>
     *
     * <code>.envoy.config.core.v3.AsyncDataSource code = 3;</code>
     */
    public Builder clearCode() {
      if (codeBuilder_ == null) {
        code_ = null;
        onChanged();
      } else {
        code_ = null;
        codeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The Wasm code that Envoy will execute.
     * </pre>
     *
     * <code>.envoy.config.core.v3.AsyncDataSource code = 3;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.AsyncDataSource.Builder getCodeBuilder() {
      
      onChanged();
      return getCodeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The Wasm code that Envoy will execute.
     * </pre>
     *
     * <code>.envoy.config.core.v3.AsyncDataSource code = 3;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.AsyncDataSourceOrBuilder getCodeOrBuilder() {
      if (codeBuilder_ != null) {
        return codeBuilder_.getMessageOrBuilder();
      } else {
        return code_ == null ?
            io.envoyproxy.envoy.config.core.v3.AsyncDataSource.getDefaultInstance() : code_;
      }
    }
    /**
     * <pre>
     * The Wasm code that Envoy will execute.
     * </pre>
     *
     * <code>.envoy.config.core.v3.AsyncDataSource code = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.AsyncDataSource, io.envoyproxy.envoy.config.core.v3.AsyncDataSource.Builder, io.envoyproxy.envoy.config.core.v3.AsyncDataSourceOrBuilder> 
        getCodeFieldBuilder() {
      if (codeBuilder_ == null) {
        codeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.AsyncDataSource, io.envoyproxy.envoy.config.core.v3.AsyncDataSource.Builder, io.envoyproxy.envoy.config.core.v3.AsyncDataSourceOrBuilder>(
                getCode(),
                getParentForChildren(),
                isClean());
        code_ = null;
      }
      return codeBuilder_;
    }

    private com.google.protobuf.Any configuration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> configurationBuilder_;
    /**
     * <pre>
     * The Wasm configuration used in initialization of a new VM
     * (proxy_on_start). `google.protobuf.Struct` is serialized as JSON before
     * passing it to the plugin. `google.protobuf.BytesValue` and
     * `google.protobuf.StringValue` are passed directly without the wrapper.
     * </pre>
     *
     * <code>.google.protobuf.Any configuration = 4;</code>
     * @return Whether the configuration field is set.
     */
    public boolean hasConfiguration() {
      return configurationBuilder_ != null || configuration_ != null;
    }
    /**
     * <pre>
     * The Wasm configuration used in initialization of a new VM
     * (proxy_on_start). `google.protobuf.Struct` is serialized as JSON before
     * passing it to the plugin. `google.protobuf.BytesValue` and
     * `google.protobuf.StringValue` are passed directly without the wrapper.
     * </pre>
     *
     * <code>.google.protobuf.Any configuration = 4;</code>
     * @return The configuration.
     */
    public com.google.protobuf.Any getConfiguration() {
      if (configurationBuilder_ == null) {
        return configuration_ == null ? com.google.protobuf.Any.getDefaultInstance() : configuration_;
      } else {
        return configurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The Wasm configuration used in initialization of a new VM
     * (proxy_on_start). `google.protobuf.Struct` is serialized as JSON before
     * passing it to the plugin. `google.protobuf.BytesValue` and
     * `google.protobuf.StringValue` are passed directly without the wrapper.
     * </pre>
     *
     * <code>.google.protobuf.Any configuration = 4;</code>
     */
    public Builder setConfiguration(com.google.protobuf.Any value) {
      if (configurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        configuration_ = value;
        onChanged();
      } else {
        configurationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The Wasm configuration used in initialization of a new VM
     * (proxy_on_start). `google.protobuf.Struct` is serialized as JSON before
     * passing it to the plugin. `google.protobuf.BytesValue` and
     * `google.protobuf.StringValue` are passed directly without the wrapper.
     * </pre>
     *
     * <code>.google.protobuf.Any configuration = 4;</code>
     */
    public Builder setConfiguration(
        com.google.protobuf.Any.Builder builderForValue) {
      if (configurationBuilder_ == null) {
        configuration_ = builderForValue.build();
        onChanged();
      } else {
        configurationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The Wasm configuration used in initialization of a new VM
     * (proxy_on_start). `google.protobuf.Struct` is serialized as JSON before
     * passing it to the plugin. `google.protobuf.BytesValue` and
     * `google.protobuf.StringValue` are passed directly without the wrapper.
     * </pre>
     *
     * <code>.google.protobuf.Any configuration = 4;</code>
     */
    public Builder mergeConfiguration(com.google.protobuf.Any value) {
      if (configurationBuilder_ == null) {
        if (configuration_ != null) {
          configuration_ =
            com.google.protobuf.Any.newBuilder(configuration_).mergeFrom(value).buildPartial();
        } else {
          configuration_ = value;
        }
        onChanged();
      } else {
        configurationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The Wasm configuration used in initialization of a new VM
     * (proxy_on_start). `google.protobuf.Struct` is serialized as JSON before
     * passing it to the plugin. `google.protobuf.BytesValue` and
     * `google.protobuf.StringValue` are passed directly without the wrapper.
     * </pre>
     *
     * <code>.google.protobuf.Any configuration = 4;</code>
     */
    public Builder clearConfiguration() {
      if (configurationBuilder_ == null) {
        configuration_ = null;
        onChanged();
      } else {
        configuration_ = null;
        configurationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The Wasm configuration used in initialization of a new VM
     * (proxy_on_start). `google.protobuf.Struct` is serialized as JSON before
     * passing it to the plugin. `google.protobuf.BytesValue` and
     * `google.protobuf.StringValue` are passed directly without the wrapper.
     * </pre>
     *
     * <code>.google.protobuf.Any configuration = 4;</code>
     */
    public com.google.protobuf.Any.Builder getConfigurationBuilder() {
      
      onChanged();
      return getConfigurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The Wasm configuration used in initialization of a new VM
     * (proxy_on_start). `google.protobuf.Struct` is serialized as JSON before
     * passing it to the plugin. `google.protobuf.BytesValue` and
     * `google.protobuf.StringValue` are passed directly without the wrapper.
     * </pre>
     *
     * <code>.google.protobuf.Any configuration = 4;</code>
     */
    public com.google.protobuf.AnyOrBuilder getConfigurationOrBuilder() {
      if (configurationBuilder_ != null) {
        return configurationBuilder_.getMessageOrBuilder();
      } else {
        return configuration_ == null ?
            com.google.protobuf.Any.getDefaultInstance() : configuration_;
      }
    }
    /**
     * <pre>
     * The Wasm configuration used in initialization of a new VM
     * (proxy_on_start). `google.protobuf.Struct` is serialized as JSON before
     * passing it to the plugin. `google.protobuf.BytesValue` and
     * `google.protobuf.StringValue` are passed directly without the wrapper.
     * </pre>
     *
     * <code>.google.protobuf.Any configuration = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
        getConfigurationFieldBuilder() {
      if (configurationBuilder_ == null) {
        configurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                getConfiguration(),
                getParentForChildren(),
                isClean());
        configuration_ = null;
      }
      return configurationBuilder_;
    }

    private boolean allowPrecompiled_ ;
    /**
     * <pre>
     * Allow the wasm file to include pre-compiled code on VMs which support it.
     * Warning: this should only be enable for trusted sources as the precompiled code is not
     * verified.
     * </pre>
     *
     * <code>bool allow_precompiled = 5;</code>
     * @return The allowPrecompiled.
     */
    @java.lang.Override
    public boolean getAllowPrecompiled() {
      return allowPrecompiled_;
    }
    /**
     * <pre>
     * Allow the wasm file to include pre-compiled code on VMs which support it.
     * Warning: this should only be enable for trusted sources as the precompiled code is not
     * verified.
     * </pre>
     *
     * <code>bool allow_precompiled = 5;</code>
     * @param value The allowPrecompiled to set.
     * @return This builder for chaining.
     */
    public Builder setAllowPrecompiled(boolean value) {
      
      allowPrecompiled_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Allow the wasm file to include pre-compiled code on VMs which support it.
     * Warning: this should only be enable for trusted sources as the precompiled code is not
     * verified.
     * </pre>
     *
     * <code>bool allow_precompiled = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllowPrecompiled() {
      
      allowPrecompiled_ = false;
      onChanged();
      return this;
    }

    private boolean nackOnCodeCacheMiss_ ;
    /**
     * <pre>
     * If true and the code needs to be remotely fetched and it is not in the cache then NACK the configuration
     * update and do a background fetch to fill the cache, otherwise fetch the code asynchronously and enter
     * warming state.
     * </pre>
     *
     * <code>bool nack_on_code_cache_miss = 6;</code>
     * @return The nackOnCodeCacheMiss.
     */
    @java.lang.Override
    public boolean getNackOnCodeCacheMiss() {
      return nackOnCodeCacheMiss_;
    }
    /**
     * <pre>
     * If true and the code needs to be remotely fetched and it is not in the cache then NACK the configuration
     * update and do a background fetch to fill the cache, otherwise fetch the code asynchronously and enter
     * warming state.
     * </pre>
     *
     * <code>bool nack_on_code_cache_miss = 6;</code>
     * @param value The nackOnCodeCacheMiss to set.
     * @return This builder for chaining.
     */
    public Builder setNackOnCodeCacheMiss(boolean value) {
      
      nackOnCodeCacheMiss_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true and the code needs to be remotely fetched and it is not in the cache then NACK the configuration
     * update and do a background fetch to fill the cache, otherwise fetch the code asynchronously and enter
     * warming state.
     * </pre>
     *
     * <code>bool nack_on_code_cache_miss = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearNackOnCodeCacheMiss() {
      
      nackOnCodeCacheMiss_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.wasm.v3.VmConfig)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.wasm.v3.VmConfig)
  private static final io.envoyproxy.envoy.extensions.wasm.v3.VmConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.wasm.v3.VmConfig();
  }

  public static io.envoyproxy.envoy.extensions.wasm.v3.VmConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VmConfig>
      PARSER = new com.google.protobuf.AbstractParser<VmConfig>() {
    @java.lang.Override
    public VmConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new VmConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<VmConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VmConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.wasm.v3.VmConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

