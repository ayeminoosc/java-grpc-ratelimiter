// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/access_loggers/grpc/v3/als.proto

package io.envoyproxy.envoy.extensions.access_loggers.grpc.v3;

public interface CommonGrpcAccessLogConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.access_loggers.grpc.v3.CommonGrpcAccessLogConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The friendly name of the access log to be returned in :ref:`StreamAccessLogsMessage.Identifier
   * &lt;envoy_api_msg_service.accesslog.v3.StreamAccessLogsMessage.Identifier&gt;`. This allows the
   * access log server to differentiate between different access logs coming from the same Envoy.
   * </pre>
   *
   * <code>string log_name = 1 [(.validate.rules) = { ... }</code>
   * @return The logName.
   */
  java.lang.String getLogName();
  /**
   * <pre>
   * The friendly name of the access log to be returned in :ref:`StreamAccessLogsMessage.Identifier
   * &lt;envoy_api_msg_service.accesslog.v3.StreamAccessLogsMessage.Identifier&gt;`. This allows the
   * access log server to differentiate between different access logs coming from the same Envoy.
   * </pre>
   *
   * <code>string log_name = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for logName.
   */
  com.google.protobuf.ByteString
      getLogNameBytes();

  /**
   * <pre>
   * The gRPC service for the access log service.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the grpcService field is set.
   */
  boolean hasGrpcService();
  /**
   * <pre>
   * The gRPC service for the access log service.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
   * @return The grpcService.
   */
  io.envoyproxy.envoy.config.core.v3.GrpcService getGrpcService();
  /**
   * <pre>
   * The gRPC service for the access log service.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 2 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder getGrpcServiceOrBuilder();

  /**
   * <pre>
   * API version for access logs service transport protocol. This describes the access logs service
   * gRPC endpoint and version of messages used on the wire.
   * </pre>
   *
   * <code>.envoy.config.core.v3.ApiVersion transport_api_version = 6 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for transportApiVersion.
   */
  int getTransportApiVersionValue();
  /**
   * <pre>
   * API version for access logs service transport protocol. This describes the access logs service
   * gRPC endpoint and version of messages used on the wire.
   * </pre>
   *
   * <code>.envoy.config.core.v3.ApiVersion transport_api_version = 6 [(.validate.rules) = { ... }</code>
   * @return The transportApiVersion.
   */
  io.envoyproxy.envoy.config.core.v3.ApiVersion getTransportApiVersion();

  /**
   * <pre>
   * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
   * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
   * 1 second.
   * </pre>
   *
   * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the bufferFlushInterval field is set.
   */
  boolean hasBufferFlushInterval();
  /**
   * <pre>
   * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
   * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
   * 1 second.
   * </pre>
   *
   * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
   * @return The bufferFlushInterval.
   */
  com.google.protobuf.Duration getBufferFlushInterval();
  /**
   * <pre>
   * Interval for flushing access logs to the gRPC stream. Logger will flush requests every time
   * this interval is elapsed, or when batch size limit is hit, whichever comes first. Defaults to
   * 1 second.
   * </pre>
   *
   * <code>.google.protobuf.Duration buffer_flush_interval = 3 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.DurationOrBuilder getBufferFlushIntervalOrBuilder();

  /**
   * <pre>
   * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
   * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
   * to zero effectively disables the batching. Defaults to 16384.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
   * @return Whether the bufferSizeBytes field is set.
   */
  boolean hasBufferSizeBytes();
  /**
   * <pre>
   * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
   * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
   * to zero effectively disables the batching. Defaults to 16384.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
   * @return The bufferSizeBytes.
   */
  com.google.protobuf.UInt32Value getBufferSizeBytes();
  /**
   * <pre>
   * Soft size limit in bytes for access log entries buffer. Logger will buffer requests until
   * this limit it hit, or every time flush interval is elapsed, whichever comes first. Setting it
   * to zero effectively disables the batching. Defaults to 16384.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value buffer_size_bytes = 4;</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getBufferSizeBytesOrBuilder();

  /**
   * <pre>
   * Additional filter state objects to log in :ref:`filter_state_objects
   * &lt;envoy_api_field_data.accesslog.v3.AccessLogCommon.filter_state_objects&gt;`.
   * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
   * </pre>
   *
   * <code>repeated string filter_state_objects_to_log = 5;</code>
   * @return A list containing the filterStateObjectsToLog.
   */
  java.util.List<java.lang.String>
      getFilterStateObjectsToLogList();
  /**
   * <pre>
   * Additional filter state objects to log in :ref:`filter_state_objects
   * &lt;envoy_api_field_data.accesslog.v3.AccessLogCommon.filter_state_objects&gt;`.
   * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
   * </pre>
   *
   * <code>repeated string filter_state_objects_to_log = 5;</code>
   * @return The count of filterStateObjectsToLog.
   */
  int getFilterStateObjectsToLogCount();
  /**
   * <pre>
   * Additional filter state objects to log in :ref:`filter_state_objects
   * &lt;envoy_api_field_data.accesslog.v3.AccessLogCommon.filter_state_objects&gt;`.
   * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
   * </pre>
   *
   * <code>repeated string filter_state_objects_to_log = 5;</code>
   * @param index The index of the element to return.
   * @return The filterStateObjectsToLog at the given index.
   */
  java.lang.String getFilterStateObjectsToLog(int index);
  /**
   * <pre>
   * Additional filter state objects to log in :ref:`filter_state_objects
   * &lt;envoy_api_field_data.accesslog.v3.AccessLogCommon.filter_state_objects&gt;`.
   * Logger will call `FilterState::Object::serializeAsProto` to serialize the filter state object.
   * </pre>
   *
   * <code>repeated string filter_state_objects_to_log = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the filterStateObjectsToLog at the given index.
   */
  com.google.protobuf.ByteString
      getFilterStateObjectsToLogBytes(int index);
}
