// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/retry/priority/previous_priorities/v3/previous_priorities_config.proto

package io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3;

/**
 * <pre>
 * A retry host selector that attempts to spread retries between priorities, even if certain
 * priorities would not normally be attempted due to higher priorities being available.
 * As priorities get excluded, load will be distributed amongst the remaining healthy priorities
 * based on the relative health of the priorities, matching how load is distributed during regular
 * host selection. For example, given priority healths of {100, 50, 50}, the original load will be
 * {100, 0, 0} (since P0 has capacity to handle 100% of the traffic). If P0 is excluded, the load
 * changes to {0, 50, 50}, because P1 is only able to handle 50% of the traffic, causing the
 * remaining to spill over to P2.
 * Each priority attempted will be excluded until there are no healthy priorities left, at which
 * point the list of attempted priorities will be reset, essentially starting from the beginning.
 * For example, given three priorities P0, P1, P2 with healthy % of 100, 0 and 50 respectively, the
 * following sequence of priorities would be selected (assuming update_frequency = 1):
 * Attempt 1: P0 (P0 is 100% healthy)
 * Attempt 2: P2 (P0 already attempted, P2 only healthy priority)
 * Attempt 3: P0 (no healthy priorities, reset)
 * Attempt 4: P2
 * In the case of all upstream hosts being unhealthy, no adjustments will be made to the original
 * priority load, so behavior should be identical to not using this plugin.
 * Using this PriorityFilter requires rebuilding the priority load, which runs in O(# of
 * priorities), which might incur significant overhead for clusters with many priorities.
 * [#extension: envoy.retry_priorities.previous_priorities]
 * </pre>
 *
 * Protobuf type {@code envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig}
 */
public final class PreviousPrioritiesConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig)
    PreviousPrioritiesConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PreviousPrioritiesConfig.newBuilder() to construct.
  private PreviousPrioritiesConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PreviousPrioritiesConfig() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PreviousPrioritiesConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PreviousPrioritiesConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            updateFrequency_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfigProto.internal_static_envoy_extensions_retry_priority_previous_priorities_v3_PreviousPrioritiesConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfigProto.internal_static_envoy_extensions_retry_priority_previous_priorities_v3_PreviousPrioritiesConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig.class, io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig.Builder.class);
  }

  public static final int UPDATE_FREQUENCY_FIELD_NUMBER = 1;
  private int updateFrequency_;
  /**
   * <pre>
   * How often the priority load should be updated based on previously attempted priorities. Useful
   * to allow each priorities to receive more than one request before being excluded or to reduce
   * the number of times that the priority load has to be recomputed.
   * For example, by setting this to 2, then the first two attempts (initial attempt and first
   * retry) will use the unmodified priority load. The third and fourth attempt will use priority
   * load which excludes the priorities routed to with the first two attempts, and the fifth and
   * sixth attempt will use the priority load excluding the priorities used for the first four
   * attempts.
   * Must be greater than 0.
   * </pre>
   *
   * <code>int32 update_frequency = 1 [(.validate.rules) = { ... }</code>
   * @return The updateFrequency.
   */
  @java.lang.Override
  public int getUpdateFrequency() {
    return updateFrequency_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (updateFrequency_ != 0) {
      output.writeInt32(1, updateFrequency_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (updateFrequency_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, updateFrequency_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig other = (io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig) obj;

    if (getUpdateFrequency()
        != other.getUpdateFrequency()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + UPDATE_FREQUENCY_FIELD_NUMBER;
    hash = (53 * hash) + getUpdateFrequency();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A retry host selector that attempts to spread retries between priorities, even if certain
   * priorities would not normally be attempted due to higher priorities being available.
   * As priorities get excluded, load will be distributed amongst the remaining healthy priorities
   * based on the relative health of the priorities, matching how load is distributed during regular
   * host selection. For example, given priority healths of {100, 50, 50}, the original load will be
   * {100, 0, 0} (since P0 has capacity to handle 100% of the traffic). If P0 is excluded, the load
   * changes to {0, 50, 50}, because P1 is only able to handle 50% of the traffic, causing the
   * remaining to spill over to P2.
   * Each priority attempted will be excluded until there are no healthy priorities left, at which
   * point the list of attempted priorities will be reset, essentially starting from the beginning.
   * For example, given three priorities P0, P1, P2 with healthy % of 100, 0 and 50 respectively, the
   * following sequence of priorities would be selected (assuming update_frequency = 1):
   * Attempt 1: P0 (P0 is 100% healthy)
   * Attempt 2: P2 (P0 already attempted, P2 only healthy priority)
   * Attempt 3: P0 (no healthy priorities, reset)
   * Attempt 4: P2
   * In the case of all upstream hosts being unhealthy, no adjustments will be made to the original
   * priority load, so behavior should be identical to not using this plugin.
   * Using this PriorityFilter requires rebuilding the priority load, which runs in O(# of
   * priorities), which might incur significant overhead for clusters with many priorities.
   * [#extension: envoy.retry_priorities.previous_priorities]
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig)
      io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfigProto.internal_static_envoy_extensions_retry_priority_previous_priorities_v3_PreviousPrioritiesConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfigProto.internal_static_envoy_extensions_retry_priority_previous_priorities_v3_PreviousPrioritiesConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig.class, io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      updateFrequency_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfigProto.internal_static_envoy_extensions_retry_priority_previous_priorities_v3_PreviousPrioritiesConfig_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig build() {
      io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig buildPartial() {
      io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig result = new io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig(this);
      result.updateFrequency_ = updateFrequency_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig) {
        return mergeFrom((io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig other) {
      if (other == io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig.getDefaultInstance()) return this;
      if (other.getUpdateFrequency() != 0) {
        setUpdateFrequency(other.getUpdateFrequency());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int updateFrequency_ ;
    /**
     * <pre>
     * How often the priority load should be updated based on previously attempted priorities. Useful
     * to allow each priorities to receive more than one request before being excluded or to reduce
     * the number of times that the priority load has to be recomputed.
     * For example, by setting this to 2, then the first two attempts (initial attempt and first
     * retry) will use the unmodified priority load. The third and fourth attempt will use priority
     * load which excludes the priorities routed to with the first two attempts, and the fifth and
     * sixth attempt will use the priority load excluding the priorities used for the first four
     * attempts.
     * Must be greater than 0.
     * </pre>
     *
     * <code>int32 update_frequency = 1 [(.validate.rules) = { ... }</code>
     * @return The updateFrequency.
     */
    @java.lang.Override
    public int getUpdateFrequency() {
      return updateFrequency_;
    }
    /**
     * <pre>
     * How often the priority load should be updated based on previously attempted priorities. Useful
     * to allow each priorities to receive more than one request before being excluded or to reduce
     * the number of times that the priority load has to be recomputed.
     * For example, by setting this to 2, then the first two attempts (initial attempt and first
     * retry) will use the unmodified priority load. The third and fourth attempt will use priority
     * load which excludes the priorities routed to with the first two attempts, and the fifth and
     * sixth attempt will use the priority load excluding the priorities used for the first four
     * attempts.
     * Must be greater than 0.
     * </pre>
     *
     * <code>int32 update_frequency = 1 [(.validate.rules) = { ... }</code>
     * @param value The updateFrequency to set.
     * @return This builder for chaining.
     */
    public Builder setUpdateFrequency(int value) {
      
      updateFrequency_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How often the priority load should be updated based on previously attempted priorities. Useful
     * to allow each priorities to receive more than one request before being excluded or to reduce
     * the number of times that the priority load has to be recomputed.
     * For example, by setting this to 2, then the first two attempts (initial attempt and first
     * retry) will use the unmodified priority load. The third and fourth attempt will use priority
     * load which excludes the priorities routed to with the first two attempts, and the fifth and
     * sixth attempt will use the priority load excluding the priorities used for the first four
     * attempts.
     * Must be greater than 0.
     * </pre>
     *
     * <code>int32 update_frequency = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearUpdateFrequency() {
      
      updateFrequency_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig)
  private static final io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig();
  }

  public static io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PreviousPrioritiesConfig>
      PARSER = new com.google.protobuf.AbstractParser<PreviousPrioritiesConfig>() {
    @java.lang.Override
    public PreviousPrioritiesConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PreviousPrioritiesConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PreviousPrioritiesConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PreviousPrioritiesConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.retry.priority.previous_priorities.v3.PreviousPrioritiesConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

