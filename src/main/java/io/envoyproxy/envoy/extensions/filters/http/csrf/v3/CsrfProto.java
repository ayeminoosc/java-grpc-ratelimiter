// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/csrf/v3/csrf.proto

package io.envoyproxy.envoy.extensions.filters.http.csrf.v3;

public final class CsrfProto {
  private CsrfProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_filters_http_csrf_v3_CsrfPolicy_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_filters_http_csrf_v3_CsrfPolicy_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0envoy/extensions/filters/http/csrf/v3/" +
      "csrf.proto\022%envoy.extensions.filters.htt" +
      "p.csrf.v3\032\037envoy/config/core/v3/base.pro" +
      "to\032\"envoy/type/matcher/v3/string.proto\032\035" +
      "udpa/annotations/status.proto\032!udpa/anno" +
      "tations/versioning.proto\032\027validate/valid" +
      "ate.proto\"\234\002\n\nCsrfPolicy\022P\n\016filter_enabl" +
      "ed\030\001 \001(\0132..envoy.config.core.v3.RuntimeF" +
      "ractionalPercentB\010\372B\005\212\001\002\020\001\022F\n\016shadow_ena" +
      "bled\030\002 \001(\0132..envoy.config.core.v3.Runtim" +
      "eFractionalPercent\022@\n\022additional_origins" +
      "\030\003 \003(\0132$.envoy.type.matcher.v3.StringMat" +
      "cher:2\232\305\210\036-\n+envoy.config.filter.http.cs" +
      "rf.v2.CsrfPolicyBJ\n3io.envoyproxy.envoy." +
      "extensions.filters.http.csrf.v3B\tCsrfPro" +
      "toP\001\272\200\310\321\006\002\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.envoyproxy.envoy.config.core.v3.BaseProto.getDescriptor(),
          io.envoyproxy.envoy.type.matcher.v3.StringProto.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
          udpa.annotations.Versioning.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_envoy_extensions_filters_http_csrf_v3_CsrfPolicy_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_extensions_filters_http_csrf_v3_CsrfPolicy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_filters_http_csrf_v3_CsrfPolicy_descriptor,
        new java.lang.String[] { "FilterEnabled", "ShadowEnabled", "AdditionalOrigins", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(udpa.annotations.Versioning.versioning);
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.envoyproxy.envoy.config.core.v3.BaseProto.getDescriptor();
    io.envoyproxy.envoy.type.matcher.v3.StringProto.getDescriptor();
    udpa.annotations.Status.getDescriptor();
    udpa.annotations.Versioning.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
