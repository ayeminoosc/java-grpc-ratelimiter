// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/header_to_metadata/v3/header_to_metadata.proto

package io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3;

/**
 * Protobuf type {@code envoy.extensions.filters.http.header_to_metadata.v3.Config}
 */
public final class Config extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.header_to_metadata.v3.Config)
    ConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Config.newBuilder() to construct.
  private Config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Config() {
    requestRules_ = java.util.Collections.emptyList();
    responseRules_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Config();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Config(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              requestRules_ = new java.util.ArrayList<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule>();
              mutable_bitField0_ |= 0x00000001;
            }
            requestRules_.add(
                input.readMessage(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              responseRules_ = new java.util.ArrayList<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule>();
              mutable_bitField0_ |= 0x00000002;
            }
            responseRules_.add(
                input.readMessage(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        requestRules_ = java.util.Collections.unmodifiableList(requestRules_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        responseRules_ = java.util.Collections.unmodifiableList(responseRules_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.class, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Builder.class);
  }

  /**
   * Protobuf enum {@code envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType}
   */
  public enum ValueType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STRING = 0;</code>
     */
    STRING(0),
    /**
     * <code>NUMBER = 1;</code>
     */
    NUMBER(1),
    /**
     * <pre>
     * The value is a serialized `protobuf.Value
     * &lt;https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/struct.proto#L62&gt;`_.
     * </pre>
     *
     * <code>PROTOBUF_VALUE = 2;</code>
     */
    PROTOBUF_VALUE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>STRING = 0;</code>
     */
    public static final int STRING_VALUE = 0;
    /**
     * <code>NUMBER = 1;</code>
     */
    public static final int NUMBER_VALUE = 1;
    /**
     * <pre>
     * The value is a serialized `protobuf.Value
     * &lt;https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/struct.proto#L62&gt;`_.
     * </pre>
     *
     * <code>PROTOBUF_VALUE = 2;</code>
     */
    public static final int PROTOBUF_VALUE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ValueType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ValueType forNumber(int value) {
      switch (value) {
        case 0: return STRING;
        case 1: return NUMBER;
        case 2: return PROTOBUF_VALUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ValueType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ValueType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ValueType>() {
            public ValueType findValueByNumber(int number) {
              return ValueType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.getDescriptor().getEnumTypes().get(0);
    }

    private static final ValueType[] VALUES = values();

    public static ValueType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ValueType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType)
  }

  /**
   * <pre>
   * ValueEncode defines the encoding algorithm.
   * </pre>
   *
   * Protobuf enum {@code envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode}
   */
  public enum ValueEncode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The value is not encoded.
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <pre>
     * The value is encoded in `Base64 &lt;https://tools.ietf.org/html/rfc4648#section-4&gt;`_.
     * Note: this is mostly used for STRING and PROTOBUF_VALUE to escape the
     * non-ASCII characters in the header.
     * </pre>
     *
     * <code>BASE64 = 1;</code>
     */
    BASE64(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * The value is not encoded.
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <pre>
     * The value is encoded in `Base64 &lt;https://tools.ietf.org/html/rfc4648#section-4&gt;`_.
     * Note: this is mostly used for STRING and PROTOBUF_VALUE to escape the
     * non-ASCII characters in the header.
     * </pre>
     *
     * <code>BASE64 = 1;</code>
     */
    public static final int BASE64_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ValueEncode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ValueEncode forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return BASE64;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ValueEncode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ValueEncode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ValueEncode>() {
            public ValueEncode findValueByNumber(int number) {
              return ValueEncode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.getDescriptor().getEnumTypes().get(1);
    }

    private static final ValueEncode[] VALUES = values();

    public static ValueEncode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ValueEncode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode)
  }

  public interface KeyValuePairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The namespace — if this is empty, the filter's namespace will be used.
     * </pre>
     *
     * <code>string metadata_namespace = 1;</code>
     * @return The metadataNamespace.
     */
    java.lang.String getMetadataNamespace();
    /**
     * <pre>
     * The namespace — if this is empty, the filter's namespace will be used.
     * </pre>
     *
     * <code>string metadata_namespace = 1;</code>
     * @return The bytes for metadataNamespace.
     */
    com.google.protobuf.ByteString
        getMetadataNamespaceBytes();

    /**
     * <pre>
     * The key to use within the namespace.
     * </pre>
     *
     * <code>string key = 2 [(.validate.rules) = { ... }</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <pre>
     * The key to use within the namespace.
     * </pre>
     *
     * <code>string key = 2 [(.validate.rules) = { ... }</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <pre>
     * The value to pair with the given key.
     * When used for a
     * :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`
     * case, if value is non-empty it'll be used instead of the header value. If both are empty, no metadata is added.
     * When used for a :ref:`on_header_missing &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_missing&gt;`
     * case, a non-empty value must be provided otherwise no metadata is added.
     * </pre>
     *
     * <code>string value = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The value.
     */
    java.lang.String getValue();
    /**
     * <pre>
     * The value to pair with the given key.
     * When used for a
     * :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`
     * case, if value is non-empty it'll be used instead of the header value. If both are empty, no metadata is added.
     * When used for a :ref:`on_header_missing &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_missing&gt;`
     * case, a non-empty value must be provided otherwise no metadata is added.
     * </pre>
     *
     * <code>string value = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The bytes for value.
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <pre>
     * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
     * is used as-is.
     * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
     * Note: if the `value` field is non-empty this field should be empty.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return Whether the regexValueRewrite field is set.
     */
    boolean hasRegexValueRewrite();
    /**
     * <pre>
     * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
     * is used as-is.
     * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
     * Note: if the `value` field is non-empty this field should be empty.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The regexValueRewrite.
     */
    io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute getRegexValueRewrite();
    /**
     * <pre>
     * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
     * is used as-is.
     * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
     * Note: if the `value` field is non-empty this field should be empty.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder getRegexValueRewriteOrBuilder();

    /**
     * <pre>
     * The value's type — defaults to string.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType type = 4 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * The value's type — defaults to string.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType type = 4 [(.validate.rules) = { ... }</code>
     * @return The type.
     */
    io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType getType();

    /**
     * <pre>
     * How is the value encoded, default is NONE (not encoded).
     * The value will be decoded accordingly before storing to metadata.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode encode = 5;</code>
     * @return The enum numeric value on the wire for encode.
     */
    int getEncodeValue();
    /**
     * <pre>
     * How is the value encoded, default is NONE (not encoded).
     * The value will be decoded accordingly before storing to metadata.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode encode = 5;</code>
     * @return The encode.
     */
    io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode getEncode();
  }
  /**
   * <pre>
   * [#next-free-field: 7]
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair}
   */
  public static final class KeyValuePair extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair)
      KeyValuePairOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KeyValuePair.newBuilder() to construct.
    private KeyValuePair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KeyValuePair() {
      metadataNamespace_ = "";
      key_ = "";
      value_ = "";
      type_ = 0;
      encode_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new KeyValuePair();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KeyValuePair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              metadataNamespace_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              value_ = s;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              encode_ = rawValue;
              break;
            }
            case 50: {
              io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder subBuilder = null;
              if (regexValueRewrite_ != null) {
                subBuilder = regexValueRewrite_.toBuilder();
              }
              regexValueRewrite_ = input.readMessage(io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(regexValueRewrite_);
                regexValueRewrite_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_KeyValuePair_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_KeyValuePair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.class, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder.class);
    }

    public static final int METADATA_NAMESPACE_FIELD_NUMBER = 1;
    private volatile java.lang.Object metadataNamespace_;
    /**
     * <pre>
     * The namespace — if this is empty, the filter's namespace will be used.
     * </pre>
     *
     * <code>string metadata_namespace = 1;</code>
     * @return The metadataNamespace.
     */
    @java.lang.Override
    public java.lang.String getMetadataNamespace() {
      java.lang.Object ref = metadataNamespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        metadataNamespace_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The namespace — if this is empty, the filter's namespace will be used.
     * </pre>
     *
     * <code>string metadata_namespace = 1;</code>
     * @return The bytes for metadataNamespace.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMetadataNamespaceBytes() {
      java.lang.Object ref = metadataNamespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        metadataNamespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KEY_FIELD_NUMBER = 2;
    private volatile java.lang.Object key_;
    /**
     * <pre>
     * The key to use within the namespace.
     * </pre>
     *
     * <code>string key = 2 [(.validate.rules) = { ... }</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The key to use within the namespace.
     * </pre>
     *
     * <code>string key = 2 [(.validate.rules) = { ... }</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private volatile java.lang.Object value_;
    /**
     * <pre>
     * The value to pair with the given key.
     * When used for a
     * :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`
     * case, if value is non-empty it'll be used instead of the header value. If both are empty, no metadata is added.
     * When used for a :ref:`on_header_missing &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_missing&gt;`
     * case, a non-empty value must be provided otherwise no metadata is added.
     * </pre>
     *
     * <code>string value = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The value.
     */
    @java.lang.Override
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        value_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The value to pair with the given key.
     * When used for a
     * :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`
     * case, if value is non-empty it'll be used instead of the header value. If both are empty, no metadata is added.
     * When used for a :ref:`on_header_missing &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_missing&gt;`
     * case, a non-empty value must be provided otherwise no metadata is added.
     * </pre>
     *
     * <code>string value = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The bytes for value.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REGEX_VALUE_REWRITE_FIELD_NUMBER = 6;
    private io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute regexValueRewrite_;
    /**
     * <pre>
     * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
     * is used as-is.
     * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
     * Note: if the `value` field is non-empty this field should be empty.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return Whether the regexValueRewrite field is set.
     */
    @java.lang.Override
    public boolean hasRegexValueRewrite() {
      return regexValueRewrite_ != null;
    }
    /**
     * <pre>
     * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
     * is used as-is.
     * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
     * Note: if the `value` field is non-empty this field should be empty.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The regexValueRewrite.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute getRegexValueRewrite() {
      return regexValueRewrite_ == null ? io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance() : regexValueRewrite_;
    }
    /**
     * <pre>
     * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
     * is used as-is.
     * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
     * Note: if the `value` field is non-empty this field should be empty.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder getRegexValueRewriteOrBuilder() {
      return getRegexValueRewrite();
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private int type_;
    /**
     * <pre>
     * The value's type — defaults to string.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType type = 4 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * The value's type — defaults to string.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType type = 4 [(.validate.rules) = { ... }</code>
     * @return The type.
     */
    @java.lang.Override public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType getType() {
      @SuppressWarnings("deprecation")
      io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType result = io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType.valueOf(type_);
      return result == null ? io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType.UNRECOGNIZED : result;
    }

    public static final int ENCODE_FIELD_NUMBER = 5;
    private int encode_;
    /**
     * <pre>
     * How is the value encoded, default is NONE (not encoded).
     * The value will be decoded accordingly before storing to metadata.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode encode = 5;</code>
     * @return The enum numeric value on the wire for encode.
     */
    @java.lang.Override public int getEncodeValue() {
      return encode_;
    }
    /**
     * <pre>
     * How is the value encoded, default is NONE (not encoded).
     * The value will be decoded accordingly before storing to metadata.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode encode = 5;</code>
     * @return The encode.
     */
    @java.lang.Override public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode getEncode() {
      @SuppressWarnings("deprecation")
      io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode result = io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode.valueOf(encode_);
      return result == null ? io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getMetadataNamespaceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, metadataNamespace_);
      }
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, key_);
      }
      if (!getValueBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, value_);
      }
      if (type_ != io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType.STRING.getNumber()) {
        output.writeEnum(4, type_);
      }
      if (encode_ != io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode.NONE.getNumber()) {
        output.writeEnum(5, encode_);
      }
      if (regexValueRewrite_ != null) {
        output.writeMessage(6, getRegexValueRewrite());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getMetadataNamespaceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, metadataNamespace_);
      }
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, key_);
      }
      if (!getValueBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, value_);
      }
      if (type_ != io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType.STRING.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, type_);
      }
      if (encode_ != io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, encode_);
      }
      if (regexValueRewrite_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRegexValueRewrite());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair other = (io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair) obj;

      if (!getMetadataNamespace()
          .equals(other.getMetadataNamespace())) return false;
      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getValue()
          .equals(other.getValue())) return false;
      if (hasRegexValueRewrite() != other.hasRegexValueRewrite()) return false;
      if (hasRegexValueRewrite()) {
        if (!getRegexValueRewrite()
            .equals(other.getRegexValueRewrite())) return false;
      }
      if (type_ != other.type_) return false;
      if (encode_ != other.encode_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + METADATA_NAMESPACE_FIELD_NUMBER;
      hash = (53 * hash) + getMetadataNamespace().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
      if (hasRegexValueRewrite()) {
        hash = (37 * hash) + REGEX_VALUE_REWRITE_FIELD_NUMBER;
        hash = (53 * hash) + getRegexValueRewrite().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + ENCODE_FIELD_NUMBER;
      hash = (53 * hash) + encode_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * [#next-free-field: 7]
     * </pre>
     *
     * Protobuf type {@code envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair)
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_KeyValuePair_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_KeyValuePair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.class, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        metadataNamespace_ = "";

        key_ = "";

        value_ = "";

        if (regexValueRewriteBuilder_ == null) {
          regexValueRewrite_ = null;
        } else {
          regexValueRewrite_ = null;
          regexValueRewriteBuilder_ = null;
        }
        type_ = 0;

        encode_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_KeyValuePair_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair getDefaultInstanceForType() {
        return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair build() {
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair buildPartial() {
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair result = new io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair(this);
        result.metadataNamespace_ = metadataNamespace_;
        result.key_ = key_;
        result.value_ = value_;
        if (regexValueRewriteBuilder_ == null) {
          result.regexValueRewrite_ = regexValueRewrite_;
        } else {
          result.regexValueRewrite_ = regexValueRewriteBuilder_.build();
        }
        result.type_ = type_;
        result.encode_ = encode_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair) {
          return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair other) {
        if (other == io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.getDefaultInstance()) return this;
        if (!other.getMetadataNamespace().isEmpty()) {
          metadataNamespace_ = other.metadataNamespace_;
          onChanged();
        }
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.getValue().isEmpty()) {
          value_ = other.value_;
          onChanged();
        }
        if (other.hasRegexValueRewrite()) {
          mergeRegexValueRewrite(other.getRegexValueRewrite());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.encode_ != 0) {
          setEncodeValue(other.getEncodeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object metadataNamespace_ = "";
      /**
       * <pre>
       * The namespace — if this is empty, the filter's namespace will be used.
       * </pre>
       *
       * <code>string metadata_namespace = 1;</code>
       * @return The metadataNamespace.
       */
      public java.lang.String getMetadataNamespace() {
        java.lang.Object ref = metadataNamespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          metadataNamespace_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The namespace — if this is empty, the filter's namespace will be used.
       * </pre>
       *
       * <code>string metadata_namespace = 1;</code>
       * @return The bytes for metadataNamespace.
       */
      public com.google.protobuf.ByteString
          getMetadataNamespaceBytes() {
        java.lang.Object ref = metadataNamespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          metadataNamespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The namespace — if this is empty, the filter's namespace will be used.
       * </pre>
       *
       * <code>string metadata_namespace = 1;</code>
       * @param value The metadataNamespace to set.
       * @return This builder for chaining.
       */
      public Builder setMetadataNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        metadataNamespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The namespace — if this is empty, the filter's namespace will be used.
       * </pre>
       *
       * <code>string metadata_namespace = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMetadataNamespace() {
        
        metadataNamespace_ = getDefaultInstance().getMetadataNamespace();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The namespace — if this is empty, the filter's namespace will be used.
       * </pre>
       *
       * <code>string metadata_namespace = 1;</code>
       * @param value The bytes for metadataNamespace to set.
       * @return This builder for chaining.
       */
      public Builder setMetadataNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        metadataNamespace_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <pre>
       * The key to use within the namespace.
       * </pre>
       *
       * <code>string key = 2 [(.validate.rules) = { ... }</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The key to use within the namespace.
       * </pre>
       *
       * <code>string key = 2 [(.validate.rules) = { ... }</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The key to use within the namespace.
       * </pre>
       *
       * <code>string key = 2 [(.validate.rules) = { ... }</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The key to use within the namespace.
       * </pre>
       *
       * <code>string key = 2 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The key to use within the namespace.
       * </pre>
       *
       * <code>string key = 2 [(.validate.rules) = { ... }</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <pre>
       * The value to pair with the given key.
       * When used for a
       * :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`
       * case, if value is non-empty it'll be used instead of the header value. If both are empty, no metadata is added.
       * When used for a :ref:`on_header_missing &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_missing&gt;`
       * case, a non-empty value must be provided otherwise no metadata is added.
       * </pre>
       *
       * <code>string value = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @return The value.
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The value to pair with the given key.
       * When used for a
       * :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`
       * case, if value is non-empty it'll be used instead of the header value. If both are empty, no metadata is added.
       * When used for a :ref:`on_header_missing &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_missing&gt;`
       * case, a non-empty value must be provided otherwise no metadata is added.
       * </pre>
       *
       * <code>string value = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @return The bytes for value.
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The value to pair with the given key.
       * When used for a
       * :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`
       * case, if value is non-empty it'll be used instead of the header value. If both are empty, no metadata is added.
       * When used for a :ref:`on_header_missing &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_missing&gt;`
       * case, a non-empty value must be provided otherwise no metadata is added.
       * </pre>
       *
       * <code>string value = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value to pair with the given key.
       * When used for a
       * :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`
       * case, if value is non-empty it'll be used instead of the header value. If both are empty, no metadata is added.
       * When used for a :ref:`on_header_missing &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_missing&gt;`
       * case, a non-empty value must be provided otherwise no metadata is added.
       * </pre>
       *
       * <code>string value = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value to pair with the given key.
       * When used for a
       * :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`
       * case, if value is non-empty it'll be used instead of the header value. If both are empty, no metadata is added.
       * When used for a :ref:`on_header_missing &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_missing&gt;`
       * case, a non-empty value must be provided otherwise no metadata is added.
       * </pre>
       *
       * <code>string value = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @param value The bytes for value to set.
       * @return This builder for chaining.
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        value_ = value;
        onChanged();
        return this;
      }

      private io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute regexValueRewrite_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder> regexValueRewriteBuilder_;
      /**
       * <pre>
       * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
       * is used as-is.
       * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
       * Note: if the `value` field is non-empty this field should be empty.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @return Whether the regexValueRewrite field is set.
       */
      public boolean hasRegexValueRewrite() {
        return regexValueRewriteBuilder_ != null || regexValueRewrite_ != null;
      }
      /**
       * <pre>
       * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
       * is used as-is.
       * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
       * Note: if the `value` field is non-empty this field should be empty.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @return The regexValueRewrite.
       */
      public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute getRegexValueRewrite() {
        if (regexValueRewriteBuilder_ == null) {
          return regexValueRewrite_ == null ? io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance() : regexValueRewrite_;
        } else {
          return regexValueRewriteBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
       * is used as-is.
       * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
       * Note: if the `value` field is non-empty this field should be empty.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public Builder setRegexValueRewrite(io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute value) {
        if (regexValueRewriteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          regexValueRewrite_ = value;
          onChanged();
        } else {
          regexValueRewriteBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
       * is used as-is.
       * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
       * Note: if the `value` field is non-empty this field should be empty.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public Builder setRegexValueRewrite(
          io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder builderForValue) {
        if (regexValueRewriteBuilder_ == null) {
          regexValueRewrite_ = builderForValue.build();
          onChanged();
        } else {
          regexValueRewriteBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
       * is used as-is.
       * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
       * Note: if the `value` field is non-empty this field should be empty.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public Builder mergeRegexValueRewrite(io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute value) {
        if (regexValueRewriteBuilder_ == null) {
          if (regexValueRewrite_ != null) {
            regexValueRewrite_ =
              io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.newBuilder(regexValueRewrite_).mergeFrom(value).buildPartial();
          } else {
            regexValueRewrite_ = value;
          }
          onChanged();
        } else {
          regexValueRewriteBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
       * is used as-is.
       * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
       * Note: if the `value` field is non-empty this field should be empty.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public Builder clearRegexValueRewrite() {
        if (regexValueRewriteBuilder_ == null) {
          regexValueRewrite_ = null;
          onChanged();
        } else {
          regexValueRewrite_ = null;
          regexValueRewriteBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
       * is used as-is.
       * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
       * Note: if the `value` field is non-empty this field should be empty.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder getRegexValueRewriteBuilder() {
        
        onChanged();
        return getRegexValueRewriteFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
       * is used as-is.
       * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
       * Note: if the `value` field is non-empty this field should be empty.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder getRegexValueRewriteOrBuilder() {
        if (regexValueRewriteBuilder_ != null) {
          return regexValueRewriteBuilder_.getMessageOrBuilder();
        } else {
          return regexValueRewrite_ == null ?
              io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance() : regexValueRewrite_;
        }
      }
      /**
       * <pre>
       * If present, the header's value will be matched and substituted with this. If there is no match or substitution, the header value
       * is used as-is.
       * This is only used for :ref:`on_header_present &lt;envoy_v3_api_field_extensions.filters.http.header_to_metadata.v3.Config.Rule.on_header_present&gt;`.
       * Note: if the `value` field is non-empty this field should be empty.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_value_rewrite = 6 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder> 
          getRegexValueRewriteFieldBuilder() {
        if (regexValueRewriteBuilder_ == null) {
          regexValueRewriteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder>(
                  getRegexValueRewrite(),
                  getParentForChildren(),
                  isClean());
          regexValueRewrite_ = null;
        }
        return regexValueRewriteBuilder_;
      }

      private int type_ = 0;
      /**
       * <pre>
       * The value's type — defaults to string.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType type = 4 [(.validate.rules) = { ... }</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * The value's type — defaults to string.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType type = 4 [(.validate.rules) = { ... }</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value's type — defaults to string.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType type = 4 [(.validate.rules) = { ... }</code>
       * @return The type.
       */
      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType getType() {
        @SuppressWarnings("deprecation")
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType result = io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType.valueOf(type_);
        return result == null ? io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The value's type — defaults to string.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType type = 4 [(.validate.rules) = { ... }</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The value's type — defaults to string.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueType type = 4 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int encode_ = 0;
      /**
       * <pre>
       * How is the value encoded, default is NONE (not encoded).
       * The value will be decoded accordingly before storing to metadata.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode encode = 5;</code>
       * @return The enum numeric value on the wire for encode.
       */
      @java.lang.Override public int getEncodeValue() {
        return encode_;
      }
      /**
       * <pre>
       * How is the value encoded, default is NONE (not encoded).
       * The value will be decoded accordingly before storing to metadata.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode encode = 5;</code>
       * @param value The enum numeric value on the wire for encode to set.
       * @return This builder for chaining.
       */
      public Builder setEncodeValue(int value) {
        
        encode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * How is the value encoded, default is NONE (not encoded).
       * The value will be decoded accordingly before storing to metadata.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode encode = 5;</code>
       * @return The encode.
       */
      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode getEncode() {
        @SuppressWarnings("deprecation")
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode result = io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode.valueOf(encode_);
        return result == null ? io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * How is the value encoded, default is NONE (not encoded).
       * The value will be decoded accordingly before storing to metadata.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode encode = 5;</code>
       * @param value The encode to set.
       * @return This builder for chaining.
       */
      public Builder setEncode(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        encode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * How is the value encoded, default is NONE (not encoded).
       * The value will be decoded accordingly before storing to metadata.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.ValueEncode encode = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncode() {
        
        encode_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair)
    }

    // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair)
    private static final io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair();
    }

    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KeyValuePair>
        PARSER = new com.google.protobuf.AbstractParser<KeyValuePair>() {
      @java.lang.Override
      public KeyValuePair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyValuePair(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KeyValuePair> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KeyValuePair> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RuleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specifies that a match will be performed on the value of a header or a cookie.
     * The header to be extracted.
     * </pre>
     *
     * <code>string header = 1 [(.validate.rules) = { ... }</code>
     * @return The header.
     */
    java.lang.String getHeader();
    /**
     * <pre>
     * Specifies that a match will be performed on the value of a header or a cookie.
     * The header to be extracted.
     * </pre>
     *
     * <code>string header = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for header.
     */
    com.google.protobuf.ByteString
        getHeaderBytes();

    /**
     * <pre>
     * The cookie to be extracted.
     * </pre>
     *
     * <code>string cookie = 5 [(.validate.rules) = { ... }</code>
     * @return The cookie.
     */
    java.lang.String getCookie();
    /**
     * <pre>
     * The cookie to be extracted.
     * </pre>
     *
     * <code>string cookie = 5 [(.validate.rules) = { ... }</code>
     * @return The bytes for cookie.
     */
    com.google.protobuf.ByteString
        getCookieBytes();

    /**
     * <pre>
     * If the header or cookie is present, apply this metadata KeyValuePair.
     * If the value in the KeyValuePair is non-empty, it'll be used instead
     * of the header or cookie value.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return Whether the onHeaderPresent field is set.
     */
    boolean hasOnHeaderPresent();
    /**
     * <pre>
     * If the header or cookie is present, apply this metadata KeyValuePair.
     * If the value in the KeyValuePair is non-empty, it'll be used instead
     * of the header or cookie value.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The onHeaderPresent.
     */
    io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair getOnHeaderPresent();
    /**
     * <pre>
     * If the header or cookie is present, apply this metadata KeyValuePair.
     * If the value in the KeyValuePair is non-empty, it'll be used instead
     * of the header or cookie value.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePairOrBuilder getOnHeaderPresentOrBuilder();

    /**
     * <pre>
     * If the header or cookie is not present, apply this metadata KeyValuePair.
     * The value in the KeyValuePair must be set, since it'll be used in lieu
     * of the missing header or cookie value.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return Whether the onHeaderMissing field is set.
     */
    boolean hasOnHeaderMissing();
    /**
     * <pre>
     * If the header or cookie is not present, apply this metadata KeyValuePair.
     * The value in the KeyValuePair must be set, since it'll be used in lieu
     * of the missing header or cookie value.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The onHeaderMissing.
     */
    io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair getOnHeaderMissing();
    /**
     * <pre>
     * If the header or cookie is not present, apply this metadata KeyValuePair.
     * The value in the KeyValuePair must be set, since it'll be used in lieu
     * of the missing header or cookie value.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePairOrBuilder getOnHeaderMissingOrBuilder();

    /**
     * <pre>
     * Whether or not to remove the header after a rule is applied.
     * This prevents headers from leaking.
     * This field is not supported in case of a cookie.
     * </pre>
     *
     * <code>bool remove = 4;</code>
     * @return The remove.
     */
    boolean getRemove();
  }
  /**
   * <pre>
   * A Rule defines what metadata to apply when a header is present or missing.
   * [#next-free-field: 6]
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule}
   */
  public static final class Rule extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule)
      RuleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Rule.newBuilder() to construct.
    private Rule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Rule() {
      header_ = "";
      cookie_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Rule();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Rule(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              header_ = s;
              break;
            }
            case 18: {
              io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder subBuilder = null;
              if (onHeaderPresent_ != null) {
                subBuilder = onHeaderPresent_.toBuilder();
              }
              onHeaderPresent_ = input.readMessage(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(onHeaderPresent_);
                onHeaderPresent_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder subBuilder = null;
              if (onHeaderMissing_ != null) {
                subBuilder = onHeaderMissing_.toBuilder();
              }
              onHeaderMissing_ = input.readMessage(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(onHeaderMissing_);
                onHeaderMissing_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {

              remove_ = input.readBool();
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              cookie_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_Rule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_Rule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.class, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder.class);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    private volatile java.lang.Object header_;
    /**
     * <pre>
     * Specifies that a match will be performed on the value of a header or a cookie.
     * The header to be extracted.
     * </pre>
     *
     * <code>string header = 1 [(.validate.rules) = { ... }</code>
     * @return The header.
     */
    @java.lang.Override
    public java.lang.String getHeader() {
      java.lang.Object ref = header_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        header_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Specifies that a match will be performed on the value of a header or a cookie.
     * The header to be extracted.
     * </pre>
     *
     * <code>string header = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for header.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHeaderBytes() {
      java.lang.Object ref = header_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        header_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COOKIE_FIELD_NUMBER = 5;
    private volatile java.lang.Object cookie_;
    /**
     * <pre>
     * The cookie to be extracted.
     * </pre>
     *
     * <code>string cookie = 5 [(.validate.rules) = { ... }</code>
     * @return The cookie.
     */
    @java.lang.Override
    public java.lang.String getCookie() {
      java.lang.Object ref = cookie_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cookie_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The cookie to be extracted.
     * </pre>
     *
     * <code>string cookie = 5 [(.validate.rules) = { ... }</code>
     * @return The bytes for cookie.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCookieBytes() {
      java.lang.Object ref = cookie_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cookie_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ON_HEADER_PRESENT_FIELD_NUMBER = 2;
    private io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair onHeaderPresent_;
    /**
     * <pre>
     * If the header or cookie is present, apply this metadata KeyValuePair.
     * If the value in the KeyValuePair is non-empty, it'll be used instead
     * of the header or cookie value.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return Whether the onHeaderPresent field is set.
     */
    @java.lang.Override
    public boolean hasOnHeaderPresent() {
      return onHeaderPresent_ != null;
    }
    /**
     * <pre>
     * If the header or cookie is present, apply this metadata KeyValuePair.
     * If the value in the KeyValuePair is non-empty, it'll be used instead
     * of the header or cookie value.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The onHeaderPresent.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair getOnHeaderPresent() {
      return onHeaderPresent_ == null ? io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.getDefaultInstance() : onHeaderPresent_;
    }
    /**
     * <pre>
     * If the header or cookie is present, apply this metadata KeyValuePair.
     * If the value in the KeyValuePair is non-empty, it'll be used instead
     * of the header or cookie value.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePairOrBuilder getOnHeaderPresentOrBuilder() {
      return getOnHeaderPresent();
    }

    public static final int ON_HEADER_MISSING_FIELD_NUMBER = 3;
    private io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair onHeaderMissing_;
    /**
     * <pre>
     * If the header or cookie is not present, apply this metadata KeyValuePair.
     * The value in the KeyValuePair must be set, since it'll be used in lieu
     * of the missing header or cookie value.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return Whether the onHeaderMissing field is set.
     */
    @java.lang.Override
    public boolean hasOnHeaderMissing() {
      return onHeaderMissing_ != null;
    }
    /**
     * <pre>
     * If the header or cookie is not present, apply this metadata KeyValuePair.
     * The value in the KeyValuePair must be set, since it'll be used in lieu
     * of the missing header or cookie value.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The onHeaderMissing.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair getOnHeaderMissing() {
      return onHeaderMissing_ == null ? io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.getDefaultInstance() : onHeaderMissing_;
    }
    /**
     * <pre>
     * If the header or cookie is not present, apply this metadata KeyValuePair.
     * The value in the KeyValuePair must be set, since it'll be used in lieu
     * of the missing header or cookie value.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePairOrBuilder getOnHeaderMissingOrBuilder() {
      return getOnHeaderMissing();
    }

    public static final int REMOVE_FIELD_NUMBER = 4;
    private boolean remove_;
    /**
     * <pre>
     * Whether or not to remove the header after a rule is applied.
     * This prevents headers from leaking.
     * This field is not supported in case of a cookie.
     * </pre>
     *
     * <code>bool remove = 4;</code>
     * @return The remove.
     */
    @java.lang.Override
    public boolean getRemove() {
      return remove_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getHeaderBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, header_);
      }
      if (onHeaderPresent_ != null) {
        output.writeMessage(2, getOnHeaderPresent());
      }
      if (onHeaderMissing_ != null) {
        output.writeMessage(3, getOnHeaderMissing());
      }
      if (remove_ != false) {
        output.writeBool(4, remove_);
      }
      if (!getCookieBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, cookie_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getHeaderBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, header_);
      }
      if (onHeaderPresent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOnHeaderPresent());
      }
      if (onHeaderMissing_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOnHeaderMissing());
      }
      if (remove_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, remove_);
      }
      if (!getCookieBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, cookie_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule other = (io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule) obj;

      if (!getHeader()
          .equals(other.getHeader())) return false;
      if (!getCookie()
          .equals(other.getCookie())) return false;
      if (hasOnHeaderPresent() != other.hasOnHeaderPresent()) return false;
      if (hasOnHeaderPresent()) {
        if (!getOnHeaderPresent()
            .equals(other.getOnHeaderPresent())) return false;
      }
      if (hasOnHeaderMissing() != other.hasOnHeaderMissing()) return false;
      if (hasOnHeaderMissing()) {
        if (!getOnHeaderMissing()
            .equals(other.getOnHeaderMissing())) return false;
      }
      if (getRemove()
          != other.getRemove()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HEADER_FIELD_NUMBER;
      hash = (53 * hash) + getHeader().hashCode();
      hash = (37 * hash) + COOKIE_FIELD_NUMBER;
      hash = (53 * hash) + getCookie().hashCode();
      if (hasOnHeaderPresent()) {
        hash = (37 * hash) + ON_HEADER_PRESENT_FIELD_NUMBER;
        hash = (53 * hash) + getOnHeaderPresent().hashCode();
      }
      if (hasOnHeaderMissing()) {
        hash = (37 * hash) + ON_HEADER_MISSING_FIELD_NUMBER;
        hash = (53 * hash) + getOnHeaderMissing().hashCode();
      }
      hash = (37 * hash) + REMOVE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRemove());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Rule defines what metadata to apply when a header is present or missing.
     * [#next-free-field: 6]
     * </pre>
     *
     * Protobuf type {@code envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule)
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_Rule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_Rule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.class, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        header_ = "";

        cookie_ = "";

        if (onHeaderPresentBuilder_ == null) {
          onHeaderPresent_ = null;
        } else {
          onHeaderPresent_ = null;
          onHeaderPresentBuilder_ = null;
        }
        if (onHeaderMissingBuilder_ == null) {
          onHeaderMissing_ = null;
        } else {
          onHeaderMissing_ = null;
          onHeaderMissingBuilder_ = null;
        }
        remove_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_Rule_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule getDefaultInstanceForType() {
        return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule build() {
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule buildPartial() {
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule result = new io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule(this);
        result.header_ = header_;
        result.cookie_ = cookie_;
        if (onHeaderPresentBuilder_ == null) {
          result.onHeaderPresent_ = onHeaderPresent_;
        } else {
          result.onHeaderPresent_ = onHeaderPresentBuilder_.build();
        }
        if (onHeaderMissingBuilder_ == null) {
          result.onHeaderMissing_ = onHeaderMissing_;
        } else {
          result.onHeaderMissing_ = onHeaderMissingBuilder_.build();
        }
        result.remove_ = remove_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule) {
          return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule other) {
        if (other == io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.getDefaultInstance()) return this;
        if (!other.getHeader().isEmpty()) {
          header_ = other.header_;
          onChanged();
        }
        if (!other.getCookie().isEmpty()) {
          cookie_ = other.cookie_;
          onChanged();
        }
        if (other.hasOnHeaderPresent()) {
          mergeOnHeaderPresent(other.getOnHeaderPresent());
        }
        if (other.hasOnHeaderMissing()) {
          mergeOnHeaderMissing(other.getOnHeaderMissing());
        }
        if (other.getRemove() != false) {
          setRemove(other.getRemove());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object header_ = "";
      /**
       * <pre>
       * Specifies that a match will be performed on the value of a header or a cookie.
       * The header to be extracted.
       * </pre>
       *
       * <code>string header = 1 [(.validate.rules) = { ... }</code>
       * @return The header.
       */
      public java.lang.String getHeader() {
        java.lang.Object ref = header_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          header_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Specifies that a match will be performed on the value of a header or a cookie.
       * The header to be extracted.
       * </pre>
       *
       * <code>string header = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for header.
       */
      public com.google.protobuf.ByteString
          getHeaderBytes() {
        java.lang.Object ref = header_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          header_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Specifies that a match will be performed on the value of a header or a cookie.
       * The header to be extracted.
       * </pre>
       *
       * <code>string header = 1 [(.validate.rules) = { ... }</code>
       * @param value The header to set.
       * @return This builder for chaining.
       */
      public Builder setHeader(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        header_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies that a match will be performed on the value of a header or a cookie.
       * The header to be extracted.
       * </pre>
       *
       * <code>string header = 1 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearHeader() {
        
        header_ = getDefaultInstance().getHeader();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies that a match will be performed on the value of a header or a cookie.
       * The header to be extracted.
       * </pre>
       *
       * <code>string header = 1 [(.validate.rules) = { ... }</code>
       * @param value The bytes for header to set.
       * @return This builder for chaining.
       */
      public Builder setHeaderBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        header_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object cookie_ = "";
      /**
       * <pre>
       * The cookie to be extracted.
       * </pre>
       *
       * <code>string cookie = 5 [(.validate.rules) = { ... }</code>
       * @return The cookie.
       */
      public java.lang.String getCookie() {
        java.lang.Object ref = cookie_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cookie_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The cookie to be extracted.
       * </pre>
       *
       * <code>string cookie = 5 [(.validate.rules) = { ... }</code>
       * @return The bytes for cookie.
       */
      public com.google.protobuf.ByteString
          getCookieBytes() {
        java.lang.Object ref = cookie_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cookie_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The cookie to be extracted.
       * </pre>
       *
       * <code>string cookie = 5 [(.validate.rules) = { ... }</code>
       * @param value The cookie to set.
       * @return This builder for chaining.
       */
      public Builder setCookie(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        cookie_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The cookie to be extracted.
       * </pre>
       *
       * <code>string cookie = 5 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearCookie() {
        
        cookie_ = getDefaultInstance().getCookie();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The cookie to be extracted.
       * </pre>
       *
       * <code>string cookie = 5 [(.validate.rules) = { ... }</code>
       * @param value The bytes for cookie to set.
       * @return This builder for chaining.
       */
      public Builder setCookieBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        cookie_ = value;
        onChanged();
        return this;
      }

      private io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair onHeaderPresent_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePairOrBuilder> onHeaderPresentBuilder_;
      /**
       * <pre>
       * If the header or cookie is present, apply this metadata KeyValuePair.
       * If the value in the KeyValuePair is non-empty, it'll be used instead
       * of the header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @return Whether the onHeaderPresent field is set.
       */
      public boolean hasOnHeaderPresent() {
        return onHeaderPresentBuilder_ != null || onHeaderPresent_ != null;
      }
      /**
       * <pre>
       * If the header or cookie is present, apply this metadata KeyValuePair.
       * If the value in the KeyValuePair is non-empty, it'll be used instead
       * of the header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @return The onHeaderPresent.
       */
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair getOnHeaderPresent() {
        if (onHeaderPresentBuilder_ == null) {
          return onHeaderPresent_ == null ? io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.getDefaultInstance() : onHeaderPresent_;
        } else {
          return onHeaderPresentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * If the header or cookie is present, apply this metadata KeyValuePair.
       * If the value in the KeyValuePair is non-empty, it'll be used instead
       * of the header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public Builder setOnHeaderPresent(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair value) {
        if (onHeaderPresentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          onHeaderPresent_ = value;
          onChanged();
        } else {
          onHeaderPresentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * If the header or cookie is present, apply this metadata KeyValuePair.
       * If the value in the KeyValuePair is non-empty, it'll be used instead
       * of the header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public Builder setOnHeaderPresent(
          io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder builderForValue) {
        if (onHeaderPresentBuilder_ == null) {
          onHeaderPresent_ = builderForValue.build();
          onChanged();
        } else {
          onHeaderPresentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * If the header or cookie is present, apply this metadata KeyValuePair.
       * If the value in the KeyValuePair is non-empty, it'll be used instead
       * of the header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public Builder mergeOnHeaderPresent(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair value) {
        if (onHeaderPresentBuilder_ == null) {
          if (onHeaderPresent_ != null) {
            onHeaderPresent_ =
              io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.newBuilder(onHeaderPresent_).mergeFrom(value).buildPartial();
          } else {
            onHeaderPresent_ = value;
          }
          onChanged();
        } else {
          onHeaderPresentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * If the header or cookie is present, apply this metadata KeyValuePair.
       * If the value in the KeyValuePair is non-empty, it'll be used instead
       * of the header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public Builder clearOnHeaderPresent() {
        if (onHeaderPresentBuilder_ == null) {
          onHeaderPresent_ = null;
          onChanged();
        } else {
          onHeaderPresent_ = null;
          onHeaderPresentBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * If the header or cookie is present, apply this metadata KeyValuePair.
       * If the value in the KeyValuePair is non-empty, it'll be used instead
       * of the header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder getOnHeaderPresentBuilder() {
        
        onChanged();
        return getOnHeaderPresentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * If the header or cookie is present, apply this metadata KeyValuePair.
       * If the value in the KeyValuePair is non-empty, it'll be used instead
       * of the header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePairOrBuilder getOnHeaderPresentOrBuilder() {
        if (onHeaderPresentBuilder_ != null) {
          return onHeaderPresentBuilder_.getMessageOrBuilder();
        } else {
          return onHeaderPresent_ == null ?
              io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.getDefaultInstance() : onHeaderPresent_;
        }
      }
      /**
       * <pre>
       * If the header or cookie is present, apply this metadata KeyValuePair.
       * If the value in the KeyValuePair is non-empty, it'll be used instead
       * of the header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_present = 2 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePairOrBuilder> 
          getOnHeaderPresentFieldBuilder() {
        if (onHeaderPresentBuilder_ == null) {
          onHeaderPresentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePairOrBuilder>(
                  getOnHeaderPresent(),
                  getParentForChildren(),
                  isClean());
          onHeaderPresent_ = null;
        }
        return onHeaderPresentBuilder_;
      }

      private io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair onHeaderMissing_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePairOrBuilder> onHeaderMissingBuilder_;
      /**
       * <pre>
       * If the header or cookie is not present, apply this metadata KeyValuePair.
       * The value in the KeyValuePair must be set, since it'll be used in lieu
       * of the missing header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @return Whether the onHeaderMissing field is set.
       */
      public boolean hasOnHeaderMissing() {
        return onHeaderMissingBuilder_ != null || onHeaderMissing_ != null;
      }
      /**
       * <pre>
       * If the header or cookie is not present, apply this metadata KeyValuePair.
       * The value in the KeyValuePair must be set, since it'll be used in lieu
       * of the missing header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @return The onHeaderMissing.
       */
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair getOnHeaderMissing() {
        if (onHeaderMissingBuilder_ == null) {
          return onHeaderMissing_ == null ? io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.getDefaultInstance() : onHeaderMissing_;
        } else {
          return onHeaderMissingBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * If the header or cookie is not present, apply this metadata KeyValuePair.
       * The value in the KeyValuePair must be set, since it'll be used in lieu
       * of the missing header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public Builder setOnHeaderMissing(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair value) {
        if (onHeaderMissingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          onHeaderMissing_ = value;
          onChanged();
        } else {
          onHeaderMissingBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * If the header or cookie is not present, apply this metadata KeyValuePair.
       * The value in the KeyValuePair must be set, since it'll be used in lieu
       * of the missing header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public Builder setOnHeaderMissing(
          io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder builderForValue) {
        if (onHeaderMissingBuilder_ == null) {
          onHeaderMissing_ = builderForValue.build();
          onChanged();
        } else {
          onHeaderMissingBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * If the header or cookie is not present, apply this metadata KeyValuePair.
       * The value in the KeyValuePair must be set, since it'll be used in lieu
       * of the missing header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public Builder mergeOnHeaderMissing(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair value) {
        if (onHeaderMissingBuilder_ == null) {
          if (onHeaderMissing_ != null) {
            onHeaderMissing_ =
              io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.newBuilder(onHeaderMissing_).mergeFrom(value).buildPartial();
          } else {
            onHeaderMissing_ = value;
          }
          onChanged();
        } else {
          onHeaderMissingBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * If the header or cookie is not present, apply this metadata KeyValuePair.
       * The value in the KeyValuePair must be set, since it'll be used in lieu
       * of the missing header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public Builder clearOnHeaderMissing() {
        if (onHeaderMissingBuilder_ == null) {
          onHeaderMissing_ = null;
          onChanged();
        } else {
          onHeaderMissing_ = null;
          onHeaderMissingBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * If the header or cookie is not present, apply this metadata KeyValuePair.
       * The value in the KeyValuePair must be set, since it'll be used in lieu
       * of the missing header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder getOnHeaderMissingBuilder() {
        
        onChanged();
        return getOnHeaderMissingFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * If the header or cookie is not present, apply this metadata KeyValuePair.
       * The value in the KeyValuePair must be set, since it'll be used in lieu
       * of the missing header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePairOrBuilder getOnHeaderMissingOrBuilder() {
        if (onHeaderMissingBuilder_ != null) {
          return onHeaderMissingBuilder_.getMessageOrBuilder();
        } else {
          return onHeaderMissing_ == null ?
              io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.getDefaultInstance() : onHeaderMissing_;
        }
      }
      /**
       * <pre>
       * If the header or cookie is not present, apply this metadata KeyValuePair.
       * The value in the KeyValuePair must be set, since it'll be used in lieu
       * of the missing header or cookie value.
       * </pre>
       *
       * <code>.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair on_header_missing = 3 [(.udpa.annotations.field_migrate) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePairOrBuilder> 
          getOnHeaderMissingFieldBuilder() {
        if (onHeaderMissingBuilder_ == null) {
          onHeaderMissingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePair.Builder, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.KeyValuePairOrBuilder>(
                  getOnHeaderMissing(),
                  getParentForChildren(),
                  isClean());
          onHeaderMissing_ = null;
        }
        return onHeaderMissingBuilder_;
      }

      private boolean remove_ ;
      /**
       * <pre>
       * Whether or not to remove the header after a rule is applied.
       * This prevents headers from leaking.
       * This field is not supported in case of a cookie.
       * </pre>
       *
       * <code>bool remove = 4;</code>
       * @return The remove.
       */
      @java.lang.Override
      public boolean getRemove() {
        return remove_;
      }
      /**
       * <pre>
       * Whether or not to remove the header after a rule is applied.
       * This prevents headers from leaking.
       * This field is not supported in case of a cookie.
       * </pre>
       *
       * <code>bool remove = 4;</code>
       * @param value The remove to set.
       * @return This builder for chaining.
       */
      public Builder setRemove(boolean value) {
        
        remove_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether or not to remove the header after a rule is applied.
       * This prevents headers from leaking.
       * This field is not supported in case of a cookie.
       * </pre>
       *
       * <code>bool remove = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRemove() {
        
        remove_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule)
    }

    // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule)
    private static final io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule();
    }

    public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Rule>
        PARSER = new com.google.protobuf.AbstractParser<Rule>() {
      @java.lang.Override
      public Rule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Rule(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Rule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Rule> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int REQUEST_RULES_FIELD_NUMBER = 1;
  private java.util.List<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule> requestRules_;
  /**
   * <pre>
   * The list of rules to apply to requests.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule> getRequestRulesList() {
    return requestRules_;
  }
  /**
   * <pre>
   * The list of rules to apply to requests.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder> 
      getRequestRulesOrBuilderList() {
    return requestRules_;
  }
  /**
   * <pre>
   * The list of rules to apply to requests.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
   */
  @java.lang.Override
  public int getRequestRulesCount() {
    return requestRules_.size();
  }
  /**
   * <pre>
   * The list of rules to apply to requests.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule getRequestRules(int index) {
    return requestRules_.get(index);
  }
  /**
   * <pre>
   * The list of rules to apply to requests.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder getRequestRulesOrBuilder(
      int index) {
    return requestRules_.get(index);
  }

  public static final int RESPONSE_RULES_FIELD_NUMBER = 2;
  private java.util.List<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule> responseRules_;
  /**
   * <pre>
   * The list of rules to apply to responses.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule> getResponseRulesList() {
    return responseRules_;
  }
  /**
   * <pre>
   * The list of rules to apply to responses.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder> 
      getResponseRulesOrBuilderList() {
    return responseRules_;
  }
  /**
   * <pre>
   * The list of rules to apply to responses.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
   */
  @java.lang.Override
  public int getResponseRulesCount() {
    return responseRules_.size();
  }
  /**
   * <pre>
   * The list of rules to apply to responses.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule getResponseRules(int index) {
    return responseRules_.get(index);
  }
  /**
   * <pre>
   * The list of rules to apply to responses.
   * </pre>
   *
   * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder getResponseRulesOrBuilder(
      int index) {
    return responseRules_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < requestRules_.size(); i++) {
      output.writeMessage(1, requestRules_.get(i));
    }
    for (int i = 0; i < responseRules_.size(); i++) {
      output.writeMessage(2, responseRules_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < requestRules_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, requestRules_.get(i));
    }
    for (int i = 0; i < responseRules_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, responseRules_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config other = (io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config) obj;

    if (!getRequestRulesList()
        .equals(other.getRequestRulesList())) return false;
    if (!getResponseRulesList()
        .equals(other.getResponseRulesList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getRequestRulesCount() > 0) {
      hash = (37 * hash) + REQUEST_RULES_FIELD_NUMBER;
      hash = (53 * hash) + getRequestRulesList().hashCode();
    }
    if (getResponseRulesCount() > 0) {
      hash = (37 * hash) + RESPONSE_RULES_FIELD_NUMBER;
      hash = (53 * hash) + getResponseRulesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.extensions.filters.http.header_to_metadata.v3.Config}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.header_to_metadata.v3.Config)
      io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.ConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.class, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getRequestRulesFieldBuilder();
        getResponseRulesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (requestRulesBuilder_ == null) {
        requestRules_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        requestRulesBuilder_.clear();
      }
      if (responseRulesBuilder_ == null) {
        responseRules_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        responseRulesBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadataProto.internal_static_envoy_extensions_filters_http_header_to_metadata_v3_Config_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config build() {
      io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config buildPartial() {
      io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config result = new io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config(this);
      int from_bitField0_ = bitField0_;
      if (requestRulesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          requestRules_ = java.util.Collections.unmodifiableList(requestRules_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.requestRules_ = requestRules_;
      } else {
        result.requestRules_ = requestRulesBuilder_.build();
      }
      if (responseRulesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          responseRules_ = java.util.Collections.unmodifiableList(responseRules_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.responseRules_ = responseRules_;
      } else {
        result.responseRules_ = responseRulesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config other) {
      if (other == io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.getDefaultInstance()) return this;
      if (requestRulesBuilder_ == null) {
        if (!other.requestRules_.isEmpty()) {
          if (requestRules_.isEmpty()) {
            requestRules_ = other.requestRules_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRequestRulesIsMutable();
            requestRules_.addAll(other.requestRules_);
          }
          onChanged();
        }
      } else {
        if (!other.requestRules_.isEmpty()) {
          if (requestRulesBuilder_.isEmpty()) {
            requestRulesBuilder_.dispose();
            requestRulesBuilder_ = null;
            requestRules_ = other.requestRules_;
            bitField0_ = (bitField0_ & ~0x00000001);
            requestRulesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRequestRulesFieldBuilder() : null;
          } else {
            requestRulesBuilder_.addAllMessages(other.requestRules_);
          }
        }
      }
      if (responseRulesBuilder_ == null) {
        if (!other.responseRules_.isEmpty()) {
          if (responseRules_.isEmpty()) {
            responseRules_ = other.responseRules_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureResponseRulesIsMutable();
            responseRules_.addAll(other.responseRules_);
          }
          onChanged();
        }
      } else {
        if (!other.responseRules_.isEmpty()) {
          if (responseRulesBuilder_.isEmpty()) {
            responseRulesBuilder_.dispose();
            responseRulesBuilder_ = null;
            responseRules_ = other.responseRules_;
            bitField0_ = (bitField0_ & ~0x00000002);
            responseRulesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getResponseRulesFieldBuilder() : null;
          } else {
            responseRulesBuilder_.addAllMessages(other.responseRules_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule> requestRules_ =
      java.util.Collections.emptyList();
    private void ensureRequestRulesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        requestRules_ = new java.util.ArrayList<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule>(requestRules_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder> requestRulesBuilder_;

    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public java.util.List<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule> getRequestRulesList() {
      if (requestRulesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(requestRules_);
      } else {
        return requestRulesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public int getRequestRulesCount() {
      if (requestRulesBuilder_ == null) {
        return requestRules_.size();
      } else {
        return requestRulesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule getRequestRules(int index) {
      if (requestRulesBuilder_ == null) {
        return requestRules_.get(index);
      } else {
        return requestRulesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public Builder setRequestRules(
        int index, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule value) {
      if (requestRulesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRequestRulesIsMutable();
        requestRules_.set(index, value);
        onChanged();
      } else {
        requestRulesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public Builder setRequestRules(
        int index, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder builderForValue) {
      if (requestRulesBuilder_ == null) {
        ensureRequestRulesIsMutable();
        requestRules_.set(index, builderForValue.build());
        onChanged();
      } else {
        requestRulesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public Builder addRequestRules(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule value) {
      if (requestRulesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRequestRulesIsMutable();
        requestRules_.add(value);
        onChanged();
      } else {
        requestRulesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public Builder addRequestRules(
        int index, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule value) {
      if (requestRulesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRequestRulesIsMutable();
        requestRules_.add(index, value);
        onChanged();
      } else {
        requestRulesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public Builder addRequestRules(
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder builderForValue) {
      if (requestRulesBuilder_ == null) {
        ensureRequestRulesIsMutable();
        requestRules_.add(builderForValue.build());
        onChanged();
      } else {
        requestRulesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public Builder addRequestRules(
        int index, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder builderForValue) {
      if (requestRulesBuilder_ == null) {
        ensureRequestRulesIsMutable();
        requestRules_.add(index, builderForValue.build());
        onChanged();
      } else {
        requestRulesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public Builder addAllRequestRules(
        java.lang.Iterable<? extends io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule> values) {
      if (requestRulesBuilder_ == null) {
        ensureRequestRulesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, requestRules_);
        onChanged();
      } else {
        requestRulesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public Builder clearRequestRules() {
      if (requestRulesBuilder_ == null) {
        requestRules_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        requestRulesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public Builder removeRequestRules(int index) {
      if (requestRulesBuilder_ == null) {
        ensureRequestRulesIsMutable();
        requestRules_.remove(index);
        onChanged();
      } else {
        requestRulesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder getRequestRulesBuilder(
        int index) {
      return getRequestRulesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder getRequestRulesOrBuilder(
        int index) {
      if (requestRulesBuilder_ == null) {
        return requestRules_.get(index);  } else {
        return requestRulesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder> 
         getRequestRulesOrBuilderList() {
      if (requestRulesBuilder_ != null) {
        return requestRulesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(requestRules_);
      }
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder addRequestRulesBuilder() {
      return getRequestRulesFieldBuilder().addBuilder(
          io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder addRequestRulesBuilder(
        int index) {
      return getRequestRulesFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of rules to apply to requests.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule request_rules = 1;</code>
     */
    public java.util.List<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder> 
         getRequestRulesBuilderList() {
      return getRequestRulesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder> 
        getRequestRulesFieldBuilder() {
      if (requestRulesBuilder_ == null) {
        requestRulesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder>(
                requestRules_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        requestRules_ = null;
      }
      return requestRulesBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule> responseRules_ =
      java.util.Collections.emptyList();
    private void ensureResponseRulesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        responseRules_ = new java.util.ArrayList<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule>(responseRules_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder> responseRulesBuilder_;

    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public java.util.List<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule> getResponseRulesList() {
      if (responseRulesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(responseRules_);
      } else {
        return responseRulesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public int getResponseRulesCount() {
      if (responseRulesBuilder_ == null) {
        return responseRules_.size();
      } else {
        return responseRulesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule getResponseRules(int index) {
      if (responseRulesBuilder_ == null) {
        return responseRules_.get(index);
      } else {
        return responseRulesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public Builder setResponseRules(
        int index, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule value) {
      if (responseRulesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResponseRulesIsMutable();
        responseRules_.set(index, value);
        onChanged();
      } else {
        responseRulesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public Builder setResponseRules(
        int index, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder builderForValue) {
      if (responseRulesBuilder_ == null) {
        ensureResponseRulesIsMutable();
        responseRules_.set(index, builderForValue.build());
        onChanged();
      } else {
        responseRulesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public Builder addResponseRules(io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule value) {
      if (responseRulesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResponseRulesIsMutable();
        responseRules_.add(value);
        onChanged();
      } else {
        responseRulesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public Builder addResponseRules(
        int index, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule value) {
      if (responseRulesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureResponseRulesIsMutable();
        responseRules_.add(index, value);
        onChanged();
      } else {
        responseRulesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public Builder addResponseRules(
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder builderForValue) {
      if (responseRulesBuilder_ == null) {
        ensureResponseRulesIsMutable();
        responseRules_.add(builderForValue.build());
        onChanged();
      } else {
        responseRulesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public Builder addResponseRules(
        int index, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder builderForValue) {
      if (responseRulesBuilder_ == null) {
        ensureResponseRulesIsMutable();
        responseRules_.add(index, builderForValue.build());
        onChanged();
      } else {
        responseRulesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public Builder addAllResponseRules(
        java.lang.Iterable<? extends io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule> values) {
      if (responseRulesBuilder_ == null) {
        ensureResponseRulesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, responseRules_);
        onChanged();
      } else {
        responseRulesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public Builder clearResponseRules() {
      if (responseRulesBuilder_ == null) {
        responseRules_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        responseRulesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public Builder removeResponseRules(int index) {
      if (responseRulesBuilder_ == null) {
        ensureResponseRulesIsMutable();
        responseRules_.remove(index);
        onChanged();
      } else {
        responseRulesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder getResponseRulesBuilder(
        int index) {
      return getResponseRulesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder getResponseRulesOrBuilder(
        int index) {
      if (responseRulesBuilder_ == null) {
        return responseRules_.get(index);  } else {
        return responseRulesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder> 
         getResponseRulesOrBuilderList() {
      if (responseRulesBuilder_ != null) {
        return responseRulesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(responseRules_);
      }
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder addResponseRulesBuilder() {
      return getResponseRulesFieldBuilder().addBuilder(
          io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder addResponseRulesBuilder(
        int index) {
      return getResponseRulesFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of rules to apply to responses.
     * </pre>
     *
     * <code>repeated .envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule response_rules = 2;</code>
     */
    public java.util.List<io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder> 
         getResponseRulesBuilderList() {
      return getResponseRulesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder> 
        getResponseRulesFieldBuilder() {
      if (responseRulesBuilder_ == null) {
        responseRulesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.Rule.Builder, io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config.RuleOrBuilder>(
                responseRules_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        responseRules_ = null;
      }
      return responseRulesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.header_to_metadata.v3.Config)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.header_to_metadata.v3.Config)
  private static final io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config();
  }

  public static io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Config>
      PARSER = new com.google.protobuf.AbstractParser<Config>() {
    @java.lang.Override
    public Config parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Config(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Config> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Config> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.header_to_metadata.v3.Config getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

