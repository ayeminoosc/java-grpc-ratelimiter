// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/network/client_ssl_auth/v3/client_ssl_auth.proto

package io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3;

/**
 * Protobuf type {@code envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth}
 */
public final class ClientSSLAuth extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth)
    ClientSSLAuthOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ClientSSLAuth.newBuilder() to construct.
  private ClientSSLAuth(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ClientSSLAuth() {
    authApiCluster_ = "";
    statPrefix_ = "";
    ipWhiteList_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ClientSSLAuth();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ClientSSLAuth(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            authApiCluster_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            statPrefix_ = s;
            break;
          }
          case 26: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (refreshDelay_ != null) {
              subBuilder = refreshDelay_.toBuilder();
            }
            refreshDelay_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(refreshDelay_);
              refreshDelay_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              ipWhiteList_ = new java.util.ArrayList<io.envoyproxy.envoy.config.core.v3.CidrRange>();
              mutable_bitField0_ |= 0x00000001;
            }
            ipWhiteList_.add(
                input.readMessage(io.envoyproxy.envoy.config.core.v3.CidrRange.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        ipWhiteList_ = java.util.Collections.unmodifiableList(ipWhiteList_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSslAuthProto.internal_static_envoy_extensions_filters_network_client_ssl_auth_v3_ClientSSLAuth_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSslAuthProto.internal_static_envoy_extensions_filters_network_client_ssl_auth_v3_ClientSSLAuth_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth.class, io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth.Builder.class);
  }

  public static final int AUTH_API_CLUSTER_FIELD_NUMBER = 1;
  private volatile java.lang.Object authApiCluster_;
  /**
   * <pre>
   * The :ref:`cluster manager &lt;arch_overview_cluster_manager&gt;` cluster that runs
   * the authentication service. The filter will connect to the service every 60s to fetch the list
   * of principals. The service must support the expected :ref:`REST API
   * &lt;config_network_filters_client_ssl_auth_rest_api&gt;`.
   * </pre>
   *
   * <code>string auth_api_cluster = 1 [(.validate.rules) = { ... }</code>
   * @return The authApiCluster.
   */
  @java.lang.Override
  public java.lang.String getAuthApiCluster() {
    java.lang.Object ref = authApiCluster_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      authApiCluster_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The :ref:`cluster manager &lt;arch_overview_cluster_manager&gt;` cluster that runs
   * the authentication service. The filter will connect to the service every 60s to fetch the list
   * of principals. The service must support the expected :ref:`REST API
   * &lt;config_network_filters_client_ssl_auth_rest_api&gt;`.
   * </pre>
   *
   * <code>string auth_api_cluster = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for authApiCluster.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAuthApiClusterBytes() {
    java.lang.Object ref = authApiCluster_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      authApiCluster_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STAT_PREFIX_FIELD_NUMBER = 2;
  private volatile java.lang.Object statPrefix_;
  /**
   * <pre>
   * The prefix to use when emitting :ref:`statistics
   * &lt;config_network_filters_client_ssl_auth_stats&gt;`.
   * </pre>
   *
   * <code>string stat_prefix = 2 [(.validate.rules) = { ... }</code>
   * @return The statPrefix.
   */
  @java.lang.Override
  public java.lang.String getStatPrefix() {
    java.lang.Object ref = statPrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      statPrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The prefix to use when emitting :ref:`statistics
   * &lt;config_network_filters_client_ssl_auth_stats&gt;`.
   * </pre>
   *
   * <code>string stat_prefix = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for statPrefix.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStatPrefixBytes() {
    java.lang.Object ref = statPrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      statPrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REFRESH_DELAY_FIELD_NUMBER = 3;
  private com.google.protobuf.Duration refreshDelay_;
  /**
   * <pre>
   * Time in milliseconds between principal refreshes from the
   * authentication service. Default is 60000 (60s). The actual fetch time
   * will be this value plus a random jittered value between
   * 0-refresh_delay_ms milliseconds.
   * </pre>
   *
   * <code>.google.protobuf.Duration refresh_delay = 3;</code>
   * @return Whether the refreshDelay field is set.
   */
  @java.lang.Override
  public boolean hasRefreshDelay() {
    return refreshDelay_ != null;
  }
  /**
   * <pre>
   * Time in milliseconds between principal refreshes from the
   * authentication service. Default is 60000 (60s). The actual fetch time
   * will be this value plus a random jittered value between
   * 0-refresh_delay_ms milliseconds.
   * </pre>
   *
   * <code>.google.protobuf.Duration refresh_delay = 3;</code>
   * @return The refreshDelay.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getRefreshDelay() {
    return refreshDelay_ == null ? com.google.protobuf.Duration.getDefaultInstance() : refreshDelay_;
  }
  /**
   * <pre>
   * Time in milliseconds between principal refreshes from the
   * authentication service. Default is 60000 (60s). The actual fetch time
   * will be this value plus a random jittered value between
   * 0-refresh_delay_ms milliseconds.
   * </pre>
   *
   * <code>.google.protobuf.Duration refresh_delay = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getRefreshDelayOrBuilder() {
    return getRefreshDelay();
  }

  public static final int IP_WHITE_LIST_FIELD_NUMBER = 4;
  private java.util.List<io.envoyproxy.envoy.config.core.v3.CidrRange> ipWhiteList_;
  /**
   * <pre>
   * An optional list of IP address and subnet masks that should be white
   * listed for access by the filter. If no list is provided, there is no
   * IP allowlist.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.core.v3.CidrRange> getIpWhiteListList() {
    return ipWhiteList_;
  }
  /**
   * <pre>
   * An optional list of IP address and subnet masks that should be white
   * listed for access by the filter. If no list is provided, there is no
   * IP allowlist.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder> 
      getIpWhiteListOrBuilderList() {
    return ipWhiteList_;
  }
  /**
   * <pre>
   * An optional list of IP address and subnet masks that should be white
   * listed for access by the filter. If no list is provided, there is no
   * IP allowlist.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
   */
  @java.lang.Override
  public int getIpWhiteListCount() {
    return ipWhiteList_.size();
  }
  /**
   * <pre>
   * An optional list of IP address and subnet masks that should be white
   * listed for access by the filter. If no list is provided, there is no
   * IP allowlist.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.CidrRange getIpWhiteList(int index) {
    return ipWhiteList_.get(index);
  }
  /**
   * <pre>
   * An optional list of IP address and subnet masks that should be white
   * listed for access by the filter. If no list is provided, there is no
   * IP allowlist.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder getIpWhiteListOrBuilder(
      int index) {
    return ipWhiteList_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getAuthApiClusterBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, authApiCluster_);
    }
    if (!getStatPrefixBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, statPrefix_);
    }
    if (refreshDelay_ != null) {
      output.writeMessage(3, getRefreshDelay());
    }
    for (int i = 0; i < ipWhiteList_.size(); i++) {
      output.writeMessage(4, ipWhiteList_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getAuthApiClusterBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, authApiCluster_);
    }
    if (!getStatPrefixBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, statPrefix_);
    }
    if (refreshDelay_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getRefreshDelay());
    }
    for (int i = 0; i < ipWhiteList_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, ipWhiteList_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth other = (io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth) obj;

    if (!getAuthApiCluster()
        .equals(other.getAuthApiCluster())) return false;
    if (!getStatPrefix()
        .equals(other.getStatPrefix())) return false;
    if (hasRefreshDelay() != other.hasRefreshDelay()) return false;
    if (hasRefreshDelay()) {
      if (!getRefreshDelay()
          .equals(other.getRefreshDelay())) return false;
    }
    if (!getIpWhiteListList()
        .equals(other.getIpWhiteListList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + AUTH_API_CLUSTER_FIELD_NUMBER;
    hash = (53 * hash) + getAuthApiCluster().hashCode();
    hash = (37 * hash) + STAT_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getStatPrefix().hashCode();
    if (hasRefreshDelay()) {
      hash = (37 * hash) + REFRESH_DELAY_FIELD_NUMBER;
      hash = (53 * hash) + getRefreshDelay().hashCode();
    }
    if (getIpWhiteListCount() > 0) {
      hash = (37 * hash) + IP_WHITE_LIST_FIELD_NUMBER;
      hash = (53 * hash) + getIpWhiteListList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth)
      io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuthOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSslAuthProto.internal_static_envoy_extensions_filters_network_client_ssl_auth_v3_ClientSSLAuth_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSslAuthProto.internal_static_envoy_extensions_filters_network_client_ssl_auth_v3_ClientSSLAuth_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth.class, io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getIpWhiteListFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      authApiCluster_ = "";

      statPrefix_ = "";

      if (refreshDelayBuilder_ == null) {
        refreshDelay_ = null;
      } else {
        refreshDelay_ = null;
        refreshDelayBuilder_ = null;
      }
      if (ipWhiteListBuilder_ == null) {
        ipWhiteList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        ipWhiteListBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSslAuthProto.internal_static_envoy_extensions_filters_network_client_ssl_auth_v3_ClientSSLAuth_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth build() {
      io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth buildPartial() {
      io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth result = new io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth(this);
      int from_bitField0_ = bitField0_;
      result.authApiCluster_ = authApiCluster_;
      result.statPrefix_ = statPrefix_;
      if (refreshDelayBuilder_ == null) {
        result.refreshDelay_ = refreshDelay_;
      } else {
        result.refreshDelay_ = refreshDelayBuilder_.build();
      }
      if (ipWhiteListBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          ipWhiteList_ = java.util.Collections.unmodifiableList(ipWhiteList_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.ipWhiteList_ = ipWhiteList_;
      } else {
        result.ipWhiteList_ = ipWhiteListBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth other) {
      if (other == io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth.getDefaultInstance()) return this;
      if (!other.getAuthApiCluster().isEmpty()) {
        authApiCluster_ = other.authApiCluster_;
        onChanged();
      }
      if (!other.getStatPrefix().isEmpty()) {
        statPrefix_ = other.statPrefix_;
        onChanged();
      }
      if (other.hasRefreshDelay()) {
        mergeRefreshDelay(other.getRefreshDelay());
      }
      if (ipWhiteListBuilder_ == null) {
        if (!other.ipWhiteList_.isEmpty()) {
          if (ipWhiteList_.isEmpty()) {
            ipWhiteList_ = other.ipWhiteList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIpWhiteListIsMutable();
            ipWhiteList_.addAll(other.ipWhiteList_);
          }
          onChanged();
        }
      } else {
        if (!other.ipWhiteList_.isEmpty()) {
          if (ipWhiteListBuilder_.isEmpty()) {
            ipWhiteListBuilder_.dispose();
            ipWhiteListBuilder_ = null;
            ipWhiteList_ = other.ipWhiteList_;
            bitField0_ = (bitField0_ & ~0x00000001);
            ipWhiteListBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getIpWhiteListFieldBuilder() : null;
          } else {
            ipWhiteListBuilder_.addAllMessages(other.ipWhiteList_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object authApiCluster_ = "";
    /**
     * <pre>
     * The :ref:`cluster manager &lt;arch_overview_cluster_manager&gt;` cluster that runs
     * the authentication service. The filter will connect to the service every 60s to fetch the list
     * of principals. The service must support the expected :ref:`REST API
     * &lt;config_network_filters_client_ssl_auth_rest_api&gt;`.
     * </pre>
     *
     * <code>string auth_api_cluster = 1 [(.validate.rules) = { ... }</code>
     * @return The authApiCluster.
     */
    public java.lang.String getAuthApiCluster() {
      java.lang.Object ref = authApiCluster_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        authApiCluster_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The :ref:`cluster manager &lt;arch_overview_cluster_manager&gt;` cluster that runs
     * the authentication service. The filter will connect to the service every 60s to fetch the list
     * of principals. The service must support the expected :ref:`REST API
     * &lt;config_network_filters_client_ssl_auth_rest_api&gt;`.
     * </pre>
     *
     * <code>string auth_api_cluster = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for authApiCluster.
     */
    public com.google.protobuf.ByteString
        getAuthApiClusterBytes() {
      java.lang.Object ref = authApiCluster_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        authApiCluster_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The :ref:`cluster manager &lt;arch_overview_cluster_manager&gt;` cluster that runs
     * the authentication service. The filter will connect to the service every 60s to fetch the list
     * of principals. The service must support the expected :ref:`REST API
     * &lt;config_network_filters_client_ssl_auth_rest_api&gt;`.
     * </pre>
     *
     * <code>string auth_api_cluster = 1 [(.validate.rules) = { ... }</code>
     * @param value The authApiCluster to set.
     * @return This builder for chaining.
     */
    public Builder setAuthApiCluster(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      authApiCluster_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The :ref:`cluster manager &lt;arch_overview_cluster_manager&gt;` cluster that runs
     * the authentication service. The filter will connect to the service every 60s to fetch the list
     * of principals. The service must support the expected :ref:`REST API
     * &lt;config_network_filters_client_ssl_auth_rest_api&gt;`.
     * </pre>
     *
     * <code>string auth_api_cluster = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearAuthApiCluster() {
      
      authApiCluster_ = getDefaultInstance().getAuthApiCluster();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The :ref:`cluster manager &lt;arch_overview_cluster_manager&gt;` cluster that runs
     * the authentication service. The filter will connect to the service every 60s to fetch the list
     * of principals. The service must support the expected :ref:`REST API
     * &lt;config_network_filters_client_ssl_auth_rest_api&gt;`.
     * </pre>
     *
     * <code>string auth_api_cluster = 1 [(.validate.rules) = { ... }</code>
     * @param value The bytes for authApiCluster to set.
     * @return This builder for chaining.
     */
    public Builder setAuthApiClusterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      authApiCluster_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object statPrefix_ = "";
    /**
     * <pre>
     * The prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_client_ssl_auth_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 2 [(.validate.rules) = { ... }</code>
     * @return The statPrefix.
     */
    public java.lang.String getStatPrefix() {
      java.lang.Object ref = statPrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        statPrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_client_ssl_auth_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 2 [(.validate.rules) = { ... }</code>
     * @return The bytes for statPrefix.
     */
    public com.google.protobuf.ByteString
        getStatPrefixBytes() {
      java.lang.Object ref = statPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        statPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_client_ssl_auth_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 2 [(.validate.rules) = { ... }</code>
     * @param value The statPrefix to set.
     * @return This builder for chaining.
     */
    public Builder setStatPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      statPrefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_client_ssl_auth_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 2 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearStatPrefix() {
      
      statPrefix_ = getDefaultInstance().getStatPrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_client_ssl_auth_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 2 [(.validate.rules) = { ... }</code>
     * @param value The bytes for statPrefix to set.
     * @return This builder for chaining.
     */
    public Builder setStatPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      statPrefix_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Duration refreshDelay_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> refreshDelayBuilder_;
    /**
     * <pre>
     * Time in milliseconds between principal refreshes from the
     * authentication service. Default is 60000 (60s). The actual fetch time
     * will be this value plus a random jittered value between
     * 0-refresh_delay_ms milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration refresh_delay = 3;</code>
     * @return Whether the refreshDelay field is set.
     */
    public boolean hasRefreshDelay() {
      return refreshDelayBuilder_ != null || refreshDelay_ != null;
    }
    /**
     * <pre>
     * Time in milliseconds between principal refreshes from the
     * authentication service. Default is 60000 (60s). The actual fetch time
     * will be this value plus a random jittered value between
     * 0-refresh_delay_ms milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration refresh_delay = 3;</code>
     * @return The refreshDelay.
     */
    public com.google.protobuf.Duration getRefreshDelay() {
      if (refreshDelayBuilder_ == null) {
        return refreshDelay_ == null ? com.google.protobuf.Duration.getDefaultInstance() : refreshDelay_;
      } else {
        return refreshDelayBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Time in milliseconds between principal refreshes from the
     * authentication service. Default is 60000 (60s). The actual fetch time
     * will be this value plus a random jittered value between
     * 0-refresh_delay_ms milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration refresh_delay = 3;</code>
     */
    public Builder setRefreshDelay(com.google.protobuf.Duration value) {
      if (refreshDelayBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        refreshDelay_ = value;
        onChanged();
      } else {
        refreshDelayBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Time in milliseconds between principal refreshes from the
     * authentication service. Default is 60000 (60s). The actual fetch time
     * will be this value plus a random jittered value between
     * 0-refresh_delay_ms milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration refresh_delay = 3;</code>
     */
    public Builder setRefreshDelay(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (refreshDelayBuilder_ == null) {
        refreshDelay_ = builderForValue.build();
        onChanged();
      } else {
        refreshDelayBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Time in milliseconds between principal refreshes from the
     * authentication service. Default is 60000 (60s). The actual fetch time
     * will be this value plus a random jittered value between
     * 0-refresh_delay_ms milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration refresh_delay = 3;</code>
     */
    public Builder mergeRefreshDelay(com.google.protobuf.Duration value) {
      if (refreshDelayBuilder_ == null) {
        if (refreshDelay_ != null) {
          refreshDelay_ =
            com.google.protobuf.Duration.newBuilder(refreshDelay_).mergeFrom(value).buildPartial();
        } else {
          refreshDelay_ = value;
        }
        onChanged();
      } else {
        refreshDelayBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Time in milliseconds between principal refreshes from the
     * authentication service. Default is 60000 (60s). The actual fetch time
     * will be this value plus a random jittered value between
     * 0-refresh_delay_ms milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration refresh_delay = 3;</code>
     */
    public Builder clearRefreshDelay() {
      if (refreshDelayBuilder_ == null) {
        refreshDelay_ = null;
        onChanged();
      } else {
        refreshDelay_ = null;
        refreshDelayBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Time in milliseconds between principal refreshes from the
     * authentication service. Default is 60000 (60s). The actual fetch time
     * will be this value plus a random jittered value between
     * 0-refresh_delay_ms milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration refresh_delay = 3;</code>
     */
    public com.google.protobuf.Duration.Builder getRefreshDelayBuilder() {
      
      onChanged();
      return getRefreshDelayFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Time in milliseconds between principal refreshes from the
     * authentication service. Default is 60000 (60s). The actual fetch time
     * will be this value plus a random jittered value between
     * 0-refresh_delay_ms milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration refresh_delay = 3;</code>
     */
    public com.google.protobuf.DurationOrBuilder getRefreshDelayOrBuilder() {
      if (refreshDelayBuilder_ != null) {
        return refreshDelayBuilder_.getMessageOrBuilder();
      } else {
        return refreshDelay_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : refreshDelay_;
      }
    }
    /**
     * <pre>
     * Time in milliseconds between principal refreshes from the
     * authentication service. Default is 60000 (60s). The actual fetch time
     * will be this value plus a random jittered value between
     * 0-refresh_delay_ms milliseconds.
     * </pre>
     *
     * <code>.google.protobuf.Duration refresh_delay = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getRefreshDelayFieldBuilder() {
      if (refreshDelayBuilder_ == null) {
        refreshDelayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getRefreshDelay(),
                getParentForChildren(),
                isClean());
        refreshDelay_ = null;
      }
      return refreshDelayBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.config.core.v3.CidrRange> ipWhiteList_ =
      java.util.Collections.emptyList();
    private void ensureIpWhiteListIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        ipWhiteList_ = new java.util.ArrayList<io.envoyproxy.envoy.config.core.v3.CidrRange>(ipWhiteList_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.CidrRange, io.envoyproxy.envoy.config.core.v3.CidrRange.Builder, io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder> ipWhiteListBuilder_;

    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.CidrRange> getIpWhiteListList() {
      if (ipWhiteListBuilder_ == null) {
        return java.util.Collections.unmodifiableList(ipWhiteList_);
      } else {
        return ipWhiteListBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public int getIpWhiteListCount() {
      if (ipWhiteListBuilder_ == null) {
        return ipWhiteList_.size();
      } else {
        return ipWhiteListBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.core.v3.CidrRange getIpWhiteList(int index) {
      if (ipWhiteListBuilder_ == null) {
        return ipWhiteList_.get(index);
      } else {
        return ipWhiteListBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public Builder setIpWhiteList(
        int index, io.envoyproxy.envoy.config.core.v3.CidrRange value) {
      if (ipWhiteListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIpWhiteListIsMutable();
        ipWhiteList_.set(index, value);
        onChanged();
      } else {
        ipWhiteListBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public Builder setIpWhiteList(
        int index, io.envoyproxy.envoy.config.core.v3.CidrRange.Builder builderForValue) {
      if (ipWhiteListBuilder_ == null) {
        ensureIpWhiteListIsMutable();
        ipWhiteList_.set(index, builderForValue.build());
        onChanged();
      } else {
        ipWhiteListBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public Builder addIpWhiteList(io.envoyproxy.envoy.config.core.v3.CidrRange value) {
      if (ipWhiteListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIpWhiteListIsMutable();
        ipWhiteList_.add(value);
        onChanged();
      } else {
        ipWhiteListBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public Builder addIpWhiteList(
        int index, io.envoyproxy.envoy.config.core.v3.CidrRange value) {
      if (ipWhiteListBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIpWhiteListIsMutable();
        ipWhiteList_.add(index, value);
        onChanged();
      } else {
        ipWhiteListBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public Builder addIpWhiteList(
        io.envoyproxy.envoy.config.core.v3.CidrRange.Builder builderForValue) {
      if (ipWhiteListBuilder_ == null) {
        ensureIpWhiteListIsMutable();
        ipWhiteList_.add(builderForValue.build());
        onChanged();
      } else {
        ipWhiteListBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public Builder addIpWhiteList(
        int index, io.envoyproxy.envoy.config.core.v3.CidrRange.Builder builderForValue) {
      if (ipWhiteListBuilder_ == null) {
        ensureIpWhiteListIsMutable();
        ipWhiteList_.add(index, builderForValue.build());
        onChanged();
      } else {
        ipWhiteListBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public Builder addAllIpWhiteList(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.core.v3.CidrRange> values) {
      if (ipWhiteListBuilder_ == null) {
        ensureIpWhiteListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ipWhiteList_);
        onChanged();
      } else {
        ipWhiteListBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public Builder clearIpWhiteList() {
      if (ipWhiteListBuilder_ == null) {
        ipWhiteList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        ipWhiteListBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public Builder removeIpWhiteList(int index) {
      if (ipWhiteListBuilder_ == null) {
        ensureIpWhiteListIsMutable();
        ipWhiteList_.remove(index);
        onChanged();
      } else {
        ipWhiteListBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.core.v3.CidrRange.Builder getIpWhiteListBuilder(
        int index) {
      return getIpWhiteListFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder getIpWhiteListOrBuilder(
        int index) {
      if (ipWhiteListBuilder_ == null) {
        return ipWhiteList_.get(index);  } else {
        return ipWhiteListBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder> 
         getIpWhiteListOrBuilderList() {
      if (ipWhiteListBuilder_ != null) {
        return ipWhiteListBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(ipWhiteList_);
      }
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.core.v3.CidrRange.Builder addIpWhiteListBuilder() {
      return getIpWhiteListFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.core.v3.CidrRange.getDefaultInstance());
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.core.v3.CidrRange.Builder addIpWhiteListBuilder(
        int index) {
      return getIpWhiteListFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.core.v3.CidrRange.getDefaultInstance());
    }
    /**
     * <pre>
     * An optional list of IP address and subnet masks that should be white
     * listed for access by the filter. If no list is provided, there is no
     * IP allowlist.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.CidrRange ip_white_list = 4 [(.udpa.annotations.field_migrate) = { ... }</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.CidrRange.Builder> 
         getIpWhiteListBuilderList() {
      return getIpWhiteListFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.CidrRange, io.envoyproxy.envoy.config.core.v3.CidrRange.Builder, io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder> 
        getIpWhiteListFieldBuilder() {
      if (ipWhiteListBuilder_ == null) {
        ipWhiteListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.CidrRange, io.envoyproxy.envoy.config.core.v3.CidrRange.Builder, io.envoyproxy.envoy.config.core.v3.CidrRangeOrBuilder>(
                ipWhiteList_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        ipWhiteList_ = null;
      }
      return ipWhiteListBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth)
  private static final io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth();
  }

  public static io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ClientSSLAuth>
      PARSER = new com.google.protobuf.AbstractParser<ClientSSLAuth>() {
    @java.lang.Override
    public ClientSSLAuth parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ClientSSLAuth(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ClientSSLAuth> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ClientSSLAuth> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.network.client_ssl_auth.v3.ClientSSLAuth getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

