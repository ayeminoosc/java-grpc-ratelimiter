// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/decompressor/v3/decompressor.proto

package io.envoyproxy.envoy.extensions.filters.http.decompressor.v3;

public interface DecompressorOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.decompressor.v3.Decompressor)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A decompressor library to use for both request and response decompression. Currently only
   * :ref:`envoy.compression.gzip.compressor&lt;envoy_api_msg_extensions.compression.gzip.decompressor.v3.Gzip&gt;`
   * is included in Envoy.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig decompressor_library = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the decompressorLibrary field is set.
   */
  boolean hasDecompressorLibrary();
  /**
   * <pre>
   * A decompressor library to use for both request and response decompression. Currently only
   * :ref:`envoy.compression.gzip.compressor&lt;envoy_api_msg_extensions.compression.gzip.decompressor.v3.Gzip&gt;`
   * is included in Envoy.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig decompressor_library = 1 [(.validate.rules) = { ... }</code>
   * @return The decompressorLibrary.
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getDecompressorLibrary();
  /**
   * <pre>
   * A decompressor library to use for both request and response decompression. Currently only
   * :ref:`envoy.compression.gzip.compressor&lt;envoy_api_msg_extensions.compression.gzip.decompressor.v3.Gzip&gt;`
   * is included in Envoy.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig decompressor_library = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getDecompressorLibraryOrBuilder();

  /**
   * <pre>
   * Configuration for request decompression. Decompression is enabled by default if left empty.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig request_direction_config = 2;</code>
   * @return Whether the requestDirectionConfig field is set.
   */
  boolean hasRequestDirectionConfig();
  /**
   * <pre>
   * Configuration for request decompression. Decompression is enabled by default if left empty.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig request_direction_config = 2;</code>
   * @return The requestDirectionConfig.
   */
  io.envoyproxy.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig getRequestDirectionConfig();
  /**
   * <pre>
   * Configuration for request decompression. Decompression is enabled by default if left empty.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfig request_direction_config = 2;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.decompressor.v3.Decompressor.RequestDirectionConfigOrBuilder getRequestDirectionConfigOrBuilder();

  /**
   * <pre>
   * Configuration for response decompression. Decompression is enabled by default if left empty.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig response_direction_config = 3;</code>
   * @return Whether the responseDirectionConfig field is set.
   */
  boolean hasResponseDirectionConfig();
  /**
   * <pre>
   * Configuration for response decompression. Decompression is enabled by default if left empty.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig response_direction_config = 3;</code>
   * @return The responseDirectionConfig.
   */
  io.envoyproxy.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig getResponseDirectionConfig();
  /**
   * <pre>
   * Configuration for response decompression. Decompression is enabled by default if left empty.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfig response_direction_config = 3;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.decompressor.v3.Decompressor.ResponseDirectionConfigOrBuilder getResponseDirectionConfigOrBuilder();
}
