// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/dynamic_forward_proxy/v3/dynamic_forward_proxy.proto

package io.envoyproxy.envoy.extensions.filters.http.dynamic_forward_proxy.v3;

public interface PerRouteConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.dynamic_forward_proxy.v3.PerRouteConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Indicates that before DNS lookup, the host header will be swapped with
   * this value. If not set or empty, the original host header value
   * will be used and no rewrite will happen.
   * Note: this rewrite affects both DNS lookup and host header forwarding. However, this
   * option shouldn't be used with
   * :ref:`HCM host rewrite &lt;envoy_api_field_config.route.v3.RouteAction.host_rewrite_literal&gt;` given that the
   * value set here would be used for DNS lookups whereas the value set in the HCM would be used
   * for host header forwarding which is not the desired outcome.
   * </pre>
   *
   * <code>string host_rewrite_literal = 1;</code>
   * @return Whether the hostRewriteLiteral field is set.
   */
  boolean hasHostRewriteLiteral();
  /**
   * <pre>
   * Indicates that before DNS lookup, the host header will be swapped with
   * this value. If not set or empty, the original host header value
   * will be used and no rewrite will happen.
   * Note: this rewrite affects both DNS lookup and host header forwarding. However, this
   * option shouldn't be used with
   * :ref:`HCM host rewrite &lt;envoy_api_field_config.route.v3.RouteAction.host_rewrite_literal&gt;` given that the
   * value set here would be used for DNS lookups whereas the value set in the HCM would be used
   * for host header forwarding which is not the desired outcome.
   * </pre>
   *
   * <code>string host_rewrite_literal = 1;</code>
   * @return The hostRewriteLiteral.
   */
  java.lang.String getHostRewriteLiteral();
  /**
   * <pre>
   * Indicates that before DNS lookup, the host header will be swapped with
   * this value. If not set or empty, the original host header value
   * will be used and no rewrite will happen.
   * Note: this rewrite affects both DNS lookup and host header forwarding. However, this
   * option shouldn't be used with
   * :ref:`HCM host rewrite &lt;envoy_api_field_config.route.v3.RouteAction.host_rewrite_literal&gt;` given that the
   * value set here would be used for DNS lookups whereas the value set in the HCM would be used
   * for host header forwarding which is not the desired outcome.
   * </pre>
   *
   * <code>string host_rewrite_literal = 1;</code>
   * @return The bytes for hostRewriteLiteral.
   */
  com.google.protobuf.ByteString
      getHostRewriteLiteralBytes();

  /**
   * <pre>
   * Indicates that before DNS lookup, the host header will be swapped with
   * the value of this header. If not set or empty, the original host header
   * value will be used and no rewrite will happen.
   * Note: this rewrite affects both DNS lookup and host header forwarding. However, this
   * option shouldn't be used with
   * :ref:`HCM host rewrite header &lt;envoy_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`
   * given that the value set here would be used for DNS lookups whereas the value set in the HCM
   * would be used for host header forwarding which is not the desired outcome.
   * .. note::
   *   If the header appears multiple times only the first value is used.
   * </pre>
   *
   * <code>string host_rewrite_header = 2;</code>
   * @return Whether the hostRewriteHeader field is set.
   */
  boolean hasHostRewriteHeader();
  /**
   * <pre>
   * Indicates that before DNS lookup, the host header will be swapped with
   * the value of this header. If not set or empty, the original host header
   * value will be used and no rewrite will happen.
   * Note: this rewrite affects both DNS lookup and host header forwarding. However, this
   * option shouldn't be used with
   * :ref:`HCM host rewrite header &lt;envoy_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`
   * given that the value set here would be used for DNS lookups whereas the value set in the HCM
   * would be used for host header forwarding which is not the desired outcome.
   * .. note::
   *   If the header appears multiple times only the first value is used.
   * </pre>
   *
   * <code>string host_rewrite_header = 2;</code>
   * @return The hostRewriteHeader.
   */
  java.lang.String getHostRewriteHeader();
  /**
   * <pre>
   * Indicates that before DNS lookup, the host header will be swapped with
   * the value of this header. If not set or empty, the original host header
   * value will be used and no rewrite will happen.
   * Note: this rewrite affects both DNS lookup and host header forwarding. However, this
   * option shouldn't be used with
   * :ref:`HCM host rewrite header &lt;envoy_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`
   * given that the value set here would be used for DNS lookups whereas the value set in the HCM
   * would be used for host header forwarding which is not the desired outcome.
   * .. note::
   *   If the header appears multiple times only the first value is used.
   * </pre>
   *
   * <code>string host_rewrite_header = 2;</code>
   * @return The bytes for hostRewriteHeader.
   */
  com.google.protobuf.ByteString
      getHostRewriteHeaderBytes();

  public io.envoyproxy.envoy.extensions.filters.http.dynamic_forward_proxy.v3.PerRouteConfig.HostRewriteSpecifierCase getHostRewriteSpecifierCase();
}
