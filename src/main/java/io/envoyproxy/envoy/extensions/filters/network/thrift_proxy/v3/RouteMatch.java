// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/network/thrift_proxy/v3/route.proto

package io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3;

/**
 * Protobuf type {@code envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch}
 */
public final class RouteMatch extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch)
    RouteMatchOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RouteMatch.newBuilder() to construct.
  private RouteMatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RouteMatch() {
    headers_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RouteMatch();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RouteMatch(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            matchSpecifierCase_ = 1;
            matchSpecifier_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();
            matchSpecifierCase_ = 2;
            matchSpecifier_ = s;
            break;
          }
          case 24: {

            invert_ = input.readBool();
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              headers_ = new java.util.ArrayList<io.envoyproxy.envoy.config.route.v3.HeaderMatcher>();
              mutable_bitField0_ |= 0x00000001;
            }
            headers_.add(
                input.readMessage(io.envoyproxy.envoy.config.route.v3.HeaderMatcher.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        headers_ = java.util.Collections.unmodifiableList(headers_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_thrift_proxy_v3_RouteMatch_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_thrift_proxy_v3_RouteMatch_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch.class, io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch.Builder.class);
  }

  private int matchSpecifierCase_ = 0;
  private java.lang.Object matchSpecifier_;
  public enum MatchSpecifierCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    METHOD_NAME(1),
    SERVICE_NAME(2),
    MATCHSPECIFIER_NOT_SET(0);
    private final int value;
    private MatchSpecifierCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MatchSpecifierCase valueOf(int value) {
      return forNumber(value);
    }

    public static MatchSpecifierCase forNumber(int value) {
      switch (value) {
        case 1: return METHOD_NAME;
        case 2: return SERVICE_NAME;
        case 0: return MATCHSPECIFIER_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MatchSpecifierCase
  getMatchSpecifierCase() {
    return MatchSpecifierCase.forNumber(
        matchSpecifierCase_);
  }

  public static final int METHOD_NAME_FIELD_NUMBER = 1;
  /**
   * <pre>
   * If specified, the route must exactly match the request method name. As a special case, an
   * empty string matches any request method name.
   * </pre>
   *
   * <code>string method_name = 1;</code>
   * @return Whether the methodName field is set.
   */
  public boolean hasMethodName() {
    return matchSpecifierCase_ == 1;
  }
  /**
   * <pre>
   * If specified, the route must exactly match the request method name. As a special case, an
   * empty string matches any request method name.
   * </pre>
   *
   * <code>string method_name = 1;</code>
   * @return The methodName.
   */
  public java.lang.String getMethodName() {
    java.lang.Object ref = "";
    if (matchSpecifierCase_ == 1) {
      ref = matchSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (matchSpecifierCase_ == 1) {
        matchSpecifier_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * If specified, the route must exactly match the request method name. As a special case, an
   * empty string matches any request method name.
   * </pre>
   *
   * <code>string method_name = 1;</code>
   * @return The bytes for methodName.
   */
  public com.google.protobuf.ByteString
      getMethodNameBytes() {
    java.lang.Object ref = "";
    if (matchSpecifierCase_ == 1) {
      ref = matchSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (matchSpecifierCase_ == 1) {
        matchSpecifier_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICE_NAME_FIELD_NUMBER = 2;
  /**
   * <pre>
   * If specified, the route must have the service name as the request method name prefix. As a
   * special case, an empty string matches any service name. Only relevant when service
   * multiplexing.
   * </pre>
   *
   * <code>string service_name = 2;</code>
   * @return Whether the serviceName field is set.
   */
  public boolean hasServiceName() {
    return matchSpecifierCase_ == 2;
  }
  /**
   * <pre>
   * If specified, the route must have the service name as the request method name prefix. As a
   * special case, an empty string matches any service name. Only relevant when service
   * multiplexing.
   * </pre>
   *
   * <code>string service_name = 2;</code>
   * @return The serviceName.
   */
  public java.lang.String getServiceName() {
    java.lang.Object ref = "";
    if (matchSpecifierCase_ == 2) {
      ref = matchSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (matchSpecifierCase_ == 2) {
        matchSpecifier_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * If specified, the route must have the service name as the request method name prefix. As a
   * special case, an empty string matches any service name. Only relevant when service
   * multiplexing.
   * </pre>
   *
   * <code>string service_name = 2;</code>
   * @return The bytes for serviceName.
   */
  public com.google.protobuf.ByteString
      getServiceNameBytes() {
    java.lang.Object ref = "";
    if (matchSpecifierCase_ == 2) {
      ref = matchSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (matchSpecifierCase_ == 2) {
        matchSpecifier_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INVERT_FIELD_NUMBER = 3;
  private boolean invert_;
  /**
   * <pre>
   * Inverts whatever matching is done in the :ref:`method_name
   * &lt;envoy_api_field_extensions.filters.network.thrift_proxy.v3.RouteMatch.method_name&gt;` or
   * :ref:`service_name
   * &lt;envoy_api_field_extensions.filters.network.thrift_proxy.v3.RouteMatch.service_name&gt;` fields.
   * Cannot be combined with wildcard matching as that would result in routes never being matched.
   * .. note::
   *   This does not invert matching done as part of the :ref:`headers field
   *   &lt;envoy_api_field_extensions.filters.network.thrift_proxy.v3.RouteMatch.headers&gt;` field. To
   *   invert header matching, see :ref:`invert_match
   *   &lt;envoy_api_field_config.route.v3.HeaderMatcher.invert_match&gt;`.
   * </pre>
   *
   * <code>bool invert = 3;</code>
   * @return The invert.
   */
  @java.lang.Override
  public boolean getInvert() {
    return invert_;
  }

  public static final int HEADERS_FIELD_NUMBER = 4;
  private java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> headers_;
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config). Note that this only applies for Thrift transports and/or
   * protocols that support headers.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> getHeadersList() {
    return headers_;
  }
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config). Note that this only applies for Thrift transports and/or
   * protocols that support headers.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> 
      getHeadersOrBuilderList() {
    return headers_;
  }
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config). Note that this only applies for Thrift transports and/or
   * protocols that support headers.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
   */
  @java.lang.Override
  public int getHeadersCount() {
    return headers_.size();
  }
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config). Note that this only applies for Thrift transports and/or
   * protocols that support headers.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.HeaderMatcher getHeaders(int index) {
    return headers_.get(index);
  }
  /**
   * <pre>
   * Specifies a set of headers that the route should match on. The router will check the request’s
   * headers against all the specified headers in the route config. A match will happen if all the
   * headers in the route are present in the request with the same values (or based on presence if
   * the value field is not in the config). Note that this only applies for Thrift transports and/or
   * protocols that support headers.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder getHeadersOrBuilder(
      int index) {
    return headers_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (matchSpecifierCase_ == 1) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, matchSpecifier_);
    }
    if (matchSpecifierCase_ == 2) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, matchSpecifier_);
    }
    if (invert_ != false) {
      output.writeBool(3, invert_);
    }
    for (int i = 0; i < headers_.size(); i++) {
      output.writeMessage(4, headers_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (matchSpecifierCase_ == 1) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, matchSpecifier_);
    }
    if (matchSpecifierCase_ == 2) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, matchSpecifier_);
    }
    if (invert_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, invert_);
    }
    for (int i = 0; i < headers_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, headers_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch other = (io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch) obj;

    if (getInvert()
        != other.getInvert()) return false;
    if (!getHeadersList()
        .equals(other.getHeadersList())) return false;
    if (!getMatchSpecifierCase().equals(other.getMatchSpecifierCase())) return false;
    switch (matchSpecifierCase_) {
      case 1:
        if (!getMethodName()
            .equals(other.getMethodName())) return false;
        break;
      case 2:
        if (!getServiceName()
            .equals(other.getServiceName())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + INVERT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getInvert());
    if (getHeadersCount() > 0) {
      hash = (37 * hash) + HEADERS_FIELD_NUMBER;
      hash = (53 * hash) + getHeadersList().hashCode();
    }
    switch (matchSpecifierCase_) {
      case 1:
        hash = (37 * hash) + METHOD_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getMethodName().hashCode();
        break;
      case 2:
        hash = (37 * hash) + SERVICE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getServiceName().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch)
      io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatchOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_thrift_proxy_v3_RouteMatch_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_thrift_proxy_v3_RouteMatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch.class, io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getHeadersFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      invert_ = false;

      if (headersBuilder_ == null) {
        headers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        headersBuilder_.clear();
      }
      matchSpecifierCase_ = 0;
      matchSpecifier_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_thrift_proxy_v3_RouteMatch_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch build() {
      io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch buildPartial() {
      io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch result = new io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch(this);
      int from_bitField0_ = bitField0_;
      if (matchSpecifierCase_ == 1) {
        result.matchSpecifier_ = matchSpecifier_;
      }
      if (matchSpecifierCase_ == 2) {
        result.matchSpecifier_ = matchSpecifier_;
      }
      result.invert_ = invert_;
      if (headersBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          headers_ = java.util.Collections.unmodifiableList(headers_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.headers_ = headers_;
      } else {
        result.headers_ = headersBuilder_.build();
      }
      result.matchSpecifierCase_ = matchSpecifierCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch other) {
      if (other == io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch.getDefaultInstance()) return this;
      if (other.getInvert() != false) {
        setInvert(other.getInvert());
      }
      if (headersBuilder_ == null) {
        if (!other.headers_.isEmpty()) {
          if (headers_.isEmpty()) {
            headers_ = other.headers_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHeadersIsMutable();
            headers_.addAll(other.headers_);
          }
          onChanged();
        }
      } else {
        if (!other.headers_.isEmpty()) {
          if (headersBuilder_.isEmpty()) {
            headersBuilder_.dispose();
            headersBuilder_ = null;
            headers_ = other.headers_;
            bitField0_ = (bitField0_ & ~0x00000001);
            headersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHeadersFieldBuilder() : null;
          } else {
            headersBuilder_.addAllMessages(other.headers_);
          }
        }
      }
      switch (other.getMatchSpecifierCase()) {
        case METHOD_NAME: {
          matchSpecifierCase_ = 1;
          matchSpecifier_ = other.matchSpecifier_;
          onChanged();
          break;
        }
        case SERVICE_NAME: {
          matchSpecifierCase_ = 2;
          matchSpecifier_ = other.matchSpecifier_;
          onChanged();
          break;
        }
        case MATCHSPECIFIER_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int matchSpecifierCase_ = 0;
    private java.lang.Object matchSpecifier_;
    public MatchSpecifierCase
        getMatchSpecifierCase() {
      return MatchSpecifierCase.forNumber(
          matchSpecifierCase_);
    }

    public Builder clearMatchSpecifier() {
      matchSpecifierCase_ = 0;
      matchSpecifier_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    /**
     * <pre>
     * If specified, the route must exactly match the request method name. As a special case, an
     * empty string matches any request method name.
     * </pre>
     *
     * <code>string method_name = 1;</code>
     * @return Whether the methodName field is set.
     */
    @java.lang.Override
    public boolean hasMethodName() {
      return matchSpecifierCase_ == 1;
    }
    /**
     * <pre>
     * If specified, the route must exactly match the request method name. As a special case, an
     * empty string matches any request method name.
     * </pre>
     *
     * <code>string method_name = 1;</code>
     * @return The methodName.
     */
    @java.lang.Override
    public java.lang.String getMethodName() {
      java.lang.Object ref = "";
      if (matchSpecifierCase_ == 1) {
        ref = matchSpecifier_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (matchSpecifierCase_ == 1) {
          matchSpecifier_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * If specified, the route must exactly match the request method name. As a special case, an
     * empty string matches any request method name.
     * </pre>
     *
     * <code>string method_name = 1;</code>
     * @return The bytes for methodName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMethodNameBytes() {
      java.lang.Object ref = "";
      if (matchSpecifierCase_ == 1) {
        ref = matchSpecifier_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (matchSpecifierCase_ == 1) {
          matchSpecifier_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * If specified, the route must exactly match the request method name. As a special case, an
     * empty string matches any request method name.
     * </pre>
     *
     * <code>string method_name = 1;</code>
     * @param value The methodName to set.
     * @return This builder for chaining.
     */
    public Builder setMethodName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  matchSpecifierCase_ = 1;
      matchSpecifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If specified, the route must exactly match the request method name. As a special case, an
     * empty string matches any request method name.
     * </pre>
     *
     * <code>string method_name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMethodName() {
      if (matchSpecifierCase_ == 1) {
        matchSpecifierCase_ = 0;
        matchSpecifier_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * If specified, the route must exactly match the request method name. As a special case, an
     * empty string matches any request method name.
     * </pre>
     *
     * <code>string method_name = 1;</code>
     * @param value The bytes for methodName to set.
     * @return This builder for chaining.
     */
    public Builder setMethodNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      matchSpecifierCase_ = 1;
      matchSpecifier_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * If specified, the route must have the service name as the request method name prefix. As a
     * special case, an empty string matches any service name. Only relevant when service
     * multiplexing.
     * </pre>
     *
     * <code>string service_name = 2;</code>
     * @return Whether the serviceName field is set.
     */
    @java.lang.Override
    public boolean hasServiceName() {
      return matchSpecifierCase_ == 2;
    }
    /**
     * <pre>
     * If specified, the route must have the service name as the request method name prefix. As a
     * special case, an empty string matches any service name. Only relevant when service
     * multiplexing.
     * </pre>
     *
     * <code>string service_name = 2;</code>
     * @return The serviceName.
     */
    @java.lang.Override
    public java.lang.String getServiceName() {
      java.lang.Object ref = "";
      if (matchSpecifierCase_ == 2) {
        ref = matchSpecifier_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (matchSpecifierCase_ == 2) {
          matchSpecifier_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * If specified, the route must have the service name as the request method name prefix. As a
     * special case, an empty string matches any service name. Only relevant when service
     * multiplexing.
     * </pre>
     *
     * <code>string service_name = 2;</code>
     * @return The bytes for serviceName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getServiceNameBytes() {
      java.lang.Object ref = "";
      if (matchSpecifierCase_ == 2) {
        ref = matchSpecifier_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (matchSpecifierCase_ == 2) {
          matchSpecifier_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * If specified, the route must have the service name as the request method name prefix. As a
     * special case, an empty string matches any service name. Only relevant when service
     * multiplexing.
     * </pre>
     *
     * <code>string service_name = 2;</code>
     * @param value The serviceName to set.
     * @return This builder for chaining.
     */
    public Builder setServiceName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  matchSpecifierCase_ = 2;
      matchSpecifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If specified, the route must have the service name as the request method name prefix. As a
     * special case, an empty string matches any service name. Only relevant when service
     * multiplexing.
     * </pre>
     *
     * <code>string service_name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearServiceName() {
      if (matchSpecifierCase_ == 2) {
        matchSpecifierCase_ = 0;
        matchSpecifier_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * If specified, the route must have the service name as the request method name prefix. As a
     * special case, an empty string matches any service name. Only relevant when service
     * multiplexing.
     * </pre>
     *
     * <code>string service_name = 2;</code>
     * @param value The bytes for serviceName to set.
     * @return This builder for chaining.
     */
    public Builder setServiceNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      matchSpecifierCase_ = 2;
      matchSpecifier_ = value;
      onChanged();
      return this;
    }

    private boolean invert_ ;
    /**
     * <pre>
     * Inverts whatever matching is done in the :ref:`method_name
     * &lt;envoy_api_field_extensions.filters.network.thrift_proxy.v3.RouteMatch.method_name&gt;` or
     * :ref:`service_name
     * &lt;envoy_api_field_extensions.filters.network.thrift_proxy.v3.RouteMatch.service_name&gt;` fields.
     * Cannot be combined with wildcard matching as that would result in routes never being matched.
     * .. note::
     *   This does not invert matching done as part of the :ref:`headers field
     *   &lt;envoy_api_field_extensions.filters.network.thrift_proxy.v3.RouteMatch.headers&gt;` field. To
     *   invert header matching, see :ref:`invert_match
     *   &lt;envoy_api_field_config.route.v3.HeaderMatcher.invert_match&gt;`.
     * </pre>
     *
     * <code>bool invert = 3;</code>
     * @return The invert.
     */
    @java.lang.Override
    public boolean getInvert() {
      return invert_;
    }
    /**
     * <pre>
     * Inverts whatever matching is done in the :ref:`method_name
     * &lt;envoy_api_field_extensions.filters.network.thrift_proxy.v3.RouteMatch.method_name&gt;` or
     * :ref:`service_name
     * &lt;envoy_api_field_extensions.filters.network.thrift_proxy.v3.RouteMatch.service_name&gt;` fields.
     * Cannot be combined with wildcard matching as that would result in routes never being matched.
     * .. note::
     *   This does not invert matching done as part of the :ref:`headers field
     *   &lt;envoy_api_field_extensions.filters.network.thrift_proxy.v3.RouteMatch.headers&gt;` field. To
     *   invert header matching, see :ref:`invert_match
     *   &lt;envoy_api_field_config.route.v3.HeaderMatcher.invert_match&gt;`.
     * </pre>
     *
     * <code>bool invert = 3;</code>
     * @param value The invert to set.
     * @return This builder for chaining.
     */
    public Builder setInvert(boolean value) {
      
      invert_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Inverts whatever matching is done in the :ref:`method_name
     * &lt;envoy_api_field_extensions.filters.network.thrift_proxy.v3.RouteMatch.method_name&gt;` or
     * :ref:`service_name
     * &lt;envoy_api_field_extensions.filters.network.thrift_proxy.v3.RouteMatch.service_name&gt;` fields.
     * Cannot be combined with wildcard matching as that would result in routes never being matched.
     * .. note::
     *   This does not invert matching done as part of the :ref:`headers field
     *   &lt;envoy_api_field_extensions.filters.network.thrift_proxy.v3.RouteMatch.headers&gt;` field. To
     *   invert header matching, see :ref:`invert_match
     *   &lt;envoy_api_field_config.route.v3.HeaderMatcher.invert_match&gt;`.
     * </pre>
     *
     * <code>bool invert = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearInvert() {
      
      invert_ = false;
      onChanged();
      return this;
    }

    private java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> headers_ =
      java.util.Collections.emptyList();
    private void ensureHeadersIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        headers_ = new java.util.ArrayList<io.envoyproxy.envoy.config.route.v3.HeaderMatcher>(headers_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.HeaderMatcher, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder, io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> headersBuilder_;

    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> getHeadersList() {
      if (headersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(headers_);
      } else {
        return headersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public int getHeadersCount() {
      if (headersBuilder_ == null) {
        return headers_.size();
      } else {
        return headersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcher getHeaders(int index) {
      if (headersBuilder_ == null) {
        return headers_.get(index);
      } else {
        return headersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public Builder setHeaders(
        int index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.set(index, value);
        onChanged();
      } else {
        headersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public Builder setHeaders(
        int index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.set(index, builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public Builder addHeaders(io.envoyproxy.envoy.config.route.v3.HeaderMatcher value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.add(value);
        onChanged();
      } else {
        headersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public Builder addHeaders(
        int index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.add(index, value);
        onChanged();
      } else {
        headersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public Builder addHeaders(
        io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.add(builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public Builder addHeaders(
        int index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.add(index, builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public Builder addAllHeaders(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.route.v3.HeaderMatcher> values) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, headers_);
        onChanged();
      } else {
        headersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public Builder clearHeaders() {
      if (headersBuilder_ == null) {
        headers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        headersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public Builder removeHeaders(int index) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.remove(index);
        onChanged();
      } else {
        headersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder getHeadersBuilder(
        int index) {
      return getHeadersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder getHeadersOrBuilder(
        int index) {
      if (headersBuilder_ == null) {
        return headers_.get(index);  } else {
        return headersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> 
         getHeadersOrBuilderList() {
      if (headersBuilder_ != null) {
        return headersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(headers_);
      }
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder addHeadersBuilder() {
      return getHeadersFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.route.v3.HeaderMatcher.getDefaultInstance());
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder addHeadersBuilder(
        int index) {
      return getHeadersFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.getDefaultInstance());
    }
    /**
     * <pre>
     * Specifies a set of headers that the route should match on. The router will check the request’s
     * headers against all the specified headers in the route config. A match will happen if all the
     * headers in the route are present in the request with the same values (or based on presence if
     * the value field is not in the config). Note that this only applies for Thrift transports and/or
     * protocols that support headers.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder> 
         getHeadersBuilderList() {
      return getHeadersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.HeaderMatcher, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder, io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> 
        getHeadersFieldBuilder() {
      if (headersBuilder_ == null) {
        headersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.HeaderMatcher, io.envoyproxy.envoy.config.route.v3.HeaderMatcher.Builder, io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder>(
                headers_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        headers_ = null;
      }
      return headersBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch)
  private static final io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch();
  }

  public static io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RouteMatch>
      PARSER = new com.google.protobuf.AbstractParser<RouteMatch>() {
    @java.lang.Override
    public RouteMatch parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RouteMatch(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RouteMatch> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RouteMatch> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.network.thrift_proxy.v3.RouteMatch getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

