// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/gzip/v3/gzip.proto

package io.envoyproxy.envoy.extensions.filters.http.gzip.v3;

public interface GzipOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.gzip.v3.Gzip)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Value from 1 to 9 that controls the amount of internal memory used by zlib. Higher values
   * use more memory, but are faster and produce better compression results. The default value is 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value memory_level = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the memoryLevel field is set.
   */
  boolean hasMemoryLevel();
  /**
   * <pre>
   * Value from 1 to 9 that controls the amount of internal memory used by zlib. Higher values
   * use more memory, but are faster and produce better compression results. The default value is 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value memory_level = 1 [(.validate.rules) = { ... }</code>
   * @return The memoryLevel.
   */
  com.google.protobuf.UInt32Value getMemoryLevel();
  /**
   * <pre>
   * Value from 1 to 9 that controls the amount of internal memory used by zlib. Higher values
   * use more memory, but are faster and produce better compression results. The default value is 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value memory_level = 1 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getMemoryLevelOrBuilder();

  /**
   * <pre>
   * A value used for selecting the zlib compression level. This setting will affect speed and
   * amount of compression applied to the content. "BEST" provides higher compression at the cost of
   * higher latency, "SPEED" provides lower compression with minimum impact on response time.
   * "DEFAULT" provides an optimal result between speed and compression. This field will be set to
   * "DEFAULT" if not specified.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.gzip.v3.Gzip.CompressionLevel.Enum compression_level = 3 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for compressionLevel.
   */
  int getCompressionLevelValue();
  /**
   * <pre>
   * A value used for selecting the zlib compression level. This setting will affect speed and
   * amount of compression applied to the content. "BEST" provides higher compression at the cost of
   * higher latency, "SPEED" provides lower compression with minimum impact on response time.
   * "DEFAULT" provides an optimal result between speed and compression. This field will be set to
   * "DEFAULT" if not specified.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.gzip.v3.Gzip.CompressionLevel.Enum compression_level = 3 [(.validate.rules) = { ... }</code>
   * @return The compressionLevel.
   */
  io.envoyproxy.envoy.extensions.filters.http.gzip.v3.Gzip.CompressionLevel.Enum getCompressionLevel();

  /**
   * <pre>
   * A value used for selecting the zlib compression strategy which is directly related to the
   * characteristics of the content. Most of the time "DEFAULT" will be the best choice, though
   * there are situations which changing this parameter might produce better results. For example,
   * run-length encoding (RLE) is typically used when the content is known for having sequences
   * which same data occurs many consecutive times. For more information about each strategy, please
   * refer to zlib manual.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.gzip.v3.Gzip.CompressionStrategy compression_strategy = 4 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for compressionStrategy.
   */
  int getCompressionStrategyValue();
  /**
   * <pre>
   * A value used for selecting the zlib compression strategy which is directly related to the
   * characteristics of the content. Most of the time "DEFAULT" will be the best choice, though
   * there are situations which changing this parameter might produce better results. For example,
   * run-length encoding (RLE) is typically used when the content is known for having sequences
   * which same data occurs many consecutive times. For more information about each strategy, please
   * refer to zlib manual.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.gzip.v3.Gzip.CompressionStrategy compression_strategy = 4 [(.validate.rules) = { ... }</code>
   * @return The compressionStrategy.
   */
  io.envoyproxy.envoy.extensions.filters.http.gzip.v3.Gzip.CompressionStrategy getCompressionStrategy();

  /**
   * <pre>
   * Value from 9 to 15 that represents the base two logarithmic of the compressor's window size.
   * Larger window results in better compression at the expense of memory usage. The default is 12
   * which will produce a 4096 bytes window. For more details about this parameter, please refer to
   * zlib manual &gt; deflateInit2.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value window_bits = 9 [(.validate.rules) = { ... }</code>
   * @return Whether the windowBits field is set.
   */
  boolean hasWindowBits();
  /**
   * <pre>
   * Value from 9 to 15 that represents the base two logarithmic of the compressor's window size.
   * Larger window results in better compression at the expense of memory usage. The default is 12
   * which will produce a 4096 bytes window. For more details about this parameter, please refer to
   * zlib manual &gt; deflateInit2.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value window_bits = 9 [(.validate.rules) = { ... }</code>
   * @return The windowBits.
   */
  com.google.protobuf.UInt32Value getWindowBits();
  /**
   * <pre>
   * Value from 9 to 15 that represents the base two logarithmic of the compressor's window size.
   * Larger window results in better compression at the expense of memory usage. The default is 12
   * which will produce a 4096 bytes window. For more details about this parameter, please refer to
   * zlib manual &gt; deflateInit2.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value window_bits = 9 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getWindowBitsOrBuilder();

  /**
   * <pre>
   * Set of configuration parameters common for all compression filters. If this field is set then
   * the fields `content_length`, `content_type`, `disable_on_etag_header` and
   * `remove_accept_encoding_header` are ignored.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.compressor.v3.Compressor compressor = 10;</code>
   * @return Whether the compressor field is set.
   */
  boolean hasCompressor();
  /**
   * <pre>
   * Set of configuration parameters common for all compression filters. If this field is set then
   * the fields `content_length`, `content_type`, `disable_on_etag_header` and
   * `remove_accept_encoding_header` are ignored.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.compressor.v3.Compressor compressor = 10;</code>
   * @return The compressor.
   */
  io.envoyproxy.envoy.extensions.filters.http.compressor.v3.Compressor getCompressor();
  /**
   * <pre>
   * Set of configuration parameters common for all compression filters. If this field is set then
   * the fields `content_length`, `content_type`, `disable_on_etag_header` and
   * `remove_accept_encoding_header` are ignored.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.compressor.v3.Compressor compressor = 10;</code>
   */
  io.envoyproxy.envoy.extensions.filters.http.compressor.v3.CompressorOrBuilder getCompressorOrBuilder();

  /**
   * <pre>
   * Value for Zlib's next output buffer. If not set, defaults to 4096.
   * See https://www.zlib.net/manual.html for more details. Also see
   * https://github.com/envoyproxy/envoy/issues/8448 for context on this filter's performance.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value chunk_size = 11 [(.validate.rules) = { ... }</code>
   * @return Whether the chunkSize field is set.
   */
  boolean hasChunkSize();
  /**
   * <pre>
   * Value for Zlib's next output buffer. If not set, defaults to 4096.
   * See https://www.zlib.net/manual.html for more details. Also see
   * https://github.com/envoyproxy/envoy/issues/8448 for context on this filter's performance.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value chunk_size = 11 [(.validate.rules) = { ... }</code>
   * @return The chunkSize.
   */
  com.google.protobuf.UInt32Value getChunkSize();
  /**
   * <pre>
   * Value for Zlib's next output buffer. If not set, defaults to 4096.
   * See https://www.zlib.net/manual.html for more details. Also see
   * https://github.com/envoyproxy/envoy/issues/8448 for context on this filter's performance.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value chunk_size = 11 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getChunkSizeOrBuilder();
}
