// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/clusters/dynamic_forward_proxy/v3/cluster.proto

package io.envoyproxy.envoy.extensions.clusters.dynamic_forward_proxy.v3;

public final class ClusterProto {
  private ClusterProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_clusters_dynamic_forward_proxy_v3_ClusterConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_clusters_dynamic_forward_proxy_v3_ClusterConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n@envoy/extensions/clusters/dynamic_forw" +
      "ard_proxy/v3/cluster.proto\0222envoy.extens" +
      "ions.clusters.dynamic_forward_proxy.v3\032@" +
      "envoy/extensions/common/dynamic_forward_" +
      "proxy/v3/dns_cache.proto\032\035udpa/annotatio" +
      "ns/status.proto\032!udpa/annotations/versio" +
      "ning.proto\032\027validate/validate.proto\"\346\001\n\r" +
      "ClusterConfig\022d\n\020dns_cache_config\030\001 \001(\0132" +
      "@.envoy.extensions.common.dynamic_forwar" +
      "d_proxy.v3.DnsCacheConfigB\010\372B\005\212\001\002\020\001\022&\n\036a" +
      "llow_insecure_cluster_options\030\002 \001(\010:G\232\305\210" +
      "\036B\n@envoy.config.cluster.dynamic_forward" +
      "_proxy.v2alpha.ClusterConfigBZ\n@io.envoy" +
      "proxy.envoy.extensions.clusters.dynamic_" +
      "forward_proxy.v3B\014ClusterProtoP\001\272\200\310\321\006\002\020\002" +
      "b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.envoyproxy.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheProto.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
          udpa.annotations.Versioning.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_envoy_extensions_clusters_dynamic_forward_proxy_v3_ClusterConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_extensions_clusters_dynamic_forward_proxy_v3_ClusterConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_clusters_dynamic_forward_proxy_v3_ClusterConfig_descriptor,
        new java.lang.String[] { "DnsCacheConfig", "AllowInsecureClusterOptions", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(udpa.annotations.Versioning.versioning);
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.envoyproxy.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheProto.getDescriptor();
    udpa.annotations.Status.getDescriptor();
    udpa.annotations.Versioning.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
