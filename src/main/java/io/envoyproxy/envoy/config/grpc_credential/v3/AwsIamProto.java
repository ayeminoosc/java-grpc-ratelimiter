// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/grpc_credential/v3/aws_iam.proto

package io.envoyproxy.envoy.config.grpc_credential.v3;

public final class AwsIamProto {
  private AwsIamProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_config_grpc_credential_v3_AwsIamConfig_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_config_grpc_credential_v3_AwsIamConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-envoy/config/grpc_credential/v3/aws_ia" +
      "m.proto\022\037envoy.config.grpc_credential.v3" +
      "\032\035udpa/annotations/status.proto\032!udpa/an" +
      "notations/versioning.proto\032\027validate/val" +
      "idate.proto\"w\n\014AwsIamConfig\022\035\n\014service_n" +
      "ame\030\001 \001(\tB\007\372B\004r\002\020\001\022\016\n\006region\030\002 \001(\t:8\232\305\210\036" +
      "3\n1envoy.config.grpc_credential.v2alpha." +
      "AwsIamConfigBF\n-io.envoyproxy.envoy.conf" +
      "ig.grpc_credential.v3B\013AwsIamProtoP\001\272\200\310\321" +
      "\006\002\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          udpa.annotations.Status.getDescriptor(),
          udpa.annotations.Versioning.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_envoy_config_grpc_credential_v3_AwsIamConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_config_grpc_credential_v3_AwsIamConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_config_grpc_credential_v3_AwsIamConfig_descriptor,
        new java.lang.String[] { "ServiceName", "Region", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(udpa.annotations.Versioning.versioning);
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    udpa.annotations.Status.getDescriptor();
    udpa.annotations.Versioning.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
