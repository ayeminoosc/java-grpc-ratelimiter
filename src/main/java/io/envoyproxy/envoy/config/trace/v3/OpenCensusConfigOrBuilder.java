// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/trace/v3/opencensus.proto

package io.envoyproxy.envoy.config.trace.v3;

public interface OpenCensusConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.trace.v3.OpenCensusConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Configures tracing, e.g. the sampler, max number of annotations, etc.
   * </pre>
   *
   * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
   * @return Whether the traceConfig field is set.
   */
  boolean hasTraceConfig();
  /**
   * <pre>
   * Configures tracing, e.g. the sampler, max number of annotations, etc.
   * </pre>
   *
   * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
   * @return The traceConfig.
   */
  io.opencensus.proto.trace.v1.TraceConfig getTraceConfig();
  /**
   * <pre>
   * Configures tracing, e.g. the sampler, max number of annotations, etc.
   * </pre>
   *
   * <code>.opencensus.proto.trace.v1.TraceConfig trace_config = 1;</code>
   */
  io.opencensus.proto.trace.v1.TraceConfigOrBuilder getTraceConfigOrBuilder();

  /**
   * <pre>
   * Enables the stdout exporter if set to true. This is intended for debugging
   * purposes.
   * </pre>
   *
   * <code>bool stdout_exporter_enabled = 2;</code>
   * @return The stdoutExporterEnabled.
   */
  boolean getStdoutExporterEnabled();

  /**
   * <pre>
   * Enables the Stackdriver exporter if set to true. The project_id must also
   * be set.
   * </pre>
   *
   * <code>bool stackdriver_exporter_enabled = 3;</code>
   * @return The stackdriverExporterEnabled.
   */
  boolean getStackdriverExporterEnabled();

  /**
   * <pre>
   * The Cloud project_id to use for Stackdriver tracing.
   * </pre>
   *
   * <code>string stackdriver_project_id = 4;</code>
   * @return The stackdriverProjectId.
   */
  java.lang.String getStackdriverProjectId();
  /**
   * <pre>
   * The Cloud project_id to use for Stackdriver tracing.
   * </pre>
   *
   * <code>string stackdriver_project_id = 4;</code>
   * @return The bytes for stackdriverProjectId.
   */
  com.google.protobuf.ByteString
      getStackdriverProjectIdBytes();

  /**
   * <pre>
   * (optional) By default, the Stackdriver exporter will connect to production
   * Stackdriver. If stackdriver_address is non-empty, it will instead connect
   * to this address, which is in the gRPC format:
   * https://github.com/grpc/grpc/blob/master/doc/naming.md
   * </pre>
   *
   * <code>string stackdriver_address = 10;</code>
   * @return The stackdriverAddress.
   */
  java.lang.String getStackdriverAddress();
  /**
   * <pre>
   * (optional) By default, the Stackdriver exporter will connect to production
   * Stackdriver. If stackdriver_address is non-empty, it will instead connect
   * to this address, which is in the gRPC format:
   * https://github.com/grpc/grpc/blob/master/doc/naming.md
   * </pre>
   *
   * <code>string stackdriver_address = 10;</code>
   * @return The bytes for stackdriverAddress.
   */
  com.google.protobuf.ByteString
      getStackdriverAddressBytes();

  /**
   * <pre>
   * (optional) The gRPC server that hosts Stackdriver tracing service. Only
   * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
   * is not provided, the default production Stackdriver address will be used.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService stackdriver_grpc_service = 13;</code>
   * @return Whether the stackdriverGrpcService field is set.
   */
  boolean hasStackdriverGrpcService();
  /**
   * <pre>
   * (optional) The gRPC server that hosts Stackdriver tracing service. Only
   * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
   * is not provided, the default production Stackdriver address will be used.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService stackdriver_grpc_service = 13;</code>
   * @return The stackdriverGrpcService.
   */
  io.envoyproxy.envoy.config.core.v3.GrpcService getStackdriverGrpcService();
  /**
   * <pre>
   * (optional) The gRPC server that hosts Stackdriver tracing service. Only
   * Google gRPC is supported. If :ref:`target_uri &lt;envoy_v3_api_field_config.core.v3.GrpcService.GoogleGrpc.target_uri&gt;`
   * is not provided, the default production Stackdriver address will be used.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService stackdriver_grpc_service = 13;</code>
   */
  io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder getStackdriverGrpcServiceOrBuilder();

  /**
   * <pre>
   * Enables the Zipkin exporter if set to true. The url and service name must
   * also be set. This is deprecated, prefer to use Envoy's :ref:`native Zipkin
   * tracer &lt;envoy_v3_api_msg_config.trace.v3.ZipkinConfig&gt;`.
   * </pre>
   *
   * <code>bool zipkin_exporter_enabled = 5 [deprecated = true];</code>
   * @return The zipkinExporterEnabled.
   */
  @java.lang.Deprecated boolean getZipkinExporterEnabled();

  /**
   * <pre>
   * The URL to Zipkin, e.g. "http://127.0.0.1:9411/api/v2/spans". This is
   * deprecated, prefer to use Envoy's :ref:`native Zipkin tracer
   * &lt;envoy_v3_api_msg_config.trace.v3.ZipkinConfig&gt;`.
   * </pre>
   *
   * <code>string zipkin_url = 6 [deprecated = true];</code>
   * @return The zipkinUrl.
   */
  @java.lang.Deprecated java.lang.String getZipkinUrl();
  /**
   * <pre>
   * The URL to Zipkin, e.g. "http://127.0.0.1:9411/api/v2/spans". This is
   * deprecated, prefer to use Envoy's :ref:`native Zipkin tracer
   * &lt;envoy_v3_api_msg_config.trace.v3.ZipkinConfig&gt;`.
   * </pre>
   *
   * <code>string zipkin_url = 6 [deprecated = true];</code>
   * @return The bytes for zipkinUrl.
   */
  @java.lang.Deprecated com.google.protobuf.ByteString
      getZipkinUrlBytes();

  /**
   * <pre>
   * Enables the OpenCensus Agent exporter if set to true. The ocagent_address or
   * ocagent_grpc_service must also be set.
   * </pre>
   *
   * <code>bool ocagent_exporter_enabled = 11;</code>
   * @return The ocagentExporterEnabled.
   */
  boolean getOcagentExporterEnabled();

  /**
   * <pre>
   * The address of the OpenCensus Agent, if its exporter is enabled, in gRPC
   * format: https://github.com/grpc/grpc/blob/master/doc/naming.md
   * [#comment:TODO: deprecate this field]
   * </pre>
   *
   * <code>string ocagent_address = 12;</code>
   * @return The ocagentAddress.
   */
  java.lang.String getOcagentAddress();
  /**
   * <pre>
   * The address of the OpenCensus Agent, if its exporter is enabled, in gRPC
   * format: https://github.com/grpc/grpc/blob/master/doc/naming.md
   * [#comment:TODO: deprecate this field]
   * </pre>
   *
   * <code>string ocagent_address = 12;</code>
   * @return The bytes for ocagentAddress.
   */
  com.google.protobuf.ByteString
      getOcagentAddressBytes();

  /**
   * <pre>
   * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
   * This is only used if the ocagent_address is left empty.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService ocagent_grpc_service = 14;</code>
   * @return Whether the ocagentGrpcService field is set.
   */
  boolean hasOcagentGrpcService();
  /**
   * <pre>
   * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
   * This is only used if the ocagent_address is left empty.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService ocagent_grpc_service = 14;</code>
   * @return The ocagentGrpcService.
   */
  io.envoyproxy.envoy.config.core.v3.GrpcService getOcagentGrpcService();
  /**
   * <pre>
   * (optional) The gRPC server hosted by the OpenCensus Agent. Only Google gRPC is supported.
   * This is only used if the ocagent_address is left empty.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService ocagent_grpc_service = 14;</code>
   */
  io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder getOcagentGrpcServiceOrBuilder();

  /**
   * <pre>
   * List of incoming trace context headers we will accept. First one found
   * wins.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v3.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
   * @return A list containing the incomingTraceContext.
   */
  java.util.List<io.envoyproxy.envoy.config.trace.v3.OpenCensusConfig.TraceContext> getIncomingTraceContextList();
  /**
   * <pre>
   * List of incoming trace context headers we will accept. First one found
   * wins.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v3.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
   * @return The count of incomingTraceContext.
   */
  int getIncomingTraceContextCount();
  /**
   * <pre>
   * List of incoming trace context headers we will accept. First one found
   * wins.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v3.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
   * @param index The index of the element to return.
   * @return The incomingTraceContext at the given index.
   */
  io.envoyproxy.envoy.config.trace.v3.OpenCensusConfig.TraceContext getIncomingTraceContext(int index);
  /**
   * <pre>
   * List of incoming trace context headers we will accept. First one found
   * wins.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v3.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
   * @return A list containing the enum numeric values on the wire for incomingTraceContext.
   */
  java.util.List<java.lang.Integer>
  getIncomingTraceContextValueList();
  /**
   * <pre>
   * List of incoming trace context headers we will accept. First one found
   * wins.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v3.OpenCensusConfig.TraceContext incoming_trace_context = 8;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of incomingTraceContext at the given index.
   */
  int getIncomingTraceContextValue(int index);

  /**
   * <pre>
   * List of outgoing trace context headers we will produce.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v3.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
   * @return A list containing the outgoingTraceContext.
   */
  java.util.List<io.envoyproxy.envoy.config.trace.v3.OpenCensusConfig.TraceContext> getOutgoingTraceContextList();
  /**
   * <pre>
   * List of outgoing trace context headers we will produce.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v3.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
   * @return The count of outgoingTraceContext.
   */
  int getOutgoingTraceContextCount();
  /**
   * <pre>
   * List of outgoing trace context headers we will produce.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v3.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
   * @param index The index of the element to return.
   * @return The outgoingTraceContext at the given index.
   */
  io.envoyproxy.envoy.config.trace.v3.OpenCensusConfig.TraceContext getOutgoingTraceContext(int index);
  /**
   * <pre>
   * List of outgoing trace context headers we will produce.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v3.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
   * @return A list containing the enum numeric values on the wire for outgoingTraceContext.
   */
  java.util.List<java.lang.Integer>
  getOutgoingTraceContextValueList();
  /**
   * <pre>
   * List of outgoing trace context headers we will produce.
   * </pre>
   *
   * <code>repeated .envoy.config.trace.v3.OpenCensusConfig.TraceContext outgoing_trace_context = 9;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of outgoingTraceContext at the given index.
   */
  int getOutgoingTraceContextValue(int index);
}
