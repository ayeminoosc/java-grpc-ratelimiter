// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/trace/v3/zipkin.proto

package io.envoyproxy.envoy.config.trace.v3;

/**
 * <pre>
 * Configuration for the Zipkin tracer.
 * [#extension: envoy.tracers.zipkin]
 * [#next-free-field: 7]
 * </pre>
 *
 * Protobuf type {@code envoy.config.trace.v3.ZipkinConfig}
 */
public final class ZipkinConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.trace.v3.ZipkinConfig)
    ZipkinConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ZipkinConfig.newBuilder() to construct.
  private ZipkinConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ZipkinConfig() {
    collectorCluster_ = "";
    collectorEndpoint_ = "";
    collectorEndpointVersion_ = 0;
    collectorHostname_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ZipkinConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ZipkinConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            collectorCluster_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            collectorEndpoint_ = s;
            break;
          }
          case 24: {

            traceId128Bit_ = input.readBool();
            break;
          }
          case 34: {
            com.google.protobuf.BoolValue.Builder subBuilder = null;
            if (sharedSpanContext_ != null) {
              subBuilder = sharedSpanContext_.toBuilder();
            }
            sharedSpanContext_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(sharedSpanContext_);
              sharedSpanContext_ = subBuilder.buildPartial();
            }

            break;
          }
          case 40: {
            int rawValue = input.readEnum();

            collectorEndpointVersion_ = rawValue;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            collectorHostname_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.trace.v3.ZipkinProto.internal_static_envoy_config_trace_v3_ZipkinConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.trace.v3.ZipkinProto.internal_static_envoy_config_trace_v3_ZipkinConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.class, io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.Builder.class);
  }

  /**
   * <pre>
   * Available Zipkin collector endpoint versions.
   * </pre>
   *
   * Protobuf enum {@code envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion}
   */
  public enum CollectorEndpointVersion
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Zipkin API v1, JSON over HTTP.
     * [#comment: The default implementation of Zipkin client before this field is added was only v1
     * and the way user configure this was by not explicitly specifying the version. Consequently,
     * before this is added, the corresponding Zipkin collector expected to receive v1 payload.
     * Hence the motivation of adding HTTP_JSON_V1 as the default is to avoid a breaking change when
     * user upgrading Envoy with this change. Furthermore, we also immediately deprecate this field,
     * since in Zipkin realm this v1 version is considered to be not preferable anymore.]
     * </pre>
     *
     * <code>DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE = 0 [deprecated = true, (.envoy.annotations.disallowed_by_default_enum) = true];</code>
     */
    @java.lang.Deprecated
    DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE(0),
    /**
     * <pre>
     * Zipkin API v2, JSON over HTTP.
     * </pre>
     *
     * <code>HTTP_JSON = 1;</code>
     */
    HTTP_JSON(1),
    /**
     * <pre>
     * Zipkin API v2, protobuf over HTTP.
     * </pre>
     *
     * <code>HTTP_PROTO = 2;</code>
     */
    HTTP_PROTO(2),
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>GRPC = 3;</code>
     */
    GRPC(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Zipkin API v1, JSON over HTTP.
     * [#comment: The default implementation of Zipkin client before this field is added was only v1
     * and the way user configure this was by not explicitly specifying the version. Consequently,
     * before this is added, the corresponding Zipkin collector expected to receive v1 payload.
     * Hence the motivation of adding HTTP_JSON_V1 as the default is to avoid a breaking change when
     * user upgrading Envoy with this change. Furthermore, we also immediately deprecate this field,
     * since in Zipkin realm this v1 version is considered to be not preferable anymore.]
     * </pre>
     *
     * <code>DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE = 0 [deprecated = true, (.envoy.annotations.disallowed_by_default_enum) = true];</code>
     */
    @java.lang.Deprecated public static final int DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE_VALUE = 0;
    /**
     * <pre>
     * Zipkin API v2, JSON over HTTP.
     * </pre>
     *
     * <code>HTTP_JSON = 1;</code>
     */
    public static final int HTTP_JSON_VALUE = 1;
    /**
     * <pre>
     * Zipkin API v2, protobuf over HTTP.
     * </pre>
     *
     * <code>HTTP_PROTO = 2;</code>
     */
    public static final int HTTP_PROTO_VALUE = 2;
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>GRPC = 3;</code>
     */
    public static final int GRPC_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CollectorEndpointVersion valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CollectorEndpointVersion forNumber(int value) {
      switch (value) {
        case 0: return DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE;
        case 1: return HTTP_JSON;
        case 2: return HTTP_PROTO;
        case 3: return GRPC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CollectorEndpointVersion>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CollectorEndpointVersion> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CollectorEndpointVersion>() {
            public CollectorEndpointVersion findValueByNumber(int number) {
              return CollectorEndpointVersion.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.getDescriptor().getEnumTypes().get(0);
    }

    private static final CollectorEndpointVersion[] VALUES = values();

    public static CollectorEndpointVersion valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CollectorEndpointVersion(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion)
  }

  public static final int COLLECTOR_CLUSTER_FIELD_NUMBER = 1;
  private volatile java.lang.Object collectorCluster_;
  /**
   * <pre>
   * The cluster manager cluster that hosts the Zipkin collectors.
   * </pre>
   *
   * <code>string collector_cluster = 1 [(.validate.rules) = { ... }</code>
   * @return The collectorCluster.
   */
  @java.lang.Override
  public java.lang.String getCollectorCluster() {
    java.lang.Object ref = collectorCluster_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      collectorCluster_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The cluster manager cluster that hosts the Zipkin collectors.
   * </pre>
   *
   * <code>string collector_cluster = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for collectorCluster.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCollectorClusterBytes() {
    java.lang.Object ref = collectorCluster_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      collectorCluster_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COLLECTOR_ENDPOINT_FIELD_NUMBER = 2;
  private volatile java.lang.Object collectorEndpoint_;
  /**
   * <pre>
   * The API endpoint of the Zipkin service where the spans will be sent. When
   * using a standard Zipkin installation, the API endpoint is typically
   * /api/v1/spans, which is the default value.
   * </pre>
   *
   * <code>string collector_endpoint = 2 [(.validate.rules) = { ... }</code>
   * @return The collectorEndpoint.
   */
  @java.lang.Override
  public java.lang.String getCollectorEndpoint() {
    java.lang.Object ref = collectorEndpoint_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      collectorEndpoint_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The API endpoint of the Zipkin service where the spans will be sent. When
   * using a standard Zipkin installation, the API endpoint is typically
   * /api/v1/spans, which is the default value.
   * </pre>
   *
   * <code>string collector_endpoint = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for collectorEndpoint.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCollectorEndpointBytes() {
    java.lang.Object ref = collectorEndpoint_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      collectorEndpoint_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRACE_ID_128BIT_FIELD_NUMBER = 3;
  private boolean traceId128Bit_;
  /**
   * <pre>
   * Determines whether a 128bit trace id will be used when creating a new
   * trace instance. The default value is false, which will result in a 64 bit trace id being used.
   * </pre>
   *
   * <code>bool trace_id_128bit = 3;</code>
   * @return The traceId128bit.
   */
  @java.lang.Override
  public boolean getTraceId128Bit() {
    return traceId128Bit_;
  }

  public static final int SHARED_SPAN_CONTEXT_FIELD_NUMBER = 4;
  private com.google.protobuf.BoolValue sharedSpanContext_;
  /**
   * <pre>
   * Determines whether client and server spans will share the same span context.
   * The default value is true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
   * @return Whether the sharedSpanContext field is set.
   */
  @java.lang.Override
  public boolean hasSharedSpanContext() {
    return sharedSpanContext_ != null;
  }
  /**
   * <pre>
   * Determines whether client and server spans will share the same span context.
   * The default value is true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
   * @return The sharedSpanContext.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getSharedSpanContext() {
    return sharedSpanContext_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : sharedSpanContext_;
  }
  /**
   * <pre>
   * Determines whether client and server spans will share the same span context.
   * The default value is true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getSharedSpanContextOrBuilder() {
    return getSharedSpanContext();
  }

  public static final int COLLECTOR_ENDPOINT_VERSION_FIELD_NUMBER = 5;
  private int collectorEndpointVersion_;
  /**
   * <pre>
   * Determines the selected collector endpoint version. By default, the ``HTTP_JSON_V1`` will be
   * used.
   * </pre>
   *
   * <code>.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion collector_endpoint_version = 5;</code>
   * @return The enum numeric value on the wire for collectorEndpointVersion.
   */
  @java.lang.Override public int getCollectorEndpointVersionValue() {
    return collectorEndpointVersion_;
  }
  /**
   * <pre>
   * Determines the selected collector endpoint version. By default, the ``HTTP_JSON_V1`` will be
   * used.
   * </pre>
   *
   * <code>.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion collector_endpoint_version = 5;</code>
   * @return The collectorEndpointVersion.
   */
  @java.lang.Override public io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion getCollectorEndpointVersion() {
    @SuppressWarnings("deprecation")
    io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion result = io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion.valueOf(collectorEndpointVersion_);
    return result == null ? io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion.UNRECOGNIZED : result;
  }

  public static final int COLLECTOR_HOSTNAME_FIELD_NUMBER = 6;
  private volatile java.lang.Object collectorHostname_;
  /**
   * <pre>
   * Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
   * that require a specific hostname. Defaults to :ref:`collector_cluster &lt;envoy_v3_api_field_config.trace.v3.ZipkinConfig.collector_cluster&gt;` above.
   * </pre>
   *
   * <code>string collector_hostname = 6;</code>
   * @return The collectorHostname.
   */
  @java.lang.Override
  public java.lang.String getCollectorHostname() {
    java.lang.Object ref = collectorHostname_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      collectorHostname_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
   * that require a specific hostname. Defaults to :ref:`collector_cluster &lt;envoy_v3_api_field_config.trace.v3.ZipkinConfig.collector_cluster&gt;` above.
   * </pre>
   *
   * <code>string collector_hostname = 6;</code>
   * @return The bytes for collectorHostname.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCollectorHostnameBytes() {
    java.lang.Object ref = collectorHostname_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      collectorHostname_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getCollectorClusterBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, collectorCluster_);
    }
    if (!getCollectorEndpointBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, collectorEndpoint_);
    }
    if (traceId128Bit_ != false) {
      output.writeBool(3, traceId128Bit_);
    }
    if (sharedSpanContext_ != null) {
      output.writeMessage(4, getSharedSpanContext());
    }
    if (collectorEndpointVersion_ != io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion.DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE.getNumber()) {
      output.writeEnum(5, collectorEndpointVersion_);
    }
    if (!getCollectorHostnameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, collectorHostname_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getCollectorClusterBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, collectorCluster_);
    }
    if (!getCollectorEndpointBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, collectorEndpoint_);
    }
    if (traceId128Bit_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, traceId128Bit_);
    }
    if (sharedSpanContext_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getSharedSpanContext());
    }
    if (collectorEndpointVersion_ != io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion.DEPRECATED_AND_UNAVAILABLE_DO_NOT_USE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, collectorEndpointVersion_);
    }
    if (!getCollectorHostnameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, collectorHostname_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.trace.v3.ZipkinConfig)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.trace.v3.ZipkinConfig other = (io.envoyproxy.envoy.config.trace.v3.ZipkinConfig) obj;

    if (!getCollectorCluster()
        .equals(other.getCollectorCluster())) return false;
    if (!getCollectorEndpoint()
        .equals(other.getCollectorEndpoint())) return false;
    if (getTraceId128Bit()
        != other.getTraceId128Bit()) return false;
    if (hasSharedSpanContext() != other.hasSharedSpanContext()) return false;
    if (hasSharedSpanContext()) {
      if (!getSharedSpanContext()
          .equals(other.getSharedSpanContext())) return false;
    }
    if (collectorEndpointVersion_ != other.collectorEndpointVersion_) return false;
    if (!getCollectorHostname()
        .equals(other.getCollectorHostname())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + COLLECTOR_CLUSTER_FIELD_NUMBER;
    hash = (53 * hash) + getCollectorCluster().hashCode();
    hash = (37 * hash) + COLLECTOR_ENDPOINT_FIELD_NUMBER;
    hash = (53 * hash) + getCollectorEndpoint().hashCode();
    hash = (37 * hash) + TRACE_ID_128BIT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getTraceId128Bit());
    if (hasSharedSpanContext()) {
      hash = (37 * hash) + SHARED_SPAN_CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getSharedSpanContext().hashCode();
    }
    hash = (37 * hash) + COLLECTOR_ENDPOINT_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + collectorEndpointVersion_;
    hash = (37 * hash) + COLLECTOR_HOSTNAME_FIELD_NUMBER;
    hash = (53 * hash) + getCollectorHostname().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.trace.v3.ZipkinConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.trace.v3.ZipkinConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.trace.v3.ZipkinConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.trace.v3.ZipkinConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.trace.v3.ZipkinConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.trace.v3.ZipkinConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.trace.v3.ZipkinConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.trace.v3.ZipkinConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.trace.v3.ZipkinConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.trace.v3.ZipkinConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.trace.v3.ZipkinConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.trace.v3.ZipkinConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.trace.v3.ZipkinConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Configuration for the Zipkin tracer.
   * [#extension: envoy.tracers.zipkin]
   * [#next-free-field: 7]
   * </pre>
   *
   * Protobuf type {@code envoy.config.trace.v3.ZipkinConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.trace.v3.ZipkinConfig)
      io.envoyproxy.envoy.config.trace.v3.ZipkinConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.trace.v3.ZipkinProto.internal_static_envoy_config_trace_v3_ZipkinConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.trace.v3.ZipkinProto.internal_static_envoy_config_trace_v3_ZipkinConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.class, io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      collectorCluster_ = "";

      collectorEndpoint_ = "";

      traceId128Bit_ = false;

      if (sharedSpanContextBuilder_ == null) {
        sharedSpanContext_ = null;
      } else {
        sharedSpanContext_ = null;
        sharedSpanContextBuilder_ = null;
      }
      collectorEndpointVersion_ = 0;

      collectorHostname_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.trace.v3.ZipkinProto.internal_static_envoy_config_trace_v3_ZipkinConfig_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.trace.v3.ZipkinConfig getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.trace.v3.ZipkinConfig build() {
      io.envoyproxy.envoy.config.trace.v3.ZipkinConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.trace.v3.ZipkinConfig buildPartial() {
      io.envoyproxy.envoy.config.trace.v3.ZipkinConfig result = new io.envoyproxy.envoy.config.trace.v3.ZipkinConfig(this);
      result.collectorCluster_ = collectorCluster_;
      result.collectorEndpoint_ = collectorEndpoint_;
      result.traceId128Bit_ = traceId128Bit_;
      if (sharedSpanContextBuilder_ == null) {
        result.sharedSpanContext_ = sharedSpanContext_;
      } else {
        result.sharedSpanContext_ = sharedSpanContextBuilder_.build();
      }
      result.collectorEndpointVersion_ = collectorEndpointVersion_;
      result.collectorHostname_ = collectorHostname_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.trace.v3.ZipkinConfig) {
        return mergeFrom((io.envoyproxy.envoy.config.trace.v3.ZipkinConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.trace.v3.ZipkinConfig other) {
      if (other == io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.getDefaultInstance()) return this;
      if (!other.getCollectorCluster().isEmpty()) {
        collectorCluster_ = other.collectorCluster_;
        onChanged();
      }
      if (!other.getCollectorEndpoint().isEmpty()) {
        collectorEndpoint_ = other.collectorEndpoint_;
        onChanged();
      }
      if (other.getTraceId128Bit() != false) {
        setTraceId128Bit(other.getTraceId128Bit());
      }
      if (other.hasSharedSpanContext()) {
        mergeSharedSpanContext(other.getSharedSpanContext());
      }
      if (other.collectorEndpointVersion_ != 0) {
        setCollectorEndpointVersionValue(other.getCollectorEndpointVersionValue());
      }
      if (!other.getCollectorHostname().isEmpty()) {
        collectorHostname_ = other.collectorHostname_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.config.trace.v3.ZipkinConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.config.trace.v3.ZipkinConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object collectorCluster_ = "";
    /**
     * <pre>
     * The cluster manager cluster that hosts the Zipkin collectors.
     * </pre>
     *
     * <code>string collector_cluster = 1 [(.validate.rules) = { ... }</code>
     * @return The collectorCluster.
     */
    public java.lang.String getCollectorCluster() {
      java.lang.Object ref = collectorCluster_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        collectorCluster_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The cluster manager cluster that hosts the Zipkin collectors.
     * </pre>
     *
     * <code>string collector_cluster = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for collectorCluster.
     */
    public com.google.protobuf.ByteString
        getCollectorClusterBytes() {
      java.lang.Object ref = collectorCluster_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        collectorCluster_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The cluster manager cluster that hosts the Zipkin collectors.
     * </pre>
     *
     * <code>string collector_cluster = 1 [(.validate.rules) = { ... }</code>
     * @param value The collectorCluster to set.
     * @return This builder for chaining.
     */
    public Builder setCollectorCluster(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      collectorCluster_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The cluster manager cluster that hosts the Zipkin collectors.
     * </pre>
     *
     * <code>string collector_cluster = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearCollectorCluster() {
      
      collectorCluster_ = getDefaultInstance().getCollectorCluster();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The cluster manager cluster that hosts the Zipkin collectors.
     * </pre>
     *
     * <code>string collector_cluster = 1 [(.validate.rules) = { ... }</code>
     * @param value The bytes for collectorCluster to set.
     * @return This builder for chaining.
     */
    public Builder setCollectorClusterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      collectorCluster_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object collectorEndpoint_ = "";
    /**
     * <pre>
     * The API endpoint of the Zipkin service where the spans will be sent. When
     * using a standard Zipkin installation, the API endpoint is typically
     * /api/v1/spans, which is the default value.
     * </pre>
     *
     * <code>string collector_endpoint = 2 [(.validate.rules) = { ... }</code>
     * @return The collectorEndpoint.
     */
    public java.lang.String getCollectorEndpoint() {
      java.lang.Object ref = collectorEndpoint_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        collectorEndpoint_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The API endpoint of the Zipkin service where the spans will be sent. When
     * using a standard Zipkin installation, the API endpoint is typically
     * /api/v1/spans, which is the default value.
     * </pre>
     *
     * <code>string collector_endpoint = 2 [(.validate.rules) = { ... }</code>
     * @return The bytes for collectorEndpoint.
     */
    public com.google.protobuf.ByteString
        getCollectorEndpointBytes() {
      java.lang.Object ref = collectorEndpoint_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        collectorEndpoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The API endpoint of the Zipkin service where the spans will be sent. When
     * using a standard Zipkin installation, the API endpoint is typically
     * /api/v1/spans, which is the default value.
     * </pre>
     *
     * <code>string collector_endpoint = 2 [(.validate.rules) = { ... }</code>
     * @param value The collectorEndpoint to set.
     * @return This builder for chaining.
     */
    public Builder setCollectorEndpoint(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      collectorEndpoint_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The API endpoint of the Zipkin service where the spans will be sent. When
     * using a standard Zipkin installation, the API endpoint is typically
     * /api/v1/spans, which is the default value.
     * </pre>
     *
     * <code>string collector_endpoint = 2 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearCollectorEndpoint() {
      
      collectorEndpoint_ = getDefaultInstance().getCollectorEndpoint();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The API endpoint of the Zipkin service where the spans will be sent. When
     * using a standard Zipkin installation, the API endpoint is typically
     * /api/v1/spans, which is the default value.
     * </pre>
     *
     * <code>string collector_endpoint = 2 [(.validate.rules) = { ... }</code>
     * @param value The bytes for collectorEndpoint to set.
     * @return This builder for chaining.
     */
    public Builder setCollectorEndpointBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      collectorEndpoint_ = value;
      onChanged();
      return this;
    }

    private boolean traceId128Bit_ ;
    /**
     * <pre>
     * Determines whether a 128bit trace id will be used when creating a new
     * trace instance. The default value is false, which will result in a 64 bit trace id being used.
     * </pre>
     *
     * <code>bool trace_id_128bit = 3;</code>
     * @return The traceId128bit.
     */
    @java.lang.Override
    public boolean getTraceId128Bit() {
      return traceId128Bit_;
    }
    /**
     * <pre>
     * Determines whether a 128bit trace id will be used when creating a new
     * trace instance. The default value is false, which will result in a 64 bit trace id being used.
     * </pre>
     *
     * <code>bool trace_id_128bit = 3;</code>
     * @param value The traceId128bit to set.
     * @return This builder for chaining.
     */
    public Builder setTraceId128Bit(boolean value) {
      
      traceId128Bit_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines whether a 128bit trace id will be used when creating a new
     * trace instance. The default value is false, which will result in a 64 bit trace id being used.
     * </pre>
     *
     * <code>bool trace_id_128bit = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTraceId128Bit() {
      
      traceId128Bit_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.BoolValue sharedSpanContext_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> sharedSpanContextBuilder_;
    /**
     * <pre>
     * Determines whether client and server spans will share the same span context.
     * The default value is true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
     * @return Whether the sharedSpanContext field is set.
     */
    public boolean hasSharedSpanContext() {
      return sharedSpanContextBuilder_ != null || sharedSpanContext_ != null;
    }
    /**
     * <pre>
     * Determines whether client and server spans will share the same span context.
     * The default value is true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
     * @return The sharedSpanContext.
     */
    public com.google.protobuf.BoolValue getSharedSpanContext() {
      if (sharedSpanContextBuilder_ == null) {
        return sharedSpanContext_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : sharedSpanContext_;
      } else {
        return sharedSpanContextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Determines whether client and server spans will share the same span context.
     * The default value is true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
     */
    public Builder setSharedSpanContext(com.google.protobuf.BoolValue value) {
      if (sharedSpanContextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sharedSpanContext_ = value;
        onChanged();
      } else {
        sharedSpanContextBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Determines whether client and server spans will share the same span context.
     * The default value is true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
     */
    public Builder setSharedSpanContext(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (sharedSpanContextBuilder_ == null) {
        sharedSpanContext_ = builderForValue.build();
        onChanged();
      } else {
        sharedSpanContextBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Determines whether client and server spans will share the same span context.
     * The default value is true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
     */
    public Builder mergeSharedSpanContext(com.google.protobuf.BoolValue value) {
      if (sharedSpanContextBuilder_ == null) {
        if (sharedSpanContext_ != null) {
          sharedSpanContext_ =
            com.google.protobuf.BoolValue.newBuilder(sharedSpanContext_).mergeFrom(value).buildPartial();
        } else {
          sharedSpanContext_ = value;
        }
        onChanged();
      } else {
        sharedSpanContextBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Determines whether client and server spans will share the same span context.
     * The default value is true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
     */
    public Builder clearSharedSpanContext() {
      if (sharedSpanContextBuilder_ == null) {
        sharedSpanContext_ = null;
        onChanged();
      } else {
        sharedSpanContext_ = null;
        sharedSpanContextBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Determines whether client and server spans will share the same span context.
     * The default value is true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
     */
    public com.google.protobuf.BoolValue.Builder getSharedSpanContextBuilder() {
      
      onChanged();
      return getSharedSpanContextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Determines whether client and server spans will share the same span context.
     * The default value is true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getSharedSpanContextOrBuilder() {
      if (sharedSpanContextBuilder_ != null) {
        return sharedSpanContextBuilder_.getMessageOrBuilder();
      } else {
        return sharedSpanContext_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : sharedSpanContext_;
      }
    }
    /**
     * <pre>
     * Determines whether client and server spans will share the same span context.
     * The default value is true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getSharedSpanContextFieldBuilder() {
      if (sharedSpanContextBuilder_ == null) {
        sharedSpanContextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getSharedSpanContext(),
                getParentForChildren(),
                isClean());
        sharedSpanContext_ = null;
      }
      return sharedSpanContextBuilder_;
    }

    private int collectorEndpointVersion_ = 0;
    /**
     * <pre>
     * Determines the selected collector endpoint version. By default, the ``HTTP_JSON_V1`` will be
     * used.
     * </pre>
     *
     * <code>.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion collector_endpoint_version = 5;</code>
     * @return The enum numeric value on the wire for collectorEndpointVersion.
     */
    @java.lang.Override public int getCollectorEndpointVersionValue() {
      return collectorEndpointVersion_;
    }
    /**
     * <pre>
     * Determines the selected collector endpoint version. By default, the ``HTTP_JSON_V1`` will be
     * used.
     * </pre>
     *
     * <code>.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion collector_endpoint_version = 5;</code>
     * @param value The enum numeric value on the wire for collectorEndpointVersion to set.
     * @return This builder for chaining.
     */
    public Builder setCollectorEndpointVersionValue(int value) {
      
      collectorEndpointVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines the selected collector endpoint version. By default, the ``HTTP_JSON_V1`` will be
     * used.
     * </pre>
     *
     * <code>.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion collector_endpoint_version = 5;</code>
     * @return The collectorEndpointVersion.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion getCollectorEndpointVersion() {
      @SuppressWarnings("deprecation")
      io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion result = io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion.valueOf(collectorEndpointVersion_);
      return result == null ? io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Determines the selected collector endpoint version. By default, the ``HTTP_JSON_V1`` will be
     * used.
     * </pre>
     *
     * <code>.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion collector_endpoint_version = 5;</code>
     * @param value The collectorEndpointVersion to set.
     * @return This builder for chaining.
     */
    public Builder setCollectorEndpointVersion(io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      collectorEndpointVersion_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines the selected collector endpoint version. By default, the ``HTTP_JSON_V1`` will be
     * used.
     * </pre>
     *
     * <code>.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion collector_endpoint_version = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearCollectorEndpointVersion() {
      
      collectorEndpointVersion_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object collectorHostname_ = "";
    /**
     * <pre>
     * Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
     * that require a specific hostname. Defaults to :ref:`collector_cluster &lt;envoy_v3_api_field_config.trace.v3.ZipkinConfig.collector_cluster&gt;` above.
     * </pre>
     *
     * <code>string collector_hostname = 6;</code>
     * @return The collectorHostname.
     */
    public java.lang.String getCollectorHostname() {
      java.lang.Object ref = collectorHostname_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        collectorHostname_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
     * that require a specific hostname. Defaults to :ref:`collector_cluster &lt;envoy_v3_api_field_config.trace.v3.ZipkinConfig.collector_cluster&gt;` above.
     * </pre>
     *
     * <code>string collector_hostname = 6;</code>
     * @return The bytes for collectorHostname.
     */
    public com.google.protobuf.ByteString
        getCollectorHostnameBytes() {
      java.lang.Object ref = collectorHostname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        collectorHostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
     * that require a specific hostname. Defaults to :ref:`collector_cluster &lt;envoy_v3_api_field_config.trace.v3.ZipkinConfig.collector_cluster&gt;` above.
     * </pre>
     *
     * <code>string collector_hostname = 6;</code>
     * @param value The collectorHostname to set.
     * @return This builder for chaining.
     */
    public Builder setCollectorHostname(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      collectorHostname_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
     * that require a specific hostname. Defaults to :ref:`collector_cluster &lt;envoy_v3_api_field_config.trace.v3.ZipkinConfig.collector_cluster&gt;` above.
     * </pre>
     *
     * <code>string collector_hostname = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearCollectorHostname() {
      
      collectorHostname_ = getDefaultInstance().getCollectorHostname();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
     * that require a specific hostname. Defaults to :ref:`collector_cluster &lt;envoy_v3_api_field_config.trace.v3.ZipkinConfig.collector_cluster&gt;` above.
     * </pre>
     *
     * <code>string collector_hostname = 6;</code>
     * @param value The bytes for collectorHostname to set.
     * @return This builder for chaining.
     */
    public Builder setCollectorHostnameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      collectorHostname_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.trace.v3.ZipkinConfig)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.trace.v3.ZipkinConfig)
  private static final io.envoyproxy.envoy.config.trace.v3.ZipkinConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.trace.v3.ZipkinConfig();
  }

  public static io.envoyproxy.envoy.config.trace.v3.ZipkinConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ZipkinConfig>
      PARSER = new com.google.protobuf.AbstractParser<ZipkinConfig>() {
    @java.lang.Override
    public ZipkinConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ZipkinConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ZipkinConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ZipkinConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.trace.v3.ZipkinConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

