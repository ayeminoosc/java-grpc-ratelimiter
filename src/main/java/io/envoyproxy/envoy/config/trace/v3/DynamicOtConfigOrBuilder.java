// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/trace/v3/dynamic_ot.proto

package io.envoyproxy.envoy.config.trace.v3;

public interface DynamicOtConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.trace.v3.DynamicOtConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Dynamic library implementing the `OpenTracing API
   * &lt;https://github.com/opentracing/opentracing-cpp&gt;`_.
   * </pre>
   *
   * <code>string library = 1 [(.validate.rules) = { ... }</code>
   * @return The library.
   */
  java.lang.String getLibrary();
  /**
   * <pre>
   * Dynamic library implementing the `OpenTracing API
   * &lt;https://github.com/opentracing/opentracing-cpp&gt;`_.
   * </pre>
   *
   * <code>string library = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for library.
   */
  com.google.protobuf.ByteString
      getLibraryBytes();

  /**
   * <pre>
   * The configuration to use when creating a tracer from the given dynamic
   * library.
   * </pre>
   *
   * <code>.google.protobuf.Struct config = 2;</code>
   * @return Whether the config field is set.
   */
  boolean hasConfig();
  /**
   * <pre>
   * The configuration to use when creating a tracer from the given dynamic
   * library.
   * </pre>
   *
   * <code>.google.protobuf.Struct config = 2;</code>
   * @return The config.
   */
  com.google.protobuf.Struct getConfig();
  /**
   * <pre>
   * The configuration to use when creating a tracer from the given dynamic
   * library.
   * </pre>
   *
   * <code>.google.protobuf.Struct config = 2;</code>
   */
  com.google.protobuf.StructOrBuilder getConfigOrBuilder();
}
