// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/trace/v3/skywalking.proto

package io.envoyproxy.envoy.config.trace.v3;

public interface ClientConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.trace.v3.ClientConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Service name for SkyWalking tracer. If this field is empty, then local service cluster name
   * that configured by :ref:`Bootstrap node &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.node&gt;`
   * message's :ref:`cluster &lt;envoy_v3_api_field_config.core.v3.Node.cluster&gt;` field or command line
   * option :option:`--service-cluster` will be used. If both this field and local service cluster
   * name are empty, ``EnvoyProxy`` is used as the service name by default.
   * </pre>
   *
   * <code>string service_name = 1;</code>
   * @return The serviceName.
   */
  java.lang.String getServiceName();
  /**
   * <pre>
   * Service name for SkyWalking tracer. If this field is empty, then local service cluster name
   * that configured by :ref:`Bootstrap node &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.node&gt;`
   * message's :ref:`cluster &lt;envoy_v3_api_field_config.core.v3.Node.cluster&gt;` field or command line
   * option :option:`--service-cluster` will be used. If both this field and local service cluster
   * name are empty, ``EnvoyProxy`` is used as the service name by default.
   * </pre>
   *
   * <code>string service_name = 1;</code>
   * @return The bytes for serviceName.
   */
  com.google.protobuf.ByteString
      getServiceNameBytes();

  /**
   * <pre>
   * Service instance name for SkyWalking tracer. If this field is empty, then local service node
   * that configured by :ref:`Bootstrap node &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.node&gt;`
   * message's :ref:`id &lt;envoy_v3_api_field_config.core.v3.Node.id&gt;` field or command line  option
   * :option:`--service-node` will be used. If both this field and local service node are empty,
   * ``EnvoyProxy`` is used as the instance name by default.
   * </pre>
   *
   * <code>string instance_name = 2;</code>
   * @return The instanceName.
   */
  java.lang.String getInstanceName();
  /**
   * <pre>
   * Service instance name for SkyWalking tracer. If this field is empty, then local service node
   * that configured by :ref:`Bootstrap node &lt;envoy_v3_api_field_config.bootstrap.v3.Bootstrap.node&gt;`
   * message's :ref:`id &lt;envoy_v3_api_field_config.core.v3.Node.id&gt;` field or command line  option
   * :option:`--service-node` will be used. If both this field and local service node are empty,
   * ``EnvoyProxy`` is used as the instance name by default.
   * </pre>
   *
   * <code>string instance_name = 2;</code>
   * @return The bytes for instanceName.
   */
  com.google.protobuf.ByteString
      getInstanceNameBytes();

  /**
   * <pre>
   * Inline authentication token string.
   * </pre>
   *
   * <code>string backend_token = 3 [(.udpa.annotations.sensitive) = true];</code>
   * @return Whether the backendToken field is set.
   */
  boolean hasBackendToken();
  /**
   * <pre>
   * Inline authentication token string.
   * </pre>
   *
   * <code>string backend_token = 3 [(.udpa.annotations.sensitive) = true];</code>
   * @return The backendToken.
   */
  java.lang.String getBackendToken();
  /**
   * <pre>
   * Inline authentication token string.
   * </pre>
   *
   * <code>string backend_token = 3 [(.udpa.annotations.sensitive) = true];</code>
   * @return The bytes for backendToken.
   */
  com.google.protobuf.ByteString
      getBackendTokenBytes();

  /**
   * <pre>
   * Envoy caches the segment in memory when the SkyWalking backend service is temporarily unavailable.
   * This field specifies the maximum number of segments that can be cached. If not specified, the
   * default is 1024.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_cache_size = 4;</code>
   * @return Whether the maxCacheSize field is set.
   */
  boolean hasMaxCacheSize();
  /**
   * <pre>
   * Envoy caches the segment in memory when the SkyWalking backend service is temporarily unavailable.
   * This field specifies the maximum number of segments that can be cached. If not specified, the
   * default is 1024.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_cache_size = 4;</code>
   * @return The maxCacheSize.
   */
  com.google.protobuf.UInt32Value getMaxCacheSize();
  /**
   * <pre>
   * Envoy caches the segment in memory when the SkyWalking backend service is temporarily unavailable.
   * This field specifies the maximum number of segments that can be cached. If not specified, the
   * default is 1024.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_cache_size = 4;</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getMaxCacheSizeOrBuilder();

  public io.envoyproxy.envoy.config.trace.v3.ClientConfig.BackendTokenSpecifierCase getBackendTokenSpecifierCase();
}
