// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/trace/v3/zipkin.proto

package io.envoyproxy.envoy.config.trace.v3;

public interface ZipkinConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.trace.v3.ZipkinConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The cluster manager cluster that hosts the Zipkin collectors.
   * </pre>
   *
   * <code>string collector_cluster = 1 [(.validate.rules) = { ... }</code>
   * @return The collectorCluster.
   */
  java.lang.String getCollectorCluster();
  /**
   * <pre>
   * The cluster manager cluster that hosts the Zipkin collectors.
   * </pre>
   *
   * <code>string collector_cluster = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for collectorCluster.
   */
  com.google.protobuf.ByteString
      getCollectorClusterBytes();

  /**
   * <pre>
   * The API endpoint of the Zipkin service where the spans will be sent. When
   * using a standard Zipkin installation, the API endpoint is typically
   * /api/v1/spans, which is the default value.
   * </pre>
   *
   * <code>string collector_endpoint = 2 [(.validate.rules) = { ... }</code>
   * @return The collectorEndpoint.
   */
  java.lang.String getCollectorEndpoint();
  /**
   * <pre>
   * The API endpoint of the Zipkin service where the spans will be sent. When
   * using a standard Zipkin installation, the API endpoint is typically
   * /api/v1/spans, which is the default value.
   * </pre>
   *
   * <code>string collector_endpoint = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for collectorEndpoint.
   */
  com.google.protobuf.ByteString
      getCollectorEndpointBytes();

  /**
   * <pre>
   * Determines whether a 128bit trace id will be used when creating a new
   * trace instance. The default value is false, which will result in a 64 bit trace id being used.
   * </pre>
   *
   * <code>bool trace_id_128bit = 3;</code>
   * @return The traceId128bit.
   */
  boolean getTraceId128Bit();

  /**
   * <pre>
   * Determines whether client and server spans will share the same span context.
   * The default value is true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
   * @return Whether the sharedSpanContext field is set.
   */
  boolean hasSharedSpanContext();
  /**
   * <pre>
   * Determines whether client and server spans will share the same span context.
   * The default value is true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
   * @return The sharedSpanContext.
   */
  com.google.protobuf.BoolValue getSharedSpanContext();
  /**
   * <pre>
   * Determines whether client and server spans will share the same span context.
   * The default value is true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue shared_span_context = 4;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getSharedSpanContextOrBuilder();

  /**
   * <pre>
   * Determines the selected collector endpoint version. By default, the ``HTTP_JSON_V1`` will be
   * used.
   * </pre>
   *
   * <code>.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion collector_endpoint_version = 5;</code>
   * @return The enum numeric value on the wire for collectorEndpointVersion.
   */
  int getCollectorEndpointVersionValue();
  /**
   * <pre>
   * Determines the selected collector endpoint version. By default, the ``HTTP_JSON_V1`` will be
   * used.
   * </pre>
   *
   * <code>.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion collector_endpoint_version = 5;</code>
   * @return The collectorEndpointVersion.
   */
  io.envoyproxy.envoy.config.trace.v3.ZipkinConfig.CollectorEndpointVersion getCollectorEndpointVersion();

  /**
   * <pre>
   * Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
   * that require a specific hostname. Defaults to :ref:`collector_cluster &lt;envoy_v3_api_field_config.trace.v3.ZipkinConfig.collector_cluster&gt;` above.
   * </pre>
   *
   * <code>string collector_hostname = 6;</code>
   * @return The collectorHostname.
   */
  java.lang.String getCollectorHostname();
  /**
   * <pre>
   * Optional hostname to use when sending spans to the collector_cluster. Useful for collectors
   * that require a specific hostname. Defaults to :ref:`collector_cluster &lt;envoy_v3_api_field_config.trace.v3.ZipkinConfig.collector_cluster&gt;` above.
   * </pre>
   *
   * <code>string collector_hostname = 6;</code>
   * @return The bytes for collectorHostname.
   */
  com.google.protobuf.ByteString
      getCollectorHostnameBytes();
}
