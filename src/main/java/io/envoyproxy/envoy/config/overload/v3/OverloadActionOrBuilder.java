// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/overload/v3/overload.proto

package io.envoyproxy.envoy.config.overload.v3;

public interface OverloadActionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.overload.v3.OverloadAction)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The name of the overload action. This is just a well-known string that listeners can
   * use for registering callbacks. Custom overload actions should be named using reverse
   * DNS to ensure uniqueness.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The name of the overload action. This is just a well-known string that listeners can
   * use for registering callbacks. Custom overload actions should be named using reverse
   * DNS to ensure uniqueness.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * A set of triggers for this action. The state of the action is the maximum
   * state of all triggers, which can be scaling between 0 and 1 or saturated. Listeners
   * are notified when the overload action changes state.
   * </pre>
   *
   * <code>repeated .envoy.config.overload.v3.Trigger triggers = 2 [(.validate.rules) = { ... }</code>
   */
  java.util.List<io.envoyproxy.envoy.config.overload.v3.Trigger> 
      getTriggersList();
  /**
   * <pre>
   * A set of triggers for this action. The state of the action is the maximum
   * state of all triggers, which can be scaling between 0 and 1 or saturated. Listeners
   * are notified when the overload action changes state.
   * </pre>
   *
   * <code>repeated .envoy.config.overload.v3.Trigger triggers = 2 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.overload.v3.Trigger getTriggers(int index);
  /**
   * <pre>
   * A set of triggers for this action. The state of the action is the maximum
   * state of all triggers, which can be scaling between 0 and 1 or saturated. Listeners
   * are notified when the overload action changes state.
   * </pre>
   *
   * <code>repeated .envoy.config.overload.v3.Trigger triggers = 2 [(.validate.rules) = { ... }</code>
   */
  int getTriggersCount();
  /**
   * <pre>
   * A set of triggers for this action. The state of the action is the maximum
   * state of all triggers, which can be scaling between 0 and 1 or saturated. Listeners
   * are notified when the overload action changes state.
   * </pre>
   *
   * <code>repeated .envoy.config.overload.v3.Trigger triggers = 2 [(.validate.rules) = { ... }</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.overload.v3.TriggerOrBuilder> 
      getTriggersOrBuilderList();
  /**
   * <pre>
   * A set of triggers for this action. The state of the action is the maximum
   * state of all triggers, which can be scaling between 0 and 1 or saturated. Listeners
   * are notified when the overload action changes state.
   * </pre>
   *
   * <code>repeated .envoy.config.overload.v3.Trigger triggers = 2 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.overload.v3.TriggerOrBuilder getTriggersOrBuilder(
      int index);

  /**
   * <pre>
   * Configuration for the action being instantiated.
   * </pre>
   *
   * <code>.google.protobuf.Any typed_config = 3;</code>
   * @return Whether the typedConfig field is set.
   */
  boolean hasTypedConfig();
  /**
   * <pre>
   * Configuration for the action being instantiated.
   * </pre>
   *
   * <code>.google.protobuf.Any typed_config = 3;</code>
   * @return The typedConfig.
   */
  com.google.protobuf.Any getTypedConfig();
  /**
   * <pre>
   * Configuration for the action being instantiated.
   * </pre>
   *
   * <code>.google.protobuf.Any typed_config = 3;</code>
   */
  com.google.protobuf.AnyOrBuilder getTypedConfigOrBuilder();
}
