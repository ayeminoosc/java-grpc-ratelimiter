// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/accesslog/v3/accesslog.proto

package io.envoyproxy.envoy.config.accesslog.v3;

public interface GrpcStatusFilterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.accesslog.v3.GrpcStatusFilter)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Logs only responses that have any one of the gRPC statuses in this field.
   * </pre>
   *
   * <code>repeated .envoy.config.accesslog.v3.GrpcStatusFilter.Status statuses = 1 [(.validate.rules) = { ... }</code>
   * @return A list containing the statuses.
   */
  java.util.List<io.envoyproxy.envoy.config.accesslog.v3.GrpcStatusFilter.Status> getStatusesList();
  /**
   * <pre>
   * Logs only responses that have any one of the gRPC statuses in this field.
   * </pre>
   *
   * <code>repeated .envoy.config.accesslog.v3.GrpcStatusFilter.Status statuses = 1 [(.validate.rules) = { ... }</code>
   * @return The count of statuses.
   */
  int getStatusesCount();
  /**
   * <pre>
   * Logs only responses that have any one of the gRPC statuses in this field.
   * </pre>
   *
   * <code>repeated .envoy.config.accesslog.v3.GrpcStatusFilter.Status statuses = 1 [(.validate.rules) = { ... }</code>
   * @param index The index of the element to return.
   * @return The statuses at the given index.
   */
  io.envoyproxy.envoy.config.accesslog.v3.GrpcStatusFilter.Status getStatuses(int index);
  /**
   * <pre>
   * Logs only responses that have any one of the gRPC statuses in this field.
   * </pre>
   *
   * <code>repeated .envoy.config.accesslog.v3.GrpcStatusFilter.Status statuses = 1 [(.validate.rules) = { ... }</code>
   * @return A list containing the enum numeric values on the wire for statuses.
   */
  java.util.List<java.lang.Integer>
  getStatusesValueList();
  /**
   * <pre>
   * Logs only responses that have any one of the gRPC statuses in this field.
   * </pre>
   *
   * <code>repeated .envoy.config.accesslog.v3.GrpcStatusFilter.Status statuses = 1 [(.validate.rules) = { ... }</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of statuses at the given index.
   */
  int getStatusesValue(int index);

  /**
   * <pre>
   * If included and set to true, the filter will instead block all responses
   * with a gRPC status or inferred gRPC status enumerated in statuses, and
   * allow all other responses.
   * </pre>
   *
   * <code>bool exclude = 2;</code>
   * @return The exclude.
   */
  boolean getExclude();
}
