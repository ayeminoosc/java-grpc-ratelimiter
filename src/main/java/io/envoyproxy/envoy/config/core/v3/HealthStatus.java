// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/core/v3/health_check.proto

package io.envoyproxy.envoy.config.core.v3;

/**
 * <pre>
 * Endpoint health status.
 * </pre>
 *
 * Protobuf enum {@code envoy.config.core.v3.HealthStatus}
 */
public enum HealthStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * The health status is not known. This is interpreted by Envoy as *HEALTHY*.
   * </pre>
   *
   * <code>UNKNOWN = 0;</code>
   */
  UNKNOWN(0),
  /**
   * <pre>
   * Healthy.
   * </pre>
   *
   * <code>HEALTHY = 1;</code>
   */
  HEALTHY(1),
  /**
   * <pre>
   * Unhealthy.
   * </pre>
   *
   * <code>UNHEALTHY = 2;</code>
   */
  UNHEALTHY(2),
  /**
   * <pre>
   * Connection draining in progress. E.g.,
   * `&lt;https://aws.amazon.com/blogs/aws/elb-connection-draining-remove-instances-from-service-with-care/&gt;`_
   * or
   * `&lt;https://cloud.google.com/compute/docs/load-balancing/enabling-connection-draining&gt;`_.
   * This is interpreted by Envoy as *UNHEALTHY*.
   * </pre>
   *
   * <code>DRAINING = 3;</code>
   */
  DRAINING(3),
  /**
   * <pre>
   * Health check timed out. This is part of HDS and is interpreted by Envoy as
   * *UNHEALTHY*.
   * </pre>
   *
   * <code>TIMEOUT = 4;</code>
   */
  TIMEOUT(4),
  /**
   * <pre>
   * Degraded.
   * </pre>
   *
   * <code>DEGRADED = 5;</code>
   */
  DEGRADED(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * The health status is not known. This is interpreted by Envoy as *HEALTHY*.
   * </pre>
   *
   * <code>UNKNOWN = 0;</code>
   */
  public static final int UNKNOWN_VALUE = 0;
  /**
   * <pre>
   * Healthy.
   * </pre>
   *
   * <code>HEALTHY = 1;</code>
   */
  public static final int HEALTHY_VALUE = 1;
  /**
   * <pre>
   * Unhealthy.
   * </pre>
   *
   * <code>UNHEALTHY = 2;</code>
   */
  public static final int UNHEALTHY_VALUE = 2;
  /**
   * <pre>
   * Connection draining in progress. E.g.,
   * `&lt;https://aws.amazon.com/blogs/aws/elb-connection-draining-remove-instances-from-service-with-care/&gt;`_
   * or
   * `&lt;https://cloud.google.com/compute/docs/load-balancing/enabling-connection-draining&gt;`_.
   * This is interpreted by Envoy as *UNHEALTHY*.
   * </pre>
   *
   * <code>DRAINING = 3;</code>
   */
  public static final int DRAINING_VALUE = 3;
  /**
   * <pre>
   * Health check timed out. This is part of HDS and is interpreted by Envoy as
   * *UNHEALTHY*.
   * </pre>
   *
   * <code>TIMEOUT = 4;</code>
   */
  public static final int TIMEOUT_VALUE = 4;
  /**
   * <pre>
   * Degraded.
   * </pre>
   *
   * <code>DEGRADED = 5;</code>
   */
  public static final int DEGRADED_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static HealthStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static HealthStatus forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN;
      case 1: return HEALTHY;
      case 2: return UNHEALTHY;
      case 3: return DRAINING;
      case 4: return TIMEOUT;
      case 5: return DEGRADED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<HealthStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      HealthStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<HealthStatus>() {
          public HealthStatus findValueByNumber(int number) {
            return HealthStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.core.v3.HealthCheckProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final HealthStatus[] VALUES = values();

  public static HealthStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private HealthStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:envoy.config.core.v3.HealthStatus)
}

