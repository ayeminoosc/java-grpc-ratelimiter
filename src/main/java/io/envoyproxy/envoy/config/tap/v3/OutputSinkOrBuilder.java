// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/tap/v3/common.proto

package io.envoyproxy.envoy.config.tap.v3;

public interface OutputSinkOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.tap.v3.OutputSink)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Sink output format.
   * </pre>
   *
   * <code>.envoy.config.tap.v3.OutputSink.Format format = 1 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for format.
   */
  int getFormatValue();
  /**
   * <pre>
   * Sink output format.
   * </pre>
   *
   * <code>.envoy.config.tap.v3.OutputSink.Format format = 1 [(.validate.rules) = { ... }</code>
   * @return The format.
   */
  io.envoyproxy.envoy.config.tap.v3.OutputSink.Format getFormat();

  /**
   * <pre>
   * Tap output will be streamed out the :http:post:`/tap` admin endpoint.
   * .. attention::
   *   It is only allowed to specify the streaming admin output sink if the tap is being
   *   configured from the :http:post:`/tap` admin endpoint. Thus, if an extension has
   *   been configured to receive tap configuration from some other source (e.g., static
   *   file, XDS, etc.) configuring the streaming admin output type will fail.
   * </pre>
   *
   * <code>.envoy.config.tap.v3.StreamingAdminSink streaming_admin = 2;</code>
   * @return Whether the streamingAdmin field is set.
   */
  boolean hasStreamingAdmin();
  /**
   * <pre>
   * Tap output will be streamed out the :http:post:`/tap` admin endpoint.
   * .. attention::
   *   It is only allowed to specify the streaming admin output sink if the tap is being
   *   configured from the :http:post:`/tap` admin endpoint. Thus, if an extension has
   *   been configured to receive tap configuration from some other source (e.g., static
   *   file, XDS, etc.) configuring the streaming admin output type will fail.
   * </pre>
   *
   * <code>.envoy.config.tap.v3.StreamingAdminSink streaming_admin = 2;</code>
   * @return The streamingAdmin.
   */
  io.envoyproxy.envoy.config.tap.v3.StreamingAdminSink getStreamingAdmin();
  /**
   * <pre>
   * Tap output will be streamed out the :http:post:`/tap` admin endpoint.
   * .. attention::
   *   It is only allowed to specify the streaming admin output sink if the tap is being
   *   configured from the :http:post:`/tap` admin endpoint. Thus, if an extension has
   *   been configured to receive tap configuration from some other source (e.g., static
   *   file, XDS, etc.) configuring the streaming admin output type will fail.
   * </pre>
   *
   * <code>.envoy.config.tap.v3.StreamingAdminSink streaming_admin = 2;</code>
   */
  io.envoyproxy.envoy.config.tap.v3.StreamingAdminSinkOrBuilder getStreamingAdminOrBuilder();

  /**
   * <pre>
   * Tap output will be written to a file per tap sink.
   * </pre>
   *
   * <code>.envoy.config.tap.v3.FilePerTapSink file_per_tap = 3;</code>
   * @return Whether the filePerTap field is set.
   */
  boolean hasFilePerTap();
  /**
   * <pre>
   * Tap output will be written to a file per tap sink.
   * </pre>
   *
   * <code>.envoy.config.tap.v3.FilePerTapSink file_per_tap = 3;</code>
   * @return The filePerTap.
   */
  io.envoyproxy.envoy.config.tap.v3.FilePerTapSink getFilePerTap();
  /**
   * <pre>
   * Tap output will be written to a file per tap sink.
   * </pre>
   *
   * <code>.envoy.config.tap.v3.FilePerTapSink file_per_tap = 3;</code>
   */
  io.envoyproxy.envoy.config.tap.v3.FilePerTapSinkOrBuilder getFilePerTapOrBuilder();

  /**
   * <pre>
   * [#not-implemented-hide:]
   * GrpcService to stream data to. The format argument must be PROTO_BINARY.
   * [#comment: TODO(samflattery): remove cleanup in uber_per_filter.cc once implemented]
   * </pre>
   *
   * <code>.envoy.config.tap.v3.StreamingGrpcSink streaming_grpc = 4;</code>
   * @return Whether the streamingGrpc field is set.
   */
  boolean hasStreamingGrpc();
  /**
   * <pre>
   * [#not-implemented-hide:]
   * GrpcService to stream data to. The format argument must be PROTO_BINARY.
   * [#comment: TODO(samflattery): remove cleanup in uber_per_filter.cc once implemented]
   * </pre>
   *
   * <code>.envoy.config.tap.v3.StreamingGrpcSink streaming_grpc = 4;</code>
   * @return The streamingGrpc.
   */
  io.envoyproxy.envoy.config.tap.v3.StreamingGrpcSink getStreamingGrpc();
  /**
   * <pre>
   * [#not-implemented-hide:]
   * GrpcService to stream data to. The format argument must be PROTO_BINARY.
   * [#comment: TODO(samflattery): remove cleanup in uber_per_filter.cc once implemented]
   * </pre>
   *
   * <code>.envoy.config.tap.v3.StreamingGrpcSink streaming_grpc = 4;</code>
   */
  io.envoyproxy.envoy.config.tap.v3.StreamingGrpcSinkOrBuilder getStreamingGrpcOrBuilder();

  public io.envoyproxy.envoy.config.tap.v3.OutputSink.OutputSinkTypeCase getOutputSinkTypeCase();
}
