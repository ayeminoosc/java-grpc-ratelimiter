// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/tap/v3/common.proto

package io.envoyproxy.envoy.config.tap.v3;

/**
 * <pre>
 * Tap output configuration.
 * </pre>
 *
 * Protobuf type {@code envoy.config.tap.v3.OutputConfig}
 */
public final class OutputConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.tap.v3.OutputConfig)
    OutputConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OutputConfig.newBuilder() to construct.
  private OutputConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OutputConfig() {
    sinks_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new OutputConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private OutputConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              sinks_ = new java.util.ArrayList<io.envoyproxy.envoy.config.tap.v3.OutputSink>();
              mutable_bitField0_ |= 0x00000001;
            }
            sinks_.add(
                input.readMessage(io.envoyproxy.envoy.config.tap.v3.OutputSink.parser(), extensionRegistry));
            break;
          }
          case 18: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (maxBufferedRxBytes_ != null) {
              subBuilder = maxBufferedRxBytes_.toBuilder();
            }
            maxBufferedRxBytes_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maxBufferedRxBytes_);
              maxBufferedRxBytes_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (maxBufferedTxBytes_ != null) {
              subBuilder = maxBufferedTxBytes_.toBuilder();
            }
            maxBufferedTxBytes_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maxBufferedTxBytes_);
              maxBufferedTxBytes_ = subBuilder.buildPartial();
            }

            break;
          }
          case 32: {

            streaming_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        sinks_ = java.util.Collections.unmodifiableList(sinks_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.tap.v3.CommonProto.internal_static_envoy_config_tap_v3_OutputConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.tap.v3.CommonProto.internal_static_envoy_config_tap_v3_OutputConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.tap.v3.OutputConfig.class, io.envoyproxy.envoy.config.tap.v3.OutputConfig.Builder.class);
  }

  public static final int SINKS_FIELD_NUMBER = 1;
  private java.util.List<io.envoyproxy.envoy.config.tap.v3.OutputSink> sinks_;
  /**
   * <pre>
   * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
   * sink types are supported this constraint will be relaxed.
   * </pre>
   *
   * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.tap.v3.OutputSink> getSinksList() {
    return sinks_;
  }
  /**
   * <pre>
   * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
   * sink types are supported this constraint will be relaxed.
   * </pre>
   *
   * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.tap.v3.OutputSinkOrBuilder> 
      getSinksOrBuilderList() {
    return sinks_;
  }
  /**
   * <pre>
   * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
   * sink types are supported this constraint will be relaxed.
   * </pre>
   *
   * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public int getSinksCount() {
    return sinks_.size();
  }
  /**
   * <pre>
   * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
   * sink types are supported this constraint will be relaxed.
   * </pre>
   *
   * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.tap.v3.OutputSink getSinks(int index) {
    return sinks_.get(index);
  }
  /**
   * <pre>
   * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
   * sink types are supported this constraint will be relaxed.
   * </pre>
   *
   * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.tap.v3.OutputSinkOrBuilder getSinksOrBuilder(
      int index) {
    return sinks_.get(index);
  }

  public static final int MAX_BUFFERED_RX_BYTES_FIELD_NUMBER = 2;
  private com.google.protobuf.UInt32Value maxBufferedRxBytes_;
  /**
   * <pre>
   * For buffered tapping, the maximum amount of received body that will be buffered prior to
   * truncation. If truncation occurs, the :ref:`truncated
   * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
   * default is 1KiB.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
   * @return Whether the maxBufferedRxBytes field is set.
   */
  @java.lang.Override
  public boolean hasMaxBufferedRxBytes() {
    return maxBufferedRxBytes_ != null;
  }
  /**
   * <pre>
   * For buffered tapping, the maximum amount of received body that will be buffered prior to
   * truncation. If truncation occurs, the :ref:`truncated
   * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
   * default is 1KiB.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
   * @return The maxBufferedRxBytes.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getMaxBufferedRxBytes() {
    return maxBufferedRxBytes_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxBufferedRxBytes_;
  }
  /**
   * <pre>
   * For buffered tapping, the maximum amount of received body that will be buffered prior to
   * truncation. If truncation occurs, the :ref:`truncated
   * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
   * default is 1KiB.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getMaxBufferedRxBytesOrBuilder() {
    return getMaxBufferedRxBytes();
  }

  public static final int MAX_BUFFERED_TX_BYTES_FIELD_NUMBER = 3;
  private com.google.protobuf.UInt32Value maxBufferedTxBytes_;
  /**
   * <pre>
   * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
   * truncation. If truncation occurs, the :ref:`truncated
   * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
   * default is 1KiB.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
   * @return Whether the maxBufferedTxBytes field is set.
   */
  @java.lang.Override
  public boolean hasMaxBufferedTxBytes() {
    return maxBufferedTxBytes_ != null;
  }
  /**
   * <pre>
   * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
   * truncation. If truncation occurs, the :ref:`truncated
   * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
   * default is 1KiB.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
   * @return The maxBufferedTxBytes.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getMaxBufferedTxBytes() {
    return maxBufferedTxBytes_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxBufferedTxBytes_;
  }
  /**
   * <pre>
   * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
   * truncation. If truncation occurs, the :ref:`truncated
   * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
   * default is 1KiB.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getMaxBufferedTxBytesOrBuilder() {
    return getMaxBufferedTxBytes();
  }

  public static final int STREAMING_FIELD_NUMBER = 4;
  private boolean streaming_;
  /**
   * <pre>
   * Indicates whether taps produce a single buffered message per tap, or multiple streamed
   * messages per tap in the emitted :ref:`TraceWrapper
   * &lt;envoy_api_msg_data.tap.v3.TraceWrapper&gt;` messages. Note that streamed tapping does not
   * mean that no buffering takes place. Buffering may be required if data is processed before a
   * match can be determined. See the HTTP tap filter :ref:`streaming
   * &lt;config_http_filters_tap_streaming&gt;` documentation for more information.
   * </pre>
   *
   * <code>bool streaming = 4;</code>
   * @return The streaming.
   */
  @java.lang.Override
  public boolean getStreaming() {
    return streaming_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < sinks_.size(); i++) {
      output.writeMessage(1, sinks_.get(i));
    }
    if (maxBufferedRxBytes_ != null) {
      output.writeMessage(2, getMaxBufferedRxBytes());
    }
    if (maxBufferedTxBytes_ != null) {
      output.writeMessage(3, getMaxBufferedTxBytes());
    }
    if (streaming_ != false) {
      output.writeBool(4, streaming_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < sinks_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, sinks_.get(i));
    }
    if (maxBufferedRxBytes_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getMaxBufferedRxBytes());
    }
    if (maxBufferedTxBytes_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getMaxBufferedTxBytes());
    }
    if (streaming_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, streaming_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.tap.v3.OutputConfig)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.tap.v3.OutputConfig other = (io.envoyproxy.envoy.config.tap.v3.OutputConfig) obj;

    if (!getSinksList()
        .equals(other.getSinksList())) return false;
    if (hasMaxBufferedRxBytes() != other.hasMaxBufferedRxBytes()) return false;
    if (hasMaxBufferedRxBytes()) {
      if (!getMaxBufferedRxBytes()
          .equals(other.getMaxBufferedRxBytes())) return false;
    }
    if (hasMaxBufferedTxBytes() != other.hasMaxBufferedTxBytes()) return false;
    if (hasMaxBufferedTxBytes()) {
      if (!getMaxBufferedTxBytes()
          .equals(other.getMaxBufferedTxBytes())) return false;
    }
    if (getStreaming()
        != other.getStreaming()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getSinksCount() > 0) {
      hash = (37 * hash) + SINKS_FIELD_NUMBER;
      hash = (53 * hash) + getSinksList().hashCode();
    }
    if (hasMaxBufferedRxBytes()) {
      hash = (37 * hash) + MAX_BUFFERED_RX_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getMaxBufferedRxBytes().hashCode();
    }
    if (hasMaxBufferedTxBytes()) {
      hash = (37 * hash) + MAX_BUFFERED_TX_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getMaxBufferedTxBytes().hashCode();
    }
    hash = (37 * hash) + STREAMING_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getStreaming());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.tap.v3.OutputConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.tap.v3.OutputConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.tap.v3.OutputConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.tap.v3.OutputConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.tap.v3.OutputConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.tap.v3.OutputConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.tap.v3.OutputConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.tap.v3.OutputConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.tap.v3.OutputConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.tap.v3.OutputConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.tap.v3.OutputConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.tap.v3.OutputConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.tap.v3.OutputConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Tap output configuration.
   * </pre>
   *
   * Protobuf type {@code envoy.config.tap.v3.OutputConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.tap.v3.OutputConfig)
      io.envoyproxy.envoy.config.tap.v3.OutputConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.tap.v3.CommonProto.internal_static_envoy_config_tap_v3_OutputConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.tap.v3.CommonProto.internal_static_envoy_config_tap_v3_OutputConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.tap.v3.OutputConfig.class, io.envoyproxy.envoy.config.tap.v3.OutputConfig.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.tap.v3.OutputConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSinksFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (sinksBuilder_ == null) {
        sinks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        sinksBuilder_.clear();
      }
      if (maxBufferedRxBytesBuilder_ == null) {
        maxBufferedRxBytes_ = null;
      } else {
        maxBufferedRxBytes_ = null;
        maxBufferedRxBytesBuilder_ = null;
      }
      if (maxBufferedTxBytesBuilder_ == null) {
        maxBufferedTxBytes_ = null;
      } else {
        maxBufferedTxBytes_ = null;
        maxBufferedTxBytesBuilder_ = null;
      }
      streaming_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.tap.v3.CommonProto.internal_static_envoy_config_tap_v3_OutputConfig_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.tap.v3.OutputConfig getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.tap.v3.OutputConfig.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.tap.v3.OutputConfig build() {
      io.envoyproxy.envoy.config.tap.v3.OutputConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.tap.v3.OutputConfig buildPartial() {
      io.envoyproxy.envoy.config.tap.v3.OutputConfig result = new io.envoyproxy.envoy.config.tap.v3.OutputConfig(this);
      int from_bitField0_ = bitField0_;
      if (sinksBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          sinks_ = java.util.Collections.unmodifiableList(sinks_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.sinks_ = sinks_;
      } else {
        result.sinks_ = sinksBuilder_.build();
      }
      if (maxBufferedRxBytesBuilder_ == null) {
        result.maxBufferedRxBytes_ = maxBufferedRxBytes_;
      } else {
        result.maxBufferedRxBytes_ = maxBufferedRxBytesBuilder_.build();
      }
      if (maxBufferedTxBytesBuilder_ == null) {
        result.maxBufferedTxBytes_ = maxBufferedTxBytes_;
      } else {
        result.maxBufferedTxBytes_ = maxBufferedTxBytesBuilder_.build();
      }
      result.streaming_ = streaming_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.tap.v3.OutputConfig) {
        return mergeFrom((io.envoyproxy.envoy.config.tap.v3.OutputConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.tap.v3.OutputConfig other) {
      if (other == io.envoyproxy.envoy.config.tap.v3.OutputConfig.getDefaultInstance()) return this;
      if (sinksBuilder_ == null) {
        if (!other.sinks_.isEmpty()) {
          if (sinks_.isEmpty()) {
            sinks_ = other.sinks_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSinksIsMutable();
            sinks_.addAll(other.sinks_);
          }
          onChanged();
        }
      } else {
        if (!other.sinks_.isEmpty()) {
          if (sinksBuilder_.isEmpty()) {
            sinksBuilder_.dispose();
            sinksBuilder_ = null;
            sinks_ = other.sinks_;
            bitField0_ = (bitField0_ & ~0x00000001);
            sinksBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSinksFieldBuilder() : null;
          } else {
            sinksBuilder_.addAllMessages(other.sinks_);
          }
        }
      }
      if (other.hasMaxBufferedRxBytes()) {
        mergeMaxBufferedRxBytes(other.getMaxBufferedRxBytes());
      }
      if (other.hasMaxBufferedTxBytes()) {
        mergeMaxBufferedTxBytes(other.getMaxBufferedTxBytes());
      }
      if (other.getStreaming() != false) {
        setStreaming(other.getStreaming());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.config.tap.v3.OutputConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.config.tap.v3.OutputConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<io.envoyproxy.envoy.config.tap.v3.OutputSink> sinks_ =
      java.util.Collections.emptyList();
    private void ensureSinksIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        sinks_ = new java.util.ArrayList<io.envoyproxy.envoy.config.tap.v3.OutputSink>(sinks_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.tap.v3.OutputSink, io.envoyproxy.envoy.config.tap.v3.OutputSink.Builder, io.envoyproxy.envoy.config.tap.v3.OutputSinkOrBuilder> sinksBuilder_;

    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.tap.v3.OutputSink> getSinksList() {
      if (sinksBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sinks_);
      } else {
        return sinksBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public int getSinksCount() {
      if (sinksBuilder_ == null) {
        return sinks_.size();
      } else {
        return sinksBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.tap.v3.OutputSink getSinks(int index) {
      if (sinksBuilder_ == null) {
        return sinks_.get(index);
      } else {
        return sinksBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setSinks(
        int index, io.envoyproxy.envoy.config.tap.v3.OutputSink value) {
      if (sinksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSinksIsMutable();
        sinks_.set(index, value);
        onChanged();
      } else {
        sinksBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder setSinks(
        int index, io.envoyproxy.envoy.config.tap.v3.OutputSink.Builder builderForValue) {
      if (sinksBuilder_ == null) {
        ensureSinksIsMutable();
        sinks_.set(index, builderForValue.build());
        onChanged();
      } else {
        sinksBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder addSinks(io.envoyproxy.envoy.config.tap.v3.OutputSink value) {
      if (sinksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSinksIsMutable();
        sinks_.add(value);
        onChanged();
      } else {
        sinksBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder addSinks(
        int index, io.envoyproxy.envoy.config.tap.v3.OutputSink value) {
      if (sinksBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSinksIsMutable();
        sinks_.add(index, value);
        onChanged();
      } else {
        sinksBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder addSinks(
        io.envoyproxy.envoy.config.tap.v3.OutputSink.Builder builderForValue) {
      if (sinksBuilder_ == null) {
        ensureSinksIsMutable();
        sinks_.add(builderForValue.build());
        onChanged();
      } else {
        sinksBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder addSinks(
        int index, io.envoyproxy.envoy.config.tap.v3.OutputSink.Builder builderForValue) {
      if (sinksBuilder_ == null) {
        ensureSinksIsMutable();
        sinks_.add(index, builderForValue.build());
        onChanged();
      } else {
        sinksBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder addAllSinks(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.tap.v3.OutputSink> values) {
      if (sinksBuilder_ == null) {
        ensureSinksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sinks_);
        onChanged();
      } else {
        sinksBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder clearSinks() {
      if (sinksBuilder_ == null) {
        sinks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        sinksBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public Builder removeSinks(int index) {
      if (sinksBuilder_ == null) {
        ensureSinksIsMutable();
        sinks_.remove(index);
        onChanged();
      } else {
        sinksBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.tap.v3.OutputSink.Builder getSinksBuilder(
        int index) {
      return getSinksFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.tap.v3.OutputSinkOrBuilder getSinksOrBuilder(
        int index) {
      if (sinksBuilder_ == null) {
        return sinks_.get(index);  } else {
        return sinksBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.tap.v3.OutputSinkOrBuilder> 
         getSinksOrBuilderList() {
      if (sinksBuilder_ != null) {
        return sinksBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sinks_);
      }
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.tap.v3.OutputSink.Builder addSinksBuilder() {
      return getSinksFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.tap.v3.OutputSink.getDefaultInstance());
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.tap.v3.OutputSink.Builder addSinksBuilder(
        int index) {
      return getSinksFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.tap.v3.OutputSink.getDefaultInstance());
    }
    /**
     * <pre>
     * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
     * sink types are supported this constraint will be relaxed.
     * </pre>
     *
     * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.tap.v3.OutputSink.Builder> 
         getSinksBuilderList() {
      return getSinksFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.tap.v3.OutputSink, io.envoyproxy.envoy.config.tap.v3.OutputSink.Builder, io.envoyproxy.envoy.config.tap.v3.OutputSinkOrBuilder> 
        getSinksFieldBuilder() {
      if (sinksBuilder_ == null) {
        sinksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.tap.v3.OutputSink, io.envoyproxy.envoy.config.tap.v3.OutputSink.Builder, io.envoyproxy.envoy.config.tap.v3.OutputSinkOrBuilder>(
                sinks_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        sinks_ = null;
      }
      return sinksBuilder_;
    }

    private com.google.protobuf.UInt32Value maxBufferedRxBytes_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> maxBufferedRxBytesBuilder_;
    /**
     * <pre>
     * For buffered tapping, the maximum amount of received body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
     * @return Whether the maxBufferedRxBytes field is set.
     */
    public boolean hasMaxBufferedRxBytes() {
      return maxBufferedRxBytesBuilder_ != null || maxBufferedRxBytes_ != null;
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of received body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
     * @return The maxBufferedRxBytes.
     */
    public com.google.protobuf.UInt32Value getMaxBufferedRxBytes() {
      if (maxBufferedRxBytesBuilder_ == null) {
        return maxBufferedRxBytes_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxBufferedRxBytes_;
      } else {
        return maxBufferedRxBytesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of received body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
     */
    public Builder setMaxBufferedRxBytes(com.google.protobuf.UInt32Value value) {
      if (maxBufferedRxBytesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxBufferedRxBytes_ = value;
        onChanged();
      } else {
        maxBufferedRxBytesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of received body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
     */
    public Builder setMaxBufferedRxBytes(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (maxBufferedRxBytesBuilder_ == null) {
        maxBufferedRxBytes_ = builderForValue.build();
        onChanged();
      } else {
        maxBufferedRxBytesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of received body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
     */
    public Builder mergeMaxBufferedRxBytes(com.google.protobuf.UInt32Value value) {
      if (maxBufferedRxBytesBuilder_ == null) {
        if (maxBufferedRxBytes_ != null) {
          maxBufferedRxBytes_ =
            com.google.protobuf.UInt32Value.newBuilder(maxBufferedRxBytes_).mergeFrom(value).buildPartial();
        } else {
          maxBufferedRxBytes_ = value;
        }
        onChanged();
      } else {
        maxBufferedRxBytesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of received body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
     */
    public Builder clearMaxBufferedRxBytes() {
      if (maxBufferedRxBytesBuilder_ == null) {
        maxBufferedRxBytes_ = null;
        onChanged();
      } else {
        maxBufferedRxBytes_ = null;
        maxBufferedRxBytesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of received body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getMaxBufferedRxBytesBuilder() {
      
      onChanged();
      return getMaxBufferedRxBytesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of received body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getMaxBufferedRxBytesOrBuilder() {
      if (maxBufferedRxBytesBuilder_ != null) {
        return maxBufferedRxBytesBuilder_.getMessageOrBuilder();
      } else {
        return maxBufferedRxBytes_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : maxBufferedRxBytes_;
      }
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of received body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getMaxBufferedRxBytesFieldBuilder() {
      if (maxBufferedRxBytesBuilder_ == null) {
        maxBufferedRxBytesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getMaxBufferedRxBytes(),
                getParentForChildren(),
                isClean());
        maxBufferedRxBytes_ = null;
      }
      return maxBufferedRxBytesBuilder_;
    }

    private com.google.protobuf.UInt32Value maxBufferedTxBytes_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> maxBufferedTxBytesBuilder_;
    /**
     * <pre>
     * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
     * @return Whether the maxBufferedTxBytes field is set.
     */
    public boolean hasMaxBufferedTxBytes() {
      return maxBufferedTxBytesBuilder_ != null || maxBufferedTxBytes_ != null;
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
     * @return The maxBufferedTxBytes.
     */
    public com.google.protobuf.UInt32Value getMaxBufferedTxBytes() {
      if (maxBufferedTxBytesBuilder_ == null) {
        return maxBufferedTxBytes_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxBufferedTxBytes_;
      } else {
        return maxBufferedTxBytesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
     */
    public Builder setMaxBufferedTxBytes(com.google.protobuf.UInt32Value value) {
      if (maxBufferedTxBytesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxBufferedTxBytes_ = value;
        onChanged();
      } else {
        maxBufferedTxBytesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
     */
    public Builder setMaxBufferedTxBytes(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (maxBufferedTxBytesBuilder_ == null) {
        maxBufferedTxBytes_ = builderForValue.build();
        onChanged();
      } else {
        maxBufferedTxBytesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
     */
    public Builder mergeMaxBufferedTxBytes(com.google.protobuf.UInt32Value value) {
      if (maxBufferedTxBytesBuilder_ == null) {
        if (maxBufferedTxBytes_ != null) {
          maxBufferedTxBytes_ =
            com.google.protobuf.UInt32Value.newBuilder(maxBufferedTxBytes_).mergeFrom(value).buildPartial();
        } else {
          maxBufferedTxBytes_ = value;
        }
        onChanged();
      } else {
        maxBufferedTxBytesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
     */
    public Builder clearMaxBufferedTxBytes() {
      if (maxBufferedTxBytesBuilder_ == null) {
        maxBufferedTxBytes_ = null;
        onChanged();
      } else {
        maxBufferedTxBytes_ = null;
        maxBufferedTxBytesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getMaxBufferedTxBytesBuilder() {
      
      onChanged();
      return getMaxBufferedTxBytesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getMaxBufferedTxBytesOrBuilder() {
      if (maxBufferedTxBytesBuilder_ != null) {
        return maxBufferedTxBytesBuilder_.getMessageOrBuilder();
      } else {
        return maxBufferedTxBytes_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : maxBufferedTxBytes_;
      }
    }
    /**
     * <pre>
     * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
     * truncation. If truncation occurs, the :ref:`truncated
     * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
     * default is 1KiB.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getMaxBufferedTxBytesFieldBuilder() {
      if (maxBufferedTxBytesBuilder_ == null) {
        maxBufferedTxBytesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getMaxBufferedTxBytes(),
                getParentForChildren(),
                isClean());
        maxBufferedTxBytes_ = null;
      }
      return maxBufferedTxBytesBuilder_;
    }

    private boolean streaming_ ;
    /**
     * <pre>
     * Indicates whether taps produce a single buffered message per tap, or multiple streamed
     * messages per tap in the emitted :ref:`TraceWrapper
     * &lt;envoy_api_msg_data.tap.v3.TraceWrapper&gt;` messages. Note that streamed tapping does not
     * mean that no buffering takes place. Buffering may be required if data is processed before a
     * match can be determined. See the HTTP tap filter :ref:`streaming
     * &lt;config_http_filters_tap_streaming&gt;` documentation for more information.
     * </pre>
     *
     * <code>bool streaming = 4;</code>
     * @return The streaming.
     */
    @java.lang.Override
    public boolean getStreaming() {
      return streaming_;
    }
    /**
     * <pre>
     * Indicates whether taps produce a single buffered message per tap, or multiple streamed
     * messages per tap in the emitted :ref:`TraceWrapper
     * &lt;envoy_api_msg_data.tap.v3.TraceWrapper&gt;` messages. Note that streamed tapping does not
     * mean that no buffering takes place. Buffering may be required if data is processed before a
     * match can be determined. See the HTTP tap filter :ref:`streaming
     * &lt;config_http_filters_tap_streaming&gt;` documentation for more information.
     * </pre>
     *
     * <code>bool streaming = 4;</code>
     * @param value The streaming to set.
     * @return This builder for chaining.
     */
    public Builder setStreaming(boolean value) {
      
      streaming_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates whether taps produce a single buffered message per tap, or multiple streamed
     * messages per tap in the emitted :ref:`TraceWrapper
     * &lt;envoy_api_msg_data.tap.v3.TraceWrapper&gt;` messages. Note that streamed tapping does not
     * mean that no buffering takes place. Buffering may be required if data is processed before a
     * match can be determined. See the HTTP tap filter :ref:`streaming
     * &lt;config_http_filters_tap_streaming&gt;` documentation for more information.
     * </pre>
     *
     * <code>bool streaming = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearStreaming() {
      
      streaming_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.tap.v3.OutputConfig)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.tap.v3.OutputConfig)
  private static final io.envoyproxy.envoy.config.tap.v3.OutputConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.tap.v3.OutputConfig();
  }

  public static io.envoyproxy.envoy.config.tap.v3.OutputConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OutputConfig>
      PARSER = new com.google.protobuf.AbstractParser<OutputConfig>() {
    @java.lang.Override
    public OutputConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new OutputConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<OutputConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OutputConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.tap.v3.OutputConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

