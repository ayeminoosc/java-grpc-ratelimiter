// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/cluster/v3/outlier_detection.proto

package io.envoyproxy.envoy.config.cluster.v3;

/**
 * <pre>
 * See the :ref:`architecture overview &lt;arch_overview_outlier_detection&gt;` for
 * more information on outlier detection.
 * [#next-free-field: 22]
 * </pre>
 *
 * Protobuf type {@code envoy.config.cluster.v3.OutlierDetection}
 */
public final class OutlierDetection extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.cluster.v3.OutlierDetection)
    OutlierDetectionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OutlierDetection.newBuilder() to construct.
  private OutlierDetection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OutlierDetection() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new OutlierDetection();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private OutlierDetection(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (consecutive5Xx_ != null) {
              subBuilder = consecutive5Xx_.toBuilder();
            }
            consecutive5Xx_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(consecutive5Xx_);
              consecutive5Xx_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (interval_ != null) {
              subBuilder = interval_.toBuilder();
            }
            interval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(interval_);
              interval_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (baseEjectionTime_ != null) {
              subBuilder = baseEjectionTime_.toBuilder();
            }
            baseEjectionTime_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(baseEjectionTime_);
              baseEjectionTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (maxEjectionPercent_ != null) {
              subBuilder = maxEjectionPercent_.toBuilder();
            }
            maxEjectionPercent_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maxEjectionPercent_);
              maxEjectionPercent_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (enforcingConsecutive5Xx_ != null) {
              subBuilder = enforcingConsecutive5Xx_.toBuilder();
            }
            enforcingConsecutive5Xx_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(enforcingConsecutive5Xx_);
              enforcingConsecutive5Xx_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (enforcingSuccessRate_ != null) {
              subBuilder = enforcingSuccessRate_.toBuilder();
            }
            enforcingSuccessRate_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(enforcingSuccessRate_);
              enforcingSuccessRate_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (successRateMinimumHosts_ != null) {
              subBuilder = successRateMinimumHosts_.toBuilder();
            }
            successRateMinimumHosts_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(successRateMinimumHosts_);
              successRateMinimumHosts_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (successRateRequestVolume_ != null) {
              subBuilder = successRateRequestVolume_.toBuilder();
            }
            successRateRequestVolume_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(successRateRequestVolume_);
              successRateRequestVolume_ = subBuilder.buildPartial();
            }

            break;
          }
          case 74: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (successRateStdevFactor_ != null) {
              subBuilder = successRateStdevFactor_.toBuilder();
            }
            successRateStdevFactor_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(successRateStdevFactor_);
              successRateStdevFactor_ = subBuilder.buildPartial();
            }

            break;
          }
          case 82: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (consecutiveGatewayFailure_ != null) {
              subBuilder = consecutiveGatewayFailure_.toBuilder();
            }
            consecutiveGatewayFailure_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(consecutiveGatewayFailure_);
              consecutiveGatewayFailure_ = subBuilder.buildPartial();
            }

            break;
          }
          case 90: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (enforcingConsecutiveGatewayFailure_ != null) {
              subBuilder = enforcingConsecutiveGatewayFailure_.toBuilder();
            }
            enforcingConsecutiveGatewayFailure_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(enforcingConsecutiveGatewayFailure_);
              enforcingConsecutiveGatewayFailure_ = subBuilder.buildPartial();
            }

            break;
          }
          case 96: {

            splitExternalLocalOriginErrors_ = input.readBool();
            break;
          }
          case 106: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (consecutiveLocalOriginFailure_ != null) {
              subBuilder = consecutiveLocalOriginFailure_.toBuilder();
            }
            consecutiveLocalOriginFailure_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(consecutiveLocalOriginFailure_);
              consecutiveLocalOriginFailure_ = subBuilder.buildPartial();
            }

            break;
          }
          case 114: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (enforcingConsecutiveLocalOriginFailure_ != null) {
              subBuilder = enforcingConsecutiveLocalOriginFailure_.toBuilder();
            }
            enforcingConsecutiveLocalOriginFailure_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(enforcingConsecutiveLocalOriginFailure_);
              enforcingConsecutiveLocalOriginFailure_ = subBuilder.buildPartial();
            }

            break;
          }
          case 122: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (enforcingLocalOriginSuccessRate_ != null) {
              subBuilder = enforcingLocalOriginSuccessRate_.toBuilder();
            }
            enforcingLocalOriginSuccessRate_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(enforcingLocalOriginSuccessRate_);
              enforcingLocalOriginSuccessRate_ = subBuilder.buildPartial();
            }

            break;
          }
          case 130: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (failurePercentageThreshold_ != null) {
              subBuilder = failurePercentageThreshold_.toBuilder();
            }
            failurePercentageThreshold_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(failurePercentageThreshold_);
              failurePercentageThreshold_ = subBuilder.buildPartial();
            }

            break;
          }
          case 138: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (enforcingFailurePercentage_ != null) {
              subBuilder = enforcingFailurePercentage_.toBuilder();
            }
            enforcingFailurePercentage_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(enforcingFailurePercentage_);
              enforcingFailurePercentage_ = subBuilder.buildPartial();
            }

            break;
          }
          case 146: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (enforcingFailurePercentageLocalOrigin_ != null) {
              subBuilder = enforcingFailurePercentageLocalOrigin_.toBuilder();
            }
            enforcingFailurePercentageLocalOrigin_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(enforcingFailurePercentageLocalOrigin_);
              enforcingFailurePercentageLocalOrigin_ = subBuilder.buildPartial();
            }

            break;
          }
          case 154: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (failurePercentageMinimumHosts_ != null) {
              subBuilder = failurePercentageMinimumHosts_.toBuilder();
            }
            failurePercentageMinimumHosts_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(failurePercentageMinimumHosts_);
              failurePercentageMinimumHosts_ = subBuilder.buildPartial();
            }

            break;
          }
          case 162: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (failurePercentageRequestVolume_ != null) {
              subBuilder = failurePercentageRequestVolume_.toBuilder();
            }
            failurePercentageRequestVolume_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(failurePercentageRequestVolume_);
              failurePercentageRequestVolume_ = subBuilder.buildPartial();
            }

            break;
          }
          case 170: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (maxEjectionTime_ != null) {
              subBuilder = maxEjectionTime_.toBuilder();
            }
            maxEjectionTime_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maxEjectionTime_);
              maxEjectionTime_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.cluster.v3.OutlierDetectionProto.internal_static_envoy_config_cluster_v3_OutlierDetection_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.cluster.v3.OutlierDetectionProto.internal_static_envoy_config_cluster_v3_OutlierDetection_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.cluster.v3.OutlierDetection.class, io.envoyproxy.envoy.config.cluster.v3.OutlierDetection.Builder.class);
  }

  public static final int CONSECUTIVE_5XX_FIELD_NUMBER = 1;
  private com.google.protobuf.UInt32Value consecutive5Xx_;
  /**
   * <pre>
   * The number of consecutive 5xx responses or local origin errors that are mapped
   * to 5xx error codes before a consecutive 5xx ejection
   * occurs. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
   * @return Whether the consecutive5xx field is set.
   */
  @java.lang.Override
  public boolean hasConsecutive5Xx() {
    return consecutive5Xx_ != null;
  }
  /**
   * <pre>
   * The number of consecutive 5xx responses or local origin errors that are mapped
   * to 5xx error codes before a consecutive 5xx ejection
   * occurs. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
   * @return The consecutive5xx.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getConsecutive5Xx() {
    return consecutive5Xx_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutive5Xx_;
  }
  /**
   * <pre>
   * The number of consecutive 5xx responses or local origin errors that are mapped
   * to 5xx error codes before a consecutive 5xx ejection
   * occurs. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getConsecutive5XxOrBuilder() {
    return getConsecutive5Xx();
  }

  public static final int INTERVAL_FIELD_NUMBER = 2;
  private com.google.protobuf.Duration interval_;
  /**
   * <pre>
   * The time interval between ejection analysis sweeps. This can result in
   * both new ejections as well as hosts being returned to service. Defaults
   * to 10000ms or 10s.
   * </pre>
   *
   * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the interval field is set.
   */
  @java.lang.Override
  public boolean hasInterval() {
    return interval_ != null;
  }
  /**
   * <pre>
   * The time interval between ejection analysis sweeps. This can result in
   * both new ejections as well as hosts being returned to service. Defaults
   * to 10000ms or 10s.
   * </pre>
   *
   * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
   * @return The interval.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getInterval() {
    return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
  }
  /**
   * <pre>
   * The time interval between ejection analysis sweeps. This can result in
   * both new ejections as well as hosts being returned to service. Defaults
   * to 10000ms or 10s.
   * </pre>
   *
   * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {
    return getInterval();
  }

  public static final int BASE_EJECTION_TIME_FIELD_NUMBER = 3;
  private com.google.protobuf.Duration baseEjectionTime_;
  /**
   * <pre>
   * The base time that a host is ejected for. The real time is equal to the
   * base time multiplied by the number of times the host has been ejected and is
   * capped by :ref:`max_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.max_ejection_time&gt;`.
   * Defaults to 30000ms or 30s.
   * </pre>
   *
   * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the baseEjectionTime field is set.
   */
  @java.lang.Override
  public boolean hasBaseEjectionTime() {
    return baseEjectionTime_ != null;
  }
  /**
   * <pre>
   * The base time that a host is ejected for. The real time is equal to the
   * base time multiplied by the number of times the host has been ejected and is
   * capped by :ref:`max_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.max_ejection_time&gt;`.
   * Defaults to 30000ms or 30s.
   * </pre>
   *
   * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
   * @return The baseEjectionTime.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getBaseEjectionTime() {
    return baseEjectionTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : baseEjectionTime_;
  }
  /**
   * <pre>
   * The base time that a host is ejected for. The real time is equal to the
   * base time multiplied by the number of times the host has been ejected and is
   * capped by :ref:`max_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.max_ejection_time&gt;`.
   * Defaults to 30000ms or 30s.
   * </pre>
   *
   * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getBaseEjectionTimeOrBuilder() {
    return getBaseEjectionTime();
  }

  public static final int MAX_EJECTION_PERCENT_FIELD_NUMBER = 4;
  private com.google.protobuf.UInt32Value maxEjectionPercent_;
  /**
   * <pre>
   * The maximum % of an upstream cluster that can be ejected due to outlier
   * detection. Defaults to 10% but will eject at least one host regardless of the value.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
   * @return Whether the maxEjectionPercent field is set.
   */
  @java.lang.Override
  public boolean hasMaxEjectionPercent() {
    return maxEjectionPercent_ != null;
  }
  /**
   * <pre>
   * The maximum % of an upstream cluster that can be ejected due to outlier
   * detection. Defaults to 10% but will eject at least one host regardless of the value.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
   * @return The maxEjectionPercent.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getMaxEjectionPercent() {
    return maxEjectionPercent_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxEjectionPercent_;
  }
  /**
   * <pre>
   * The maximum % of an upstream cluster that can be ejected due to outlier
   * detection. Defaults to 10% but will eject at least one host regardless of the value.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getMaxEjectionPercentOrBuilder() {
    return getMaxEjectionPercent();
  }

  public static final int ENFORCING_CONSECUTIVE_5XX_FIELD_NUMBER = 5;
  private com.google.protobuf.UInt32Value enforcingConsecutive5Xx_;
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive 5xx. This setting can be used to disable
   * ejection or to ramp it up slowly. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
   * @return Whether the enforcingConsecutive5xx field is set.
   */
  @java.lang.Override
  public boolean hasEnforcingConsecutive5Xx() {
    return enforcingConsecutive5Xx_ != null;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive 5xx. This setting can be used to disable
   * ejection or to ramp it up slowly. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
   * @return The enforcingConsecutive5xx.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getEnforcingConsecutive5Xx() {
    return enforcingConsecutive5Xx_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutive5Xx_;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive 5xx. This setting can be used to disable
   * ejection or to ramp it up slowly. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getEnforcingConsecutive5XxOrBuilder() {
    return getEnforcingConsecutive5Xx();
  }

  public static final int ENFORCING_SUCCESS_RATE_FIELD_NUMBER = 6;
  private com.google.protobuf.UInt32Value enforcingSuccessRate_;
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through success rate statistics. This setting can be used to
   * disable ejection or to ramp it up slowly. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
   * @return Whether the enforcingSuccessRate field is set.
   */
  @java.lang.Override
  public boolean hasEnforcingSuccessRate() {
    return enforcingSuccessRate_ != null;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through success rate statistics. This setting can be used to
   * disable ejection or to ramp it up slowly. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
   * @return The enforcingSuccessRate.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getEnforcingSuccessRate() {
    return enforcingSuccessRate_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingSuccessRate_;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through success rate statistics. This setting can be used to
   * disable ejection or to ramp it up slowly. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getEnforcingSuccessRateOrBuilder() {
    return getEnforcingSuccessRate();
  }

  public static final int SUCCESS_RATE_MINIMUM_HOSTS_FIELD_NUMBER = 7;
  private com.google.protobuf.UInt32Value successRateMinimumHosts_;
  /**
   * <pre>
   * The number of hosts in a cluster that must have enough request volume to
   * detect success rate outliers. If the number of hosts is less than this
   * setting, outlier detection via success rate statistics is not performed
   * for any host in the cluster. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
   * @return Whether the successRateMinimumHosts field is set.
   */
  @java.lang.Override
  public boolean hasSuccessRateMinimumHosts() {
    return successRateMinimumHosts_ != null;
  }
  /**
   * <pre>
   * The number of hosts in a cluster that must have enough request volume to
   * detect success rate outliers. If the number of hosts is less than this
   * setting, outlier detection via success rate statistics is not performed
   * for any host in the cluster. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
   * @return The successRateMinimumHosts.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getSuccessRateMinimumHosts() {
    return successRateMinimumHosts_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : successRateMinimumHosts_;
  }
  /**
   * <pre>
   * The number of hosts in a cluster that must have enough request volume to
   * detect success rate outliers. If the number of hosts is less than this
   * setting, outlier detection via success rate statistics is not performed
   * for any host in the cluster. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getSuccessRateMinimumHostsOrBuilder() {
    return getSuccessRateMinimumHosts();
  }

  public static final int SUCCESS_RATE_REQUEST_VOLUME_FIELD_NUMBER = 8;
  private com.google.protobuf.UInt32Value successRateRequestVolume_;
  /**
   * <pre>
   * The minimum number of total requests that must be collected in one
   * interval (as defined by the interval duration above) to include this host
   * in success rate based outlier detection. If the volume is lower than this
   * setting, outlier detection via success rate statistics is not performed
   * for that host. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
   * @return Whether the successRateRequestVolume field is set.
   */
  @java.lang.Override
  public boolean hasSuccessRateRequestVolume() {
    return successRateRequestVolume_ != null;
  }
  /**
   * <pre>
   * The minimum number of total requests that must be collected in one
   * interval (as defined by the interval duration above) to include this host
   * in success rate based outlier detection. If the volume is lower than this
   * setting, outlier detection via success rate statistics is not performed
   * for that host. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
   * @return The successRateRequestVolume.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getSuccessRateRequestVolume() {
    return successRateRequestVolume_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : successRateRequestVolume_;
  }
  /**
   * <pre>
   * The minimum number of total requests that must be collected in one
   * interval (as defined by the interval duration above) to include this host
   * in success rate based outlier detection. If the volume is lower than this
   * setting, outlier detection via success rate statistics is not performed
   * for that host. Defaults to 100.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getSuccessRateRequestVolumeOrBuilder() {
    return getSuccessRateRequestVolume();
  }

  public static final int SUCCESS_RATE_STDEV_FACTOR_FIELD_NUMBER = 9;
  private com.google.protobuf.UInt32Value successRateStdevFactor_;
  /**
   * <pre>
   * This factor is used to determine the ejection threshold for success rate
   * outlier ejection. The ejection threshold is the difference between the
   * mean success rate, and the product of this factor and the standard
   * deviation of the mean success rate: mean - (stdev *
   * success_rate_stdev_factor). This factor is divided by a thousand to get a
   * double. That is, if the desired factor is 1.9, the runtime value should
   * be 1900. Defaults to 1900.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
   * @return Whether the successRateStdevFactor field is set.
   */
  @java.lang.Override
  public boolean hasSuccessRateStdevFactor() {
    return successRateStdevFactor_ != null;
  }
  /**
   * <pre>
   * This factor is used to determine the ejection threshold for success rate
   * outlier ejection. The ejection threshold is the difference between the
   * mean success rate, and the product of this factor and the standard
   * deviation of the mean success rate: mean - (stdev *
   * success_rate_stdev_factor). This factor is divided by a thousand to get a
   * double. That is, if the desired factor is 1.9, the runtime value should
   * be 1900. Defaults to 1900.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
   * @return The successRateStdevFactor.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getSuccessRateStdevFactor() {
    return successRateStdevFactor_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : successRateStdevFactor_;
  }
  /**
   * <pre>
   * This factor is used to determine the ejection threshold for success rate
   * outlier ejection. The ejection threshold is the difference between the
   * mean success rate, and the product of this factor and the standard
   * deviation of the mean success rate: mean - (stdev *
   * success_rate_stdev_factor). This factor is divided by a thousand to get a
   * double. That is, if the desired factor is 1.9, the runtime value should
   * be 1900. Defaults to 1900.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getSuccessRateStdevFactorOrBuilder() {
    return getSuccessRateStdevFactor();
  }

  public static final int CONSECUTIVE_GATEWAY_FAILURE_FIELD_NUMBER = 10;
  private com.google.protobuf.UInt32Value consecutiveGatewayFailure_;
  /**
   * <pre>
   * The number of consecutive gateway failures (502, 503, 504 status codes)
   * before a consecutive gateway failure ejection occurs. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
   * @return Whether the consecutiveGatewayFailure field is set.
   */
  @java.lang.Override
  public boolean hasConsecutiveGatewayFailure() {
    return consecutiveGatewayFailure_ != null;
  }
  /**
   * <pre>
   * The number of consecutive gateway failures (502, 503, 504 status codes)
   * before a consecutive gateway failure ejection occurs. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
   * @return The consecutiveGatewayFailure.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getConsecutiveGatewayFailure() {
    return consecutiveGatewayFailure_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutiveGatewayFailure_;
  }
  /**
   * <pre>
   * The number of consecutive gateway failures (502, 503, 504 status codes)
   * before a consecutive gateway failure ejection occurs. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getConsecutiveGatewayFailureOrBuilder() {
    return getConsecutiveGatewayFailure();
  }

  public static final int ENFORCING_CONSECUTIVE_GATEWAY_FAILURE_FIELD_NUMBER = 11;
  private com.google.protobuf.UInt32Value enforcingConsecutiveGatewayFailure_;
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive gateway failures. This setting can be
   * used to disable ejection or to ramp it up slowly. Defaults to 0.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
   * @return Whether the enforcingConsecutiveGatewayFailure field is set.
   */
  @java.lang.Override
  public boolean hasEnforcingConsecutiveGatewayFailure() {
    return enforcingConsecutiveGatewayFailure_ != null;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive gateway failures. This setting can be
   * used to disable ejection or to ramp it up slowly. Defaults to 0.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
   * @return The enforcingConsecutiveGatewayFailure.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getEnforcingConsecutiveGatewayFailure() {
    return enforcingConsecutiveGatewayFailure_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutiveGatewayFailure_;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive gateway failures. This setting can be
   * used to disable ejection or to ramp it up slowly. Defaults to 0.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getEnforcingConsecutiveGatewayFailureOrBuilder() {
    return getEnforcingConsecutiveGatewayFailure();
  }

  public static final int SPLIT_EXTERNAL_LOCAL_ORIGIN_ERRORS_FIELD_NUMBER = 12;
  private boolean splitExternalLocalOriginErrors_;
  /**
   * <pre>
   * Determines whether to distinguish local origin failures from external errors. If set to true
   * the following configuration parameters are taken into account:
   * :ref:`consecutive_local_origin_failure&lt;envoy_api_field_config.cluster.v3.OutlierDetection.consecutive_local_origin_failure&gt;`,
   * :ref:`enforcing_consecutive_local_origin_failure&lt;envoy_api_field_config.cluster.v3.OutlierDetection.enforcing_consecutive_local_origin_failure&gt;`
   * and
   * :ref:`enforcing_local_origin_success_rate&lt;envoy_api_field_config.cluster.v3.OutlierDetection.enforcing_local_origin_success_rate&gt;`.
   * Defaults to false.
   * </pre>
   *
   * <code>bool split_external_local_origin_errors = 12;</code>
   * @return The splitExternalLocalOriginErrors.
   */
  @java.lang.Override
  public boolean getSplitExternalLocalOriginErrors() {
    return splitExternalLocalOriginErrors_;
  }

  public static final int CONSECUTIVE_LOCAL_ORIGIN_FAILURE_FIELD_NUMBER = 13;
  private com.google.protobuf.UInt32Value consecutiveLocalOriginFailure_;
  /**
   * <pre>
   * The number of consecutive locally originated failures before ejection
   * occurs. Defaults to 5. Parameter takes effect only when
   * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
   * is set to true.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_local_origin_failure = 13;</code>
   * @return Whether the consecutiveLocalOriginFailure field is set.
   */
  @java.lang.Override
  public boolean hasConsecutiveLocalOriginFailure() {
    return consecutiveLocalOriginFailure_ != null;
  }
  /**
   * <pre>
   * The number of consecutive locally originated failures before ejection
   * occurs. Defaults to 5. Parameter takes effect only when
   * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
   * is set to true.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_local_origin_failure = 13;</code>
   * @return The consecutiveLocalOriginFailure.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getConsecutiveLocalOriginFailure() {
    return consecutiveLocalOriginFailure_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutiveLocalOriginFailure_;
  }
  /**
   * <pre>
   * The number of consecutive locally originated failures before ejection
   * occurs. Defaults to 5. Parameter takes effect only when
   * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
   * is set to true.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value consecutive_local_origin_failure = 13;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getConsecutiveLocalOriginFailureOrBuilder() {
    return getConsecutiveLocalOriginFailure();
  }

  public static final int ENFORCING_CONSECUTIVE_LOCAL_ORIGIN_FAILURE_FIELD_NUMBER = 14;
  private com.google.protobuf.UInt32Value enforcingConsecutiveLocalOriginFailure_;
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive locally originated failures. This setting can be
   * used to disable ejection or to ramp it up slowly. Defaults to 100.
   * Parameter takes effect only when
   * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
   * is set to true.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_local_origin_failure = 14 [(.validate.rules) = { ... }</code>
   * @return Whether the enforcingConsecutiveLocalOriginFailure field is set.
   */
  @java.lang.Override
  public boolean hasEnforcingConsecutiveLocalOriginFailure() {
    return enforcingConsecutiveLocalOriginFailure_ != null;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive locally originated failures. This setting can be
   * used to disable ejection or to ramp it up slowly. Defaults to 100.
   * Parameter takes effect only when
   * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
   * is set to true.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_local_origin_failure = 14 [(.validate.rules) = { ... }</code>
   * @return The enforcingConsecutiveLocalOriginFailure.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getEnforcingConsecutiveLocalOriginFailure() {
    return enforcingConsecutiveLocalOriginFailure_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutiveLocalOriginFailure_;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through consecutive locally originated failures. This setting can be
   * used to disable ejection or to ramp it up slowly. Defaults to 100.
   * Parameter takes effect only when
   * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
   * is set to true.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_consecutive_local_origin_failure = 14 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getEnforcingConsecutiveLocalOriginFailureOrBuilder() {
    return getEnforcingConsecutiveLocalOriginFailure();
  }

  public static final int ENFORCING_LOCAL_ORIGIN_SUCCESS_RATE_FIELD_NUMBER = 15;
  private com.google.protobuf.UInt32Value enforcingLocalOriginSuccessRate_;
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through success rate statistics for locally originated errors.
   * This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
   * Parameter takes effect only when
   * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
   * is set to true.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_local_origin_success_rate = 15 [(.validate.rules) = { ... }</code>
   * @return Whether the enforcingLocalOriginSuccessRate field is set.
   */
  @java.lang.Override
  public boolean hasEnforcingLocalOriginSuccessRate() {
    return enforcingLocalOriginSuccessRate_ != null;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through success rate statistics for locally originated errors.
   * This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
   * Parameter takes effect only when
   * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
   * is set to true.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_local_origin_success_rate = 15 [(.validate.rules) = { ... }</code>
   * @return The enforcingLocalOriginSuccessRate.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getEnforcingLocalOriginSuccessRate() {
    return enforcingLocalOriginSuccessRate_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingLocalOriginSuccessRate_;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status
   * is detected through success rate statistics for locally originated errors.
   * This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
   * Parameter takes effect only when
   * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
   * is set to true.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_local_origin_success_rate = 15 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getEnforcingLocalOriginSuccessRateOrBuilder() {
    return getEnforcingLocalOriginSuccessRate();
  }

  public static final int FAILURE_PERCENTAGE_THRESHOLD_FIELD_NUMBER = 16;
  private com.google.protobuf.UInt32Value failurePercentageThreshold_;
  /**
   * <pre>
   * The failure percentage to use when determining failure percentage-based outlier detection. If
   * the failure percentage of a given host is greater than or equal to this value, it will be
   * ejected. Defaults to 85.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value failure_percentage_threshold = 16 [(.validate.rules) = { ... }</code>
   * @return Whether the failurePercentageThreshold field is set.
   */
  @java.lang.Override
  public boolean hasFailurePercentageThreshold() {
    return failurePercentageThreshold_ != null;
  }
  /**
   * <pre>
   * The failure percentage to use when determining failure percentage-based outlier detection. If
   * the failure percentage of a given host is greater than or equal to this value, it will be
   * ejected. Defaults to 85.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value failure_percentage_threshold = 16 [(.validate.rules) = { ... }</code>
   * @return The failurePercentageThreshold.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getFailurePercentageThreshold() {
    return failurePercentageThreshold_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : failurePercentageThreshold_;
  }
  /**
   * <pre>
   * The failure percentage to use when determining failure percentage-based outlier detection. If
   * the failure percentage of a given host is greater than or equal to this value, it will be
   * ejected. Defaults to 85.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value failure_percentage_threshold = 16 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getFailurePercentageThresholdOrBuilder() {
    return getFailurePercentageThreshold();
  }

  public static final int ENFORCING_FAILURE_PERCENTAGE_FIELD_NUMBER = 17;
  private com.google.protobuf.UInt32Value enforcingFailurePercentage_;
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status is detected through
   * failure percentage statistics. This setting can be used to disable ejection or to ramp it up
   * slowly. Defaults to 0.
   * [#next-major-version: setting this without setting failure_percentage_threshold should be
   * invalid in v4.]
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_failure_percentage = 17 [(.validate.rules) = { ... }</code>
   * @return Whether the enforcingFailurePercentage field is set.
   */
  @java.lang.Override
  public boolean hasEnforcingFailurePercentage() {
    return enforcingFailurePercentage_ != null;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status is detected through
   * failure percentage statistics. This setting can be used to disable ejection or to ramp it up
   * slowly. Defaults to 0.
   * [#next-major-version: setting this without setting failure_percentage_threshold should be
   * invalid in v4.]
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_failure_percentage = 17 [(.validate.rules) = { ... }</code>
   * @return The enforcingFailurePercentage.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getEnforcingFailurePercentage() {
    return enforcingFailurePercentage_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingFailurePercentage_;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status is detected through
   * failure percentage statistics. This setting can be used to disable ejection or to ramp it up
   * slowly. Defaults to 0.
   * [#next-major-version: setting this without setting failure_percentage_threshold should be
   * invalid in v4.]
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_failure_percentage = 17 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getEnforcingFailurePercentageOrBuilder() {
    return getEnforcingFailurePercentage();
  }

  public static final int ENFORCING_FAILURE_PERCENTAGE_LOCAL_ORIGIN_FIELD_NUMBER = 18;
  private com.google.protobuf.UInt32Value enforcingFailurePercentageLocalOrigin_;
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status is detected through
   * local-origin failure percentage statistics. This setting can be used to disable ejection or to
   * ramp it up slowly. Defaults to 0.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_failure_percentage_local_origin = 18 [(.validate.rules) = { ... }</code>
   * @return Whether the enforcingFailurePercentageLocalOrigin field is set.
   */
  @java.lang.Override
  public boolean hasEnforcingFailurePercentageLocalOrigin() {
    return enforcingFailurePercentageLocalOrigin_ != null;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status is detected through
   * local-origin failure percentage statistics. This setting can be used to disable ejection or to
   * ramp it up slowly. Defaults to 0.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_failure_percentage_local_origin = 18 [(.validate.rules) = { ... }</code>
   * @return The enforcingFailurePercentageLocalOrigin.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getEnforcingFailurePercentageLocalOrigin() {
    return enforcingFailurePercentageLocalOrigin_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingFailurePercentageLocalOrigin_;
  }
  /**
   * <pre>
   * The % chance that a host will be actually ejected when an outlier status is detected through
   * local-origin failure percentage statistics. This setting can be used to disable ejection or to
   * ramp it up slowly. Defaults to 0.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value enforcing_failure_percentage_local_origin = 18 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getEnforcingFailurePercentageLocalOriginOrBuilder() {
    return getEnforcingFailurePercentageLocalOrigin();
  }

  public static final int FAILURE_PERCENTAGE_MINIMUM_HOSTS_FIELD_NUMBER = 19;
  private com.google.protobuf.UInt32Value failurePercentageMinimumHosts_;
  /**
   * <pre>
   * The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
   * If the total number of hosts in the cluster is less than this value, failure percentage-based
   * ejection will not be performed. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value failure_percentage_minimum_hosts = 19;</code>
   * @return Whether the failurePercentageMinimumHosts field is set.
   */
  @java.lang.Override
  public boolean hasFailurePercentageMinimumHosts() {
    return failurePercentageMinimumHosts_ != null;
  }
  /**
   * <pre>
   * The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
   * If the total number of hosts in the cluster is less than this value, failure percentage-based
   * ejection will not be performed. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value failure_percentage_minimum_hosts = 19;</code>
   * @return The failurePercentageMinimumHosts.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getFailurePercentageMinimumHosts() {
    return failurePercentageMinimumHosts_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : failurePercentageMinimumHosts_;
  }
  /**
   * <pre>
   * The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
   * If the total number of hosts in the cluster is less than this value, failure percentage-based
   * ejection will not be performed. Defaults to 5.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value failure_percentage_minimum_hosts = 19;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getFailurePercentageMinimumHostsOrBuilder() {
    return getFailurePercentageMinimumHosts();
  }

  public static final int FAILURE_PERCENTAGE_REQUEST_VOLUME_FIELD_NUMBER = 20;
  private com.google.protobuf.UInt32Value failurePercentageRequestVolume_;
  /**
   * <pre>
   * The minimum number of total requests that must be collected in one interval (as defined by the
   * interval duration above) to perform failure percentage-based ejection for this host. If the
   * volume is lower than this setting, failure percentage-based ejection will not be performed for
   * this host. Defaults to 50.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value failure_percentage_request_volume = 20;</code>
   * @return Whether the failurePercentageRequestVolume field is set.
   */
  @java.lang.Override
  public boolean hasFailurePercentageRequestVolume() {
    return failurePercentageRequestVolume_ != null;
  }
  /**
   * <pre>
   * The minimum number of total requests that must be collected in one interval (as defined by the
   * interval duration above) to perform failure percentage-based ejection for this host. If the
   * volume is lower than this setting, failure percentage-based ejection will not be performed for
   * this host. Defaults to 50.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value failure_percentage_request_volume = 20;</code>
   * @return The failurePercentageRequestVolume.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getFailurePercentageRequestVolume() {
    return failurePercentageRequestVolume_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : failurePercentageRequestVolume_;
  }
  /**
   * <pre>
   * The minimum number of total requests that must be collected in one interval (as defined by the
   * interval duration above) to perform failure percentage-based ejection for this host. If the
   * volume is lower than this setting, failure percentage-based ejection will not be performed for
   * this host. Defaults to 50.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value failure_percentage_request_volume = 20;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getFailurePercentageRequestVolumeOrBuilder() {
    return getFailurePercentageRequestVolume();
  }

  public static final int MAX_EJECTION_TIME_FIELD_NUMBER = 21;
  private com.google.protobuf.Duration maxEjectionTime_;
  /**
   * <pre>
   * The maximum time that a host is ejected for. See :ref:`base_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.base_ejection_time&gt;`
   * for more information.
   * Defaults to 300000ms or 300s.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_ejection_time = 21 [(.validate.rules) = { ... }</code>
   * @return Whether the maxEjectionTime field is set.
   */
  @java.lang.Override
  public boolean hasMaxEjectionTime() {
    return maxEjectionTime_ != null;
  }
  /**
   * <pre>
   * The maximum time that a host is ejected for. See :ref:`base_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.base_ejection_time&gt;`
   * for more information.
   * Defaults to 300000ms or 300s.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_ejection_time = 21 [(.validate.rules) = { ... }</code>
   * @return The maxEjectionTime.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getMaxEjectionTime() {
    return maxEjectionTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maxEjectionTime_;
  }
  /**
   * <pre>
   * The maximum time that a host is ejected for. See :ref:`base_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.base_ejection_time&gt;`
   * for more information.
   * Defaults to 300000ms or 300s.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_ejection_time = 21 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getMaxEjectionTimeOrBuilder() {
    return getMaxEjectionTime();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (consecutive5Xx_ != null) {
      output.writeMessage(1, getConsecutive5Xx());
    }
    if (interval_ != null) {
      output.writeMessage(2, getInterval());
    }
    if (baseEjectionTime_ != null) {
      output.writeMessage(3, getBaseEjectionTime());
    }
    if (maxEjectionPercent_ != null) {
      output.writeMessage(4, getMaxEjectionPercent());
    }
    if (enforcingConsecutive5Xx_ != null) {
      output.writeMessage(5, getEnforcingConsecutive5Xx());
    }
    if (enforcingSuccessRate_ != null) {
      output.writeMessage(6, getEnforcingSuccessRate());
    }
    if (successRateMinimumHosts_ != null) {
      output.writeMessage(7, getSuccessRateMinimumHosts());
    }
    if (successRateRequestVolume_ != null) {
      output.writeMessage(8, getSuccessRateRequestVolume());
    }
    if (successRateStdevFactor_ != null) {
      output.writeMessage(9, getSuccessRateStdevFactor());
    }
    if (consecutiveGatewayFailure_ != null) {
      output.writeMessage(10, getConsecutiveGatewayFailure());
    }
    if (enforcingConsecutiveGatewayFailure_ != null) {
      output.writeMessage(11, getEnforcingConsecutiveGatewayFailure());
    }
    if (splitExternalLocalOriginErrors_ != false) {
      output.writeBool(12, splitExternalLocalOriginErrors_);
    }
    if (consecutiveLocalOriginFailure_ != null) {
      output.writeMessage(13, getConsecutiveLocalOriginFailure());
    }
    if (enforcingConsecutiveLocalOriginFailure_ != null) {
      output.writeMessage(14, getEnforcingConsecutiveLocalOriginFailure());
    }
    if (enforcingLocalOriginSuccessRate_ != null) {
      output.writeMessage(15, getEnforcingLocalOriginSuccessRate());
    }
    if (failurePercentageThreshold_ != null) {
      output.writeMessage(16, getFailurePercentageThreshold());
    }
    if (enforcingFailurePercentage_ != null) {
      output.writeMessage(17, getEnforcingFailurePercentage());
    }
    if (enforcingFailurePercentageLocalOrigin_ != null) {
      output.writeMessage(18, getEnforcingFailurePercentageLocalOrigin());
    }
    if (failurePercentageMinimumHosts_ != null) {
      output.writeMessage(19, getFailurePercentageMinimumHosts());
    }
    if (failurePercentageRequestVolume_ != null) {
      output.writeMessage(20, getFailurePercentageRequestVolume());
    }
    if (maxEjectionTime_ != null) {
      output.writeMessage(21, getMaxEjectionTime());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (consecutive5Xx_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getConsecutive5Xx());
    }
    if (interval_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getInterval());
    }
    if (baseEjectionTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getBaseEjectionTime());
    }
    if (maxEjectionPercent_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getMaxEjectionPercent());
    }
    if (enforcingConsecutive5Xx_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getEnforcingConsecutive5Xx());
    }
    if (enforcingSuccessRate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getEnforcingSuccessRate());
    }
    if (successRateMinimumHosts_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getSuccessRateMinimumHosts());
    }
    if (successRateRequestVolume_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getSuccessRateRequestVolume());
    }
    if (successRateStdevFactor_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getSuccessRateStdevFactor());
    }
    if (consecutiveGatewayFailure_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getConsecutiveGatewayFailure());
    }
    if (enforcingConsecutiveGatewayFailure_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getEnforcingConsecutiveGatewayFailure());
    }
    if (splitExternalLocalOriginErrors_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(12, splitExternalLocalOriginErrors_);
    }
    if (consecutiveLocalOriginFailure_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getConsecutiveLocalOriginFailure());
    }
    if (enforcingConsecutiveLocalOriginFailure_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, getEnforcingConsecutiveLocalOriginFailure());
    }
    if (enforcingLocalOriginSuccessRate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, getEnforcingLocalOriginSuccessRate());
    }
    if (failurePercentageThreshold_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getFailurePercentageThreshold());
    }
    if (enforcingFailurePercentage_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, getEnforcingFailurePercentage());
    }
    if (enforcingFailurePercentageLocalOrigin_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, getEnforcingFailurePercentageLocalOrigin());
    }
    if (failurePercentageMinimumHosts_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, getFailurePercentageMinimumHosts());
    }
    if (failurePercentageRequestVolume_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, getFailurePercentageRequestVolume());
    }
    if (maxEjectionTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(21, getMaxEjectionTime());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.cluster.v3.OutlierDetection)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.cluster.v3.OutlierDetection other = (io.envoyproxy.envoy.config.cluster.v3.OutlierDetection) obj;

    if (hasConsecutive5Xx() != other.hasConsecutive5Xx()) return false;
    if (hasConsecutive5Xx()) {
      if (!getConsecutive5Xx()
          .equals(other.getConsecutive5Xx())) return false;
    }
    if (hasInterval() != other.hasInterval()) return false;
    if (hasInterval()) {
      if (!getInterval()
          .equals(other.getInterval())) return false;
    }
    if (hasBaseEjectionTime() != other.hasBaseEjectionTime()) return false;
    if (hasBaseEjectionTime()) {
      if (!getBaseEjectionTime()
          .equals(other.getBaseEjectionTime())) return false;
    }
    if (hasMaxEjectionPercent() != other.hasMaxEjectionPercent()) return false;
    if (hasMaxEjectionPercent()) {
      if (!getMaxEjectionPercent()
          .equals(other.getMaxEjectionPercent())) return false;
    }
    if (hasEnforcingConsecutive5Xx() != other.hasEnforcingConsecutive5Xx()) return false;
    if (hasEnforcingConsecutive5Xx()) {
      if (!getEnforcingConsecutive5Xx()
          .equals(other.getEnforcingConsecutive5Xx())) return false;
    }
    if (hasEnforcingSuccessRate() != other.hasEnforcingSuccessRate()) return false;
    if (hasEnforcingSuccessRate()) {
      if (!getEnforcingSuccessRate()
          .equals(other.getEnforcingSuccessRate())) return false;
    }
    if (hasSuccessRateMinimumHosts() != other.hasSuccessRateMinimumHosts()) return false;
    if (hasSuccessRateMinimumHosts()) {
      if (!getSuccessRateMinimumHosts()
          .equals(other.getSuccessRateMinimumHosts())) return false;
    }
    if (hasSuccessRateRequestVolume() != other.hasSuccessRateRequestVolume()) return false;
    if (hasSuccessRateRequestVolume()) {
      if (!getSuccessRateRequestVolume()
          .equals(other.getSuccessRateRequestVolume())) return false;
    }
    if (hasSuccessRateStdevFactor() != other.hasSuccessRateStdevFactor()) return false;
    if (hasSuccessRateStdevFactor()) {
      if (!getSuccessRateStdevFactor()
          .equals(other.getSuccessRateStdevFactor())) return false;
    }
    if (hasConsecutiveGatewayFailure() != other.hasConsecutiveGatewayFailure()) return false;
    if (hasConsecutiveGatewayFailure()) {
      if (!getConsecutiveGatewayFailure()
          .equals(other.getConsecutiveGatewayFailure())) return false;
    }
    if (hasEnforcingConsecutiveGatewayFailure() != other.hasEnforcingConsecutiveGatewayFailure()) return false;
    if (hasEnforcingConsecutiveGatewayFailure()) {
      if (!getEnforcingConsecutiveGatewayFailure()
          .equals(other.getEnforcingConsecutiveGatewayFailure())) return false;
    }
    if (getSplitExternalLocalOriginErrors()
        != other.getSplitExternalLocalOriginErrors()) return false;
    if (hasConsecutiveLocalOriginFailure() != other.hasConsecutiveLocalOriginFailure()) return false;
    if (hasConsecutiveLocalOriginFailure()) {
      if (!getConsecutiveLocalOriginFailure()
          .equals(other.getConsecutiveLocalOriginFailure())) return false;
    }
    if (hasEnforcingConsecutiveLocalOriginFailure() != other.hasEnforcingConsecutiveLocalOriginFailure()) return false;
    if (hasEnforcingConsecutiveLocalOriginFailure()) {
      if (!getEnforcingConsecutiveLocalOriginFailure()
          .equals(other.getEnforcingConsecutiveLocalOriginFailure())) return false;
    }
    if (hasEnforcingLocalOriginSuccessRate() != other.hasEnforcingLocalOriginSuccessRate()) return false;
    if (hasEnforcingLocalOriginSuccessRate()) {
      if (!getEnforcingLocalOriginSuccessRate()
          .equals(other.getEnforcingLocalOriginSuccessRate())) return false;
    }
    if (hasFailurePercentageThreshold() != other.hasFailurePercentageThreshold()) return false;
    if (hasFailurePercentageThreshold()) {
      if (!getFailurePercentageThreshold()
          .equals(other.getFailurePercentageThreshold())) return false;
    }
    if (hasEnforcingFailurePercentage() != other.hasEnforcingFailurePercentage()) return false;
    if (hasEnforcingFailurePercentage()) {
      if (!getEnforcingFailurePercentage()
          .equals(other.getEnforcingFailurePercentage())) return false;
    }
    if (hasEnforcingFailurePercentageLocalOrigin() != other.hasEnforcingFailurePercentageLocalOrigin()) return false;
    if (hasEnforcingFailurePercentageLocalOrigin()) {
      if (!getEnforcingFailurePercentageLocalOrigin()
          .equals(other.getEnforcingFailurePercentageLocalOrigin())) return false;
    }
    if (hasFailurePercentageMinimumHosts() != other.hasFailurePercentageMinimumHosts()) return false;
    if (hasFailurePercentageMinimumHosts()) {
      if (!getFailurePercentageMinimumHosts()
          .equals(other.getFailurePercentageMinimumHosts())) return false;
    }
    if (hasFailurePercentageRequestVolume() != other.hasFailurePercentageRequestVolume()) return false;
    if (hasFailurePercentageRequestVolume()) {
      if (!getFailurePercentageRequestVolume()
          .equals(other.getFailurePercentageRequestVolume())) return false;
    }
    if (hasMaxEjectionTime() != other.hasMaxEjectionTime()) return false;
    if (hasMaxEjectionTime()) {
      if (!getMaxEjectionTime()
          .equals(other.getMaxEjectionTime())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasConsecutive5Xx()) {
      hash = (37 * hash) + CONSECUTIVE_5XX_FIELD_NUMBER;
      hash = (53 * hash) + getConsecutive5Xx().hashCode();
    }
    if (hasInterval()) {
      hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
      hash = (53 * hash) + getInterval().hashCode();
    }
    if (hasBaseEjectionTime()) {
      hash = (37 * hash) + BASE_EJECTION_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getBaseEjectionTime().hashCode();
    }
    if (hasMaxEjectionPercent()) {
      hash = (37 * hash) + MAX_EJECTION_PERCENT_FIELD_NUMBER;
      hash = (53 * hash) + getMaxEjectionPercent().hashCode();
    }
    if (hasEnforcingConsecutive5Xx()) {
      hash = (37 * hash) + ENFORCING_CONSECUTIVE_5XX_FIELD_NUMBER;
      hash = (53 * hash) + getEnforcingConsecutive5Xx().hashCode();
    }
    if (hasEnforcingSuccessRate()) {
      hash = (37 * hash) + ENFORCING_SUCCESS_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getEnforcingSuccessRate().hashCode();
    }
    if (hasSuccessRateMinimumHosts()) {
      hash = (37 * hash) + SUCCESS_RATE_MINIMUM_HOSTS_FIELD_NUMBER;
      hash = (53 * hash) + getSuccessRateMinimumHosts().hashCode();
    }
    if (hasSuccessRateRequestVolume()) {
      hash = (37 * hash) + SUCCESS_RATE_REQUEST_VOLUME_FIELD_NUMBER;
      hash = (53 * hash) + getSuccessRateRequestVolume().hashCode();
    }
    if (hasSuccessRateStdevFactor()) {
      hash = (37 * hash) + SUCCESS_RATE_STDEV_FACTOR_FIELD_NUMBER;
      hash = (53 * hash) + getSuccessRateStdevFactor().hashCode();
    }
    if (hasConsecutiveGatewayFailure()) {
      hash = (37 * hash) + CONSECUTIVE_GATEWAY_FAILURE_FIELD_NUMBER;
      hash = (53 * hash) + getConsecutiveGatewayFailure().hashCode();
    }
    if (hasEnforcingConsecutiveGatewayFailure()) {
      hash = (37 * hash) + ENFORCING_CONSECUTIVE_GATEWAY_FAILURE_FIELD_NUMBER;
      hash = (53 * hash) + getEnforcingConsecutiveGatewayFailure().hashCode();
    }
    hash = (37 * hash) + SPLIT_EXTERNAL_LOCAL_ORIGIN_ERRORS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSplitExternalLocalOriginErrors());
    if (hasConsecutiveLocalOriginFailure()) {
      hash = (37 * hash) + CONSECUTIVE_LOCAL_ORIGIN_FAILURE_FIELD_NUMBER;
      hash = (53 * hash) + getConsecutiveLocalOriginFailure().hashCode();
    }
    if (hasEnforcingConsecutiveLocalOriginFailure()) {
      hash = (37 * hash) + ENFORCING_CONSECUTIVE_LOCAL_ORIGIN_FAILURE_FIELD_NUMBER;
      hash = (53 * hash) + getEnforcingConsecutiveLocalOriginFailure().hashCode();
    }
    if (hasEnforcingLocalOriginSuccessRate()) {
      hash = (37 * hash) + ENFORCING_LOCAL_ORIGIN_SUCCESS_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getEnforcingLocalOriginSuccessRate().hashCode();
    }
    if (hasFailurePercentageThreshold()) {
      hash = (37 * hash) + FAILURE_PERCENTAGE_THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + getFailurePercentageThreshold().hashCode();
    }
    if (hasEnforcingFailurePercentage()) {
      hash = (37 * hash) + ENFORCING_FAILURE_PERCENTAGE_FIELD_NUMBER;
      hash = (53 * hash) + getEnforcingFailurePercentage().hashCode();
    }
    if (hasEnforcingFailurePercentageLocalOrigin()) {
      hash = (37 * hash) + ENFORCING_FAILURE_PERCENTAGE_LOCAL_ORIGIN_FIELD_NUMBER;
      hash = (53 * hash) + getEnforcingFailurePercentageLocalOrigin().hashCode();
    }
    if (hasFailurePercentageMinimumHosts()) {
      hash = (37 * hash) + FAILURE_PERCENTAGE_MINIMUM_HOSTS_FIELD_NUMBER;
      hash = (53 * hash) + getFailurePercentageMinimumHosts().hashCode();
    }
    if (hasFailurePercentageRequestVolume()) {
      hash = (37 * hash) + FAILURE_PERCENTAGE_REQUEST_VOLUME_FIELD_NUMBER;
      hash = (53 * hash) + getFailurePercentageRequestVolume().hashCode();
    }
    if (hasMaxEjectionTime()) {
      hash = (37 * hash) + MAX_EJECTION_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getMaxEjectionTime().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.cluster.v3.OutlierDetection parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.cluster.v3.OutlierDetection parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.cluster.v3.OutlierDetection parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.cluster.v3.OutlierDetection parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.cluster.v3.OutlierDetection parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.cluster.v3.OutlierDetection parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.cluster.v3.OutlierDetection parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.cluster.v3.OutlierDetection parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.cluster.v3.OutlierDetection parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.cluster.v3.OutlierDetection parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.cluster.v3.OutlierDetection parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.cluster.v3.OutlierDetection parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.cluster.v3.OutlierDetection prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * See the :ref:`architecture overview &lt;arch_overview_outlier_detection&gt;` for
   * more information on outlier detection.
   * [#next-free-field: 22]
   * </pre>
   *
   * Protobuf type {@code envoy.config.cluster.v3.OutlierDetection}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.cluster.v3.OutlierDetection)
      io.envoyproxy.envoy.config.cluster.v3.OutlierDetectionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.cluster.v3.OutlierDetectionProto.internal_static_envoy_config_cluster_v3_OutlierDetection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.cluster.v3.OutlierDetectionProto.internal_static_envoy_config_cluster_v3_OutlierDetection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.cluster.v3.OutlierDetection.class, io.envoyproxy.envoy.config.cluster.v3.OutlierDetection.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.cluster.v3.OutlierDetection.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (consecutive5XxBuilder_ == null) {
        consecutive5Xx_ = null;
      } else {
        consecutive5Xx_ = null;
        consecutive5XxBuilder_ = null;
      }
      if (intervalBuilder_ == null) {
        interval_ = null;
      } else {
        interval_ = null;
        intervalBuilder_ = null;
      }
      if (baseEjectionTimeBuilder_ == null) {
        baseEjectionTime_ = null;
      } else {
        baseEjectionTime_ = null;
        baseEjectionTimeBuilder_ = null;
      }
      if (maxEjectionPercentBuilder_ == null) {
        maxEjectionPercent_ = null;
      } else {
        maxEjectionPercent_ = null;
        maxEjectionPercentBuilder_ = null;
      }
      if (enforcingConsecutive5XxBuilder_ == null) {
        enforcingConsecutive5Xx_ = null;
      } else {
        enforcingConsecutive5Xx_ = null;
        enforcingConsecutive5XxBuilder_ = null;
      }
      if (enforcingSuccessRateBuilder_ == null) {
        enforcingSuccessRate_ = null;
      } else {
        enforcingSuccessRate_ = null;
        enforcingSuccessRateBuilder_ = null;
      }
      if (successRateMinimumHostsBuilder_ == null) {
        successRateMinimumHosts_ = null;
      } else {
        successRateMinimumHosts_ = null;
        successRateMinimumHostsBuilder_ = null;
      }
      if (successRateRequestVolumeBuilder_ == null) {
        successRateRequestVolume_ = null;
      } else {
        successRateRequestVolume_ = null;
        successRateRequestVolumeBuilder_ = null;
      }
      if (successRateStdevFactorBuilder_ == null) {
        successRateStdevFactor_ = null;
      } else {
        successRateStdevFactor_ = null;
        successRateStdevFactorBuilder_ = null;
      }
      if (consecutiveGatewayFailureBuilder_ == null) {
        consecutiveGatewayFailure_ = null;
      } else {
        consecutiveGatewayFailure_ = null;
        consecutiveGatewayFailureBuilder_ = null;
      }
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        enforcingConsecutiveGatewayFailure_ = null;
      } else {
        enforcingConsecutiveGatewayFailure_ = null;
        enforcingConsecutiveGatewayFailureBuilder_ = null;
      }
      splitExternalLocalOriginErrors_ = false;

      if (consecutiveLocalOriginFailureBuilder_ == null) {
        consecutiveLocalOriginFailure_ = null;
      } else {
        consecutiveLocalOriginFailure_ = null;
        consecutiveLocalOriginFailureBuilder_ = null;
      }
      if (enforcingConsecutiveLocalOriginFailureBuilder_ == null) {
        enforcingConsecutiveLocalOriginFailure_ = null;
      } else {
        enforcingConsecutiveLocalOriginFailure_ = null;
        enforcingConsecutiveLocalOriginFailureBuilder_ = null;
      }
      if (enforcingLocalOriginSuccessRateBuilder_ == null) {
        enforcingLocalOriginSuccessRate_ = null;
      } else {
        enforcingLocalOriginSuccessRate_ = null;
        enforcingLocalOriginSuccessRateBuilder_ = null;
      }
      if (failurePercentageThresholdBuilder_ == null) {
        failurePercentageThreshold_ = null;
      } else {
        failurePercentageThreshold_ = null;
        failurePercentageThresholdBuilder_ = null;
      }
      if (enforcingFailurePercentageBuilder_ == null) {
        enforcingFailurePercentage_ = null;
      } else {
        enforcingFailurePercentage_ = null;
        enforcingFailurePercentageBuilder_ = null;
      }
      if (enforcingFailurePercentageLocalOriginBuilder_ == null) {
        enforcingFailurePercentageLocalOrigin_ = null;
      } else {
        enforcingFailurePercentageLocalOrigin_ = null;
        enforcingFailurePercentageLocalOriginBuilder_ = null;
      }
      if (failurePercentageMinimumHostsBuilder_ == null) {
        failurePercentageMinimumHosts_ = null;
      } else {
        failurePercentageMinimumHosts_ = null;
        failurePercentageMinimumHostsBuilder_ = null;
      }
      if (failurePercentageRequestVolumeBuilder_ == null) {
        failurePercentageRequestVolume_ = null;
      } else {
        failurePercentageRequestVolume_ = null;
        failurePercentageRequestVolumeBuilder_ = null;
      }
      if (maxEjectionTimeBuilder_ == null) {
        maxEjectionTime_ = null;
      } else {
        maxEjectionTime_ = null;
        maxEjectionTimeBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.cluster.v3.OutlierDetectionProto.internal_static_envoy_config_cluster_v3_OutlierDetection_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.cluster.v3.OutlierDetection getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.cluster.v3.OutlierDetection.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.cluster.v3.OutlierDetection build() {
      io.envoyproxy.envoy.config.cluster.v3.OutlierDetection result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.cluster.v3.OutlierDetection buildPartial() {
      io.envoyproxy.envoy.config.cluster.v3.OutlierDetection result = new io.envoyproxy.envoy.config.cluster.v3.OutlierDetection(this);
      if (consecutive5XxBuilder_ == null) {
        result.consecutive5Xx_ = consecutive5Xx_;
      } else {
        result.consecutive5Xx_ = consecutive5XxBuilder_.build();
      }
      if (intervalBuilder_ == null) {
        result.interval_ = interval_;
      } else {
        result.interval_ = intervalBuilder_.build();
      }
      if (baseEjectionTimeBuilder_ == null) {
        result.baseEjectionTime_ = baseEjectionTime_;
      } else {
        result.baseEjectionTime_ = baseEjectionTimeBuilder_.build();
      }
      if (maxEjectionPercentBuilder_ == null) {
        result.maxEjectionPercent_ = maxEjectionPercent_;
      } else {
        result.maxEjectionPercent_ = maxEjectionPercentBuilder_.build();
      }
      if (enforcingConsecutive5XxBuilder_ == null) {
        result.enforcingConsecutive5Xx_ = enforcingConsecutive5Xx_;
      } else {
        result.enforcingConsecutive5Xx_ = enforcingConsecutive5XxBuilder_.build();
      }
      if (enforcingSuccessRateBuilder_ == null) {
        result.enforcingSuccessRate_ = enforcingSuccessRate_;
      } else {
        result.enforcingSuccessRate_ = enforcingSuccessRateBuilder_.build();
      }
      if (successRateMinimumHostsBuilder_ == null) {
        result.successRateMinimumHosts_ = successRateMinimumHosts_;
      } else {
        result.successRateMinimumHosts_ = successRateMinimumHostsBuilder_.build();
      }
      if (successRateRequestVolumeBuilder_ == null) {
        result.successRateRequestVolume_ = successRateRequestVolume_;
      } else {
        result.successRateRequestVolume_ = successRateRequestVolumeBuilder_.build();
      }
      if (successRateStdevFactorBuilder_ == null) {
        result.successRateStdevFactor_ = successRateStdevFactor_;
      } else {
        result.successRateStdevFactor_ = successRateStdevFactorBuilder_.build();
      }
      if (consecutiveGatewayFailureBuilder_ == null) {
        result.consecutiveGatewayFailure_ = consecutiveGatewayFailure_;
      } else {
        result.consecutiveGatewayFailure_ = consecutiveGatewayFailureBuilder_.build();
      }
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        result.enforcingConsecutiveGatewayFailure_ = enforcingConsecutiveGatewayFailure_;
      } else {
        result.enforcingConsecutiveGatewayFailure_ = enforcingConsecutiveGatewayFailureBuilder_.build();
      }
      result.splitExternalLocalOriginErrors_ = splitExternalLocalOriginErrors_;
      if (consecutiveLocalOriginFailureBuilder_ == null) {
        result.consecutiveLocalOriginFailure_ = consecutiveLocalOriginFailure_;
      } else {
        result.consecutiveLocalOriginFailure_ = consecutiveLocalOriginFailureBuilder_.build();
      }
      if (enforcingConsecutiveLocalOriginFailureBuilder_ == null) {
        result.enforcingConsecutiveLocalOriginFailure_ = enforcingConsecutiveLocalOriginFailure_;
      } else {
        result.enforcingConsecutiveLocalOriginFailure_ = enforcingConsecutiveLocalOriginFailureBuilder_.build();
      }
      if (enforcingLocalOriginSuccessRateBuilder_ == null) {
        result.enforcingLocalOriginSuccessRate_ = enforcingLocalOriginSuccessRate_;
      } else {
        result.enforcingLocalOriginSuccessRate_ = enforcingLocalOriginSuccessRateBuilder_.build();
      }
      if (failurePercentageThresholdBuilder_ == null) {
        result.failurePercentageThreshold_ = failurePercentageThreshold_;
      } else {
        result.failurePercentageThreshold_ = failurePercentageThresholdBuilder_.build();
      }
      if (enforcingFailurePercentageBuilder_ == null) {
        result.enforcingFailurePercentage_ = enforcingFailurePercentage_;
      } else {
        result.enforcingFailurePercentage_ = enforcingFailurePercentageBuilder_.build();
      }
      if (enforcingFailurePercentageLocalOriginBuilder_ == null) {
        result.enforcingFailurePercentageLocalOrigin_ = enforcingFailurePercentageLocalOrigin_;
      } else {
        result.enforcingFailurePercentageLocalOrigin_ = enforcingFailurePercentageLocalOriginBuilder_.build();
      }
      if (failurePercentageMinimumHostsBuilder_ == null) {
        result.failurePercentageMinimumHosts_ = failurePercentageMinimumHosts_;
      } else {
        result.failurePercentageMinimumHosts_ = failurePercentageMinimumHostsBuilder_.build();
      }
      if (failurePercentageRequestVolumeBuilder_ == null) {
        result.failurePercentageRequestVolume_ = failurePercentageRequestVolume_;
      } else {
        result.failurePercentageRequestVolume_ = failurePercentageRequestVolumeBuilder_.build();
      }
      if (maxEjectionTimeBuilder_ == null) {
        result.maxEjectionTime_ = maxEjectionTime_;
      } else {
        result.maxEjectionTime_ = maxEjectionTimeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.cluster.v3.OutlierDetection) {
        return mergeFrom((io.envoyproxy.envoy.config.cluster.v3.OutlierDetection)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.cluster.v3.OutlierDetection other) {
      if (other == io.envoyproxy.envoy.config.cluster.v3.OutlierDetection.getDefaultInstance()) return this;
      if (other.hasConsecutive5Xx()) {
        mergeConsecutive5Xx(other.getConsecutive5Xx());
      }
      if (other.hasInterval()) {
        mergeInterval(other.getInterval());
      }
      if (other.hasBaseEjectionTime()) {
        mergeBaseEjectionTime(other.getBaseEjectionTime());
      }
      if (other.hasMaxEjectionPercent()) {
        mergeMaxEjectionPercent(other.getMaxEjectionPercent());
      }
      if (other.hasEnforcingConsecutive5Xx()) {
        mergeEnforcingConsecutive5Xx(other.getEnforcingConsecutive5Xx());
      }
      if (other.hasEnforcingSuccessRate()) {
        mergeEnforcingSuccessRate(other.getEnforcingSuccessRate());
      }
      if (other.hasSuccessRateMinimumHosts()) {
        mergeSuccessRateMinimumHosts(other.getSuccessRateMinimumHosts());
      }
      if (other.hasSuccessRateRequestVolume()) {
        mergeSuccessRateRequestVolume(other.getSuccessRateRequestVolume());
      }
      if (other.hasSuccessRateStdevFactor()) {
        mergeSuccessRateStdevFactor(other.getSuccessRateStdevFactor());
      }
      if (other.hasConsecutiveGatewayFailure()) {
        mergeConsecutiveGatewayFailure(other.getConsecutiveGatewayFailure());
      }
      if (other.hasEnforcingConsecutiveGatewayFailure()) {
        mergeEnforcingConsecutiveGatewayFailure(other.getEnforcingConsecutiveGatewayFailure());
      }
      if (other.getSplitExternalLocalOriginErrors() != false) {
        setSplitExternalLocalOriginErrors(other.getSplitExternalLocalOriginErrors());
      }
      if (other.hasConsecutiveLocalOriginFailure()) {
        mergeConsecutiveLocalOriginFailure(other.getConsecutiveLocalOriginFailure());
      }
      if (other.hasEnforcingConsecutiveLocalOriginFailure()) {
        mergeEnforcingConsecutiveLocalOriginFailure(other.getEnforcingConsecutiveLocalOriginFailure());
      }
      if (other.hasEnforcingLocalOriginSuccessRate()) {
        mergeEnforcingLocalOriginSuccessRate(other.getEnforcingLocalOriginSuccessRate());
      }
      if (other.hasFailurePercentageThreshold()) {
        mergeFailurePercentageThreshold(other.getFailurePercentageThreshold());
      }
      if (other.hasEnforcingFailurePercentage()) {
        mergeEnforcingFailurePercentage(other.getEnforcingFailurePercentage());
      }
      if (other.hasEnforcingFailurePercentageLocalOrigin()) {
        mergeEnforcingFailurePercentageLocalOrigin(other.getEnforcingFailurePercentageLocalOrigin());
      }
      if (other.hasFailurePercentageMinimumHosts()) {
        mergeFailurePercentageMinimumHosts(other.getFailurePercentageMinimumHosts());
      }
      if (other.hasFailurePercentageRequestVolume()) {
        mergeFailurePercentageRequestVolume(other.getFailurePercentageRequestVolume());
      }
      if (other.hasMaxEjectionTime()) {
        mergeMaxEjectionTime(other.getMaxEjectionTime());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.config.cluster.v3.OutlierDetection parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.config.cluster.v3.OutlierDetection) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private com.google.protobuf.UInt32Value consecutive5Xx_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> consecutive5XxBuilder_;
    /**
     * <pre>
     * The number of consecutive 5xx responses or local origin errors that are mapped
     * to 5xx error codes before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     * @return Whether the consecutive5xx field is set.
     */
    public boolean hasConsecutive5Xx() {
      return consecutive5XxBuilder_ != null || consecutive5Xx_ != null;
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses or local origin errors that are mapped
     * to 5xx error codes before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     * @return The consecutive5xx.
     */
    public com.google.protobuf.UInt32Value getConsecutive5Xx() {
      if (consecutive5XxBuilder_ == null) {
        return consecutive5Xx_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutive5Xx_;
      } else {
        return consecutive5XxBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses or local origin errors that are mapped
     * to 5xx error codes before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public Builder setConsecutive5Xx(com.google.protobuf.UInt32Value value) {
      if (consecutive5XxBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        consecutive5Xx_ = value;
        onChanged();
      } else {
        consecutive5XxBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses or local origin errors that are mapped
     * to 5xx error codes before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public Builder setConsecutive5Xx(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (consecutive5XxBuilder_ == null) {
        consecutive5Xx_ = builderForValue.build();
        onChanged();
      } else {
        consecutive5XxBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses or local origin errors that are mapped
     * to 5xx error codes before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public Builder mergeConsecutive5Xx(com.google.protobuf.UInt32Value value) {
      if (consecutive5XxBuilder_ == null) {
        if (consecutive5Xx_ != null) {
          consecutive5Xx_ =
            com.google.protobuf.UInt32Value.newBuilder(consecutive5Xx_).mergeFrom(value).buildPartial();
        } else {
          consecutive5Xx_ = value;
        }
        onChanged();
      } else {
        consecutive5XxBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses or local origin errors that are mapped
     * to 5xx error codes before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public Builder clearConsecutive5Xx() {
      if (consecutive5XxBuilder_ == null) {
        consecutive5Xx_ = null;
        onChanged();
      } else {
        consecutive5Xx_ = null;
        consecutive5XxBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses or local origin errors that are mapped
     * to 5xx error codes before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getConsecutive5XxBuilder() {
      
      onChanged();
      return getConsecutive5XxFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses or local origin errors that are mapped
     * to 5xx error codes before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getConsecutive5XxOrBuilder() {
      if (consecutive5XxBuilder_ != null) {
        return consecutive5XxBuilder_.getMessageOrBuilder();
      } else {
        return consecutive5Xx_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : consecutive5Xx_;
      }
    }
    /**
     * <pre>
     * The number of consecutive 5xx responses or local origin errors that are mapped
     * to 5xx error codes before a consecutive 5xx ejection
     * occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_5xx = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getConsecutive5XxFieldBuilder() {
      if (consecutive5XxBuilder_ == null) {
        consecutive5XxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getConsecutive5Xx(),
                getParentForChildren(),
                isClean());
        consecutive5Xx_ = null;
      }
      return consecutive5XxBuilder_;
    }

    private com.google.protobuf.Duration interval_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> intervalBuilder_;
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the interval field is set.
     */
    public boolean hasInterval() {
      return intervalBuilder_ != null || interval_ != null;
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     * @return The interval.
     */
    public com.google.protobuf.Duration getInterval() {
      if (intervalBuilder_ == null) {
        return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
      } else {
        return intervalBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setInterval(com.google.protobuf.Duration value) {
      if (intervalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        interval_ = value;
        onChanged();
      } else {
        intervalBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setInterval(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (intervalBuilder_ == null) {
        interval_ = builderForValue.build();
        onChanged();
      } else {
        intervalBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeInterval(com.google.protobuf.Duration value) {
      if (intervalBuilder_ == null) {
        if (interval_ != null) {
          interval_ =
            com.google.protobuf.Duration.newBuilder(interval_).mergeFrom(value).buildPartial();
        } else {
          interval_ = value;
        }
        onChanged();
      } else {
        intervalBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder clearInterval() {
      if (intervalBuilder_ == null) {
        interval_ = null;
        onChanged();
      } else {
        interval_ = null;
        intervalBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.Duration.Builder getIntervalBuilder() {
      
      onChanged();
      return getIntervalFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {
      if (intervalBuilder_ != null) {
        return intervalBuilder_.getMessageOrBuilder();
      } else {
        return interval_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : interval_;
      }
    }
    /**
     * <pre>
     * The time interval between ejection analysis sweeps. This can result in
     * both new ejections as well as hosts being returned to service. Defaults
     * to 10000ms or 10s.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 2 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getIntervalFieldBuilder() {
      if (intervalBuilder_ == null) {
        intervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getInterval(),
                getParentForChildren(),
                isClean());
        interval_ = null;
      }
      return intervalBuilder_;
    }

    private com.google.protobuf.Duration baseEjectionTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> baseEjectionTimeBuilder_;
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected and is
     * capped by :ref:`max_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.max_ejection_time&gt;`.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     * @return Whether the baseEjectionTime field is set.
     */
    public boolean hasBaseEjectionTime() {
      return baseEjectionTimeBuilder_ != null || baseEjectionTime_ != null;
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected and is
     * capped by :ref:`max_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.max_ejection_time&gt;`.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     * @return The baseEjectionTime.
     */
    public com.google.protobuf.Duration getBaseEjectionTime() {
      if (baseEjectionTimeBuilder_ == null) {
        return baseEjectionTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : baseEjectionTime_;
      } else {
        return baseEjectionTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected and is
     * capped by :ref:`max_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.max_ejection_time&gt;`.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setBaseEjectionTime(com.google.protobuf.Duration value) {
      if (baseEjectionTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        baseEjectionTime_ = value;
        onChanged();
      } else {
        baseEjectionTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected and is
     * capped by :ref:`max_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.max_ejection_time&gt;`.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setBaseEjectionTime(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (baseEjectionTimeBuilder_ == null) {
        baseEjectionTime_ = builderForValue.build();
        onChanged();
      } else {
        baseEjectionTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected and is
     * capped by :ref:`max_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.max_ejection_time&gt;`.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeBaseEjectionTime(com.google.protobuf.Duration value) {
      if (baseEjectionTimeBuilder_ == null) {
        if (baseEjectionTime_ != null) {
          baseEjectionTime_ =
            com.google.protobuf.Duration.newBuilder(baseEjectionTime_).mergeFrom(value).buildPartial();
        } else {
          baseEjectionTime_ = value;
        }
        onChanged();
      } else {
        baseEjectionTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected and is
     * capped by :ref:`max_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.max_ejection_time&gt;`.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder clearBaseEjectionTime() {
      if (baseEjectionTimeBuilder_ == null) {
        baseEjectionTime_ = null;
        onChanged();
      } else {
        baseEjectionTime_ = null;
        baseEjectionTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected and is
     * capped by :ref:`max_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.max_ejection_time&gt;`.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.Duration.Builder getBaseEjectionTimeBuilder() {
      
      onChanged();
      return getBaseEjectionTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected and is
     * capped by :ref:`max_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.max_ejection_time&gt;`.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.DurationOrBuilder getBaseEjectionTimeOrBuilder() {
      if (baseEjectionTimeBuilder_ != null) {
        return baseEjectionTimeBuilder_.getMessageOrBuilder();
      } else {
        return baseEjectionTime_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : baseEjectionTime_;
      }
    }
    /**
     * <pre>
     * The base time that a host is ejected for. The real time is equal to the
     * base time multiplied by the number of times the host has been ejected and is
     * capped by :ref:`max_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.max_ejection_time&gt;`.
     * Defaults to 30000ms or 30s.
     * </pre>
     *
     * <code>.google.protobuf.Duration base_ejection_time = 3 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getBaseEjectionTimeFieldBuilder() {
      if (baseEjectionTimeBuilder_ == null) {
        baseEjectionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getBaseEjectionTime(),
                getParentForChildren(),
                isClean());
        baseEjectionTime_ = null;
      }
      return baseEjectionTimeBuilder_;
    }

    private com.google.protobuf.UInt32Value maxEjectionPercent_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> maxEjectionPercentBuilder_;
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     * @return Whether the maxEjectionPercent field is set.
     */
    public boolean hasMaxEjectionPercent() {
      return maxEjectionPercentBuilder_ != null || maxEjectionPercent_ != null;
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     * @return The maxEjectionPercent.
     */
    public com.google.protobuf.UInt32Value getMaxEjectionPercent() {
      if (maxEjectionPercentBuilder_ == null) {
        return maxEjectionPercent_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxEjectionPercent_;
      } else {
        return maxEjectionPercentBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public Builder setMaxEjectionPercent(com.google.protobuf.UInt32Value value) {
      if (maxEjectionPercentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxEjectionPercent_ = value;
        onChanged();
      } else {
        maxEjectionPercentBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public Builder setMaxEjectionPercent(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (maxEjectionPercentBuilder_ == null) {
        maxEjectionPercent_ = builderForValue.build();
        onChanged();
      } else {
        maxEjectionPercentBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeMaxEjectionPercent(com.google.protobuf.UInt32Value value) {
      if (maxEjectionPercentBuilder_ == null) {
        if (maxEjectionPercent_ != null) {
          maxEjectionPercent_ =
            com.google.protobuf.UInt32Value.newBuilder(maxEjectionPercent_).mergeFrom(value).buildPartial();
        } else {
          maxEjectionPercent_ = value;
        }
        onChanged();
      } else {
        maxEjectionPercentBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public Builder clearMaxEjectionPercent() {
      if (maxEjectionPercentBuilder_ == null) {
        maxEjectionPercent_ = null;
        onChanged();
      } else {
        maxEjectionPercent_ = null;
        maxEjectionPercentBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getMaxEjectionPercentBuilder() {
      
      onChanged();
      return getMaxEjectionPercentFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getMaxEjectionPercentOrBuilder() {
      if (maxEjectionPercentBuilder_ != null) {
        return maxEjectionPercentBuilder_.getMessageOrBuilder();
      } else {
        return maxEjectionPercent_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : maxEjectionPercent_;
      }
    }
    /**
     * <pre>
     * The maximum % of an upstream cluster that can be ejected due to outlier
     * detection. Defaults to 10% but will eject at least one host regardless of the value.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_ejection_percent = 4 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getMaxEjectionPercentFieldBuilder() {
      if (maxEjectionPercentBuilder_ == null) {
        maxEjectionPercentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getMaxEjectionPercent(),
                getParentForChildren(),
                isClean());
        maxEjectionPercent_ = null;
      }
      return maxEjectionPercentBuilder_;
    }

    private com.google.protobuf.UInt32Value enforcingConsecutive5Xx_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> enforcingConsecutive5XxBuilder_;
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     * @return Whether the enforcingConsecutive5xx field is set.
     */
    public boolean hasEnforcingConsecutive5Xx() {
      return enforcingConsecutive5XxBuilder_ != null || enforcingConsecutive5Xx_ != null;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     * @return The enforcingConsecutive5xx.
     */
    public com.google.protobuf.UInt32Value getEnforcingConsecutive5Xx() {
      if (enforcingConsecutive5XxBuilder_ == null) {
        return enforcingConsecutive5Xx_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutive5Xx_;
      } else {
        return enforcingConsecutive5XxBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingConsecutive5Xx(com.google.protobuf.UInt32Value value) {
      if (enforcingConsecutive5XxBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        enforcingConsecutive5Xx_ = value;
        onChanged();
      } else {
        enforcingConsecutive5XxBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingConsecutive5Xx(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (enforcingConsecutive5XxBuilder_ == null) {
        enforcingConsecutive5Xx_ = builderForValue.build();
        onChanged();
      } else {
        enforcingConsecutive5XxBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeEnforcingConsecutive5Xx(com.google.protobuf.UInt32Value value) {
      if (enforcingConsecutive5XxBuilder_ == null) {
        if (enforcingConsecutive5Xx_ != null) {
          enforcingConsecutive5Xx_ =
            com.google.protobuf.UInt32Value.newBuilder(enforcingConsecutive5Xx_).mergeFrom(value).buildPartial();
        } else {
          enforcingConsecutive5Xx_ = value;
        }
        onChanged();
      } else {
        enforcingConsecutive5XxBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public Builder clearEnforcingConsecutive5Xx() {
      if (enforcingConsecutive5XxBuilder_ == null) {
        enforcingConsecutive5Xx_ = null;
        onChanged();
      } else {
        enforcingConsecutive5Xx_ = null;
        enforcingConsecutive5XxBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getEnforcingConsecutive5XxBuilder() {
      
      onChanged();
      return getEnforcingConsecutive5XxFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getEnforcingConsecutive5XxOrBuilder() {
      if (enforcingConsecutive5XxBuilder_ != null) {
        return enforcingConsecutive5XxBuilder_.getMessageOrBuilder();
      } else {
        return enforcingConsecutive5Xx_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutive5Xx_;
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive 5xx. This setting can be used to disable
     * ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_5xx = 5 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getEnforcingConsecutive5XxFieldBuilder() {
      if (enforcingConsecutive5XxBuilder_ == null) {
        enforcingConsecutive5XxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getEnforcingConsecutive5Xx(),
                getParentForChildren(),
                isClean());
        enforcingConsecutive5Xx_ = null;
      }
      return enforcingConsecutive5XxBuilder_;
    }

    private com.google.protobuf.UInt32Value enforcingSuccessRate_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> enforcingSuccessRateBuilder_;
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     * @return Whether the enforcingSuccessRate field is set.
     */
    public boolean hasEnforcingSuccessRate() {
      return enforcingSuccessRateBuilder_ != null || enforcingSuccessRate_ != null;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     * @return The enforcingSuccessRate.
     */
    public com.google.protobuf.UInt32Value getEnforcingSuccessRate() {
      if (enforcingSuccessRateBuilder_ == null) {
        return enforcingSuccessRate_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingSuccessRate_;
      } else {
        return enforcingSuccessRateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingSuccessRate(com.google.protobuf.UInt32Value value) {
      if (enforcingSuccessRateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        enforcingSuccessRate_ = value;
        onChanged();
      } else {
        enforcingSuccessRateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingSuccessRate(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (enforcingSuccessRateBuilder_ == null) {
        enforcingSuccessRate_ = builderForValue.build();
        onChanged();
      } else {
        enforcingSuccessRateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeEnforcingSuccessRate(com.google.protobuf.UInt32Value value) {
      if (enforcingSuccessRateBuilder_ == null) {
        if (enforcingSuccessRate_ != null) {
          enforcingSuccessRate_ =
            com.google.protobuf.UInt32Value.newBuilder(enforcingSuccessRate_).mergeFrom(value).buildPartial();
        } else {
          enforcingSuccessRate_ = value;
        }
        onChanged();
      } else {
        enforcingSuccessRateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public Builder clearEnforcingSuccessRate() {
      if (enforcingSuccessRateBuilder_ == null) {
        enforcingSuccessRate_ = null;
        onChanged();
      } else {
        enforcingSuccessRate_ = null;
        enforcingSuccessRateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getEnforcingSuccessRateBuilder() {
      
      onChanged();
      return getEnforcingSuccessRateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getEnforcingSuccessRateOrBuilder() {
      if (enforcingSuccessRateBuilder_ != null) {
        return enforcingSuccessRateBuilder_.getMessageOrBuilder();
      } else {
        return enforcingSuccessRate_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingSuccessRate_;
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics. This setting can be used to
     * disable ejection or to ramp it up slowly. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_success_rate = 6 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getEnforcingSuccessRateFieldBuilder() {
      if (enforcingSuccessRateBuilder_ == null) {
        enforcingSuccessRateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getEnforcingSuccessRate(),
                getParentForChildren(),
                isClean());
        enforcingSuccessRate_ = null;
      }
      return enforcingSuccessRateBuilder_;
    }

    private com.google.protobuf.UInt32Value successRateMinimumHosts_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> successRateMinimumHostsBuilder_;
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     * @return Whether the successRateMinimumHosts field is set.
     */
    public boolean hasSuccessRateMinimumHosts() {
      return successRateMinimumHostsBuilder_ != null || successRateMinimumHosts_ != null;
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     * @return The successRateMinimumHosts.
     */
    public com.google.protobuf.UInt32Value getSuccessRateMinimumHosts() {
      if (successRateMinimumHostsBuilder_ == null) {
        return successRateMinimumHosts_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : successRateMinimumHosts_;
      } else {
        return successRateMinimumHostsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public Builder setSuccessRateMinimumHosts(com.google.protobuf.UInt32Value value) {
      if (successRateMinimumHostsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        successRateMinimumHosts_ = value;
        onChanged();
      } else {
        successRateMinimumHostsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public Builder setSuccessRateMinimumHosts(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (successRateMinimumHostsBuilder_ == null) {
        successRateMinimumHosts_ = builderForValue.build();
        onChanged();
      } else {
        successRateMinimumHostsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public Builder mergeSuccessRateMinimumHosts(com.google.protobuf.UInt32Value value) {
      if (successRateMinimumHostsBuilder_ == null) {
        if (successRateMinimumHosts_ != null) {
          successRateMinimumHosts_ =
            com.google.protobuf.UInt32Value.newBuilder(successRateMinimumHosts_).mergeFrom(value).buildPartial();
        } else {
          successRateMinimumHosts_ = value;
        }
        onChanged();
      } else {
        successRateMinimumHostsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public Builder clearSuccessRateMinimumHosts() {
      if (successRateMinimumHostsBuilder_ == null) {
        successRateMinimumHosts_ = null;
        onChanged();
      } else {
        successRateMinimumHosts_ = null;
        successRateMinimumHostsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getSuccessRateMinimumHostsBuilder() {
      
      onChanged();
      return getSuccessRateMinimumHostsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getSuccessRateMinimumHostsOrBuilder() {
      if (successRateMinimumHostsBuilder_ != null) {
        return successRateMinimumHostsBuilder_.getMessageOrBuilder();
      } else {
        return successRateMinimumHosts_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : successRateMinimumHosts_;
      }
    }
    /**
     * <pre>
     * The number of hosts in a cluster that must have enough request volume to
     * detect success rate outliers. If the number of hosts is less than this
     * setting, outlier detection via success rate statistics is not performed
     * for any host in the cluster. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_minimum_hosts = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getSuccessRateMinimumHostsFieldBuilder() {
      if (successRateMinimumHostsBuilder_ == null) {
        successRateMinimumHostsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getSuccessRateMinimumHosts(),
                getParentForChildren(),
                isClean());
        successRateMinimumHosts_ = null;
      }
      return successRateMinimumHostsBuilder_;
    }

    private com.google.protobuf.UInt32Value successRateRequestVolume_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> successRateRequestVolumeBuilder_;
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     * @return Whether the successRateRequestVolume field is set.
     */
    public boolean hasSuccessRateRequestVolume() {
      return successRateRequestVolumeBuilder_ != null || successRateRequestVolume_ != null;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     * @return The successRateRequestVolume.
     */
    public com.google.protobuf.UInt32Value getSuccessRateRequestVolume() {
      if (successRateRequestVolumeBuilder_ == null) {
        return successRateRequestVolume_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : successRateRequestVolume_;
      } else {
        return successRateRequestVolumeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public Builder setSuccessRateRequestVolume(com.google.protobuf.UInt32Value value) {
      if (successRateRequestVolumeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        successRateRequestVolume_ = value;
        onChanged();
      } else {
        successRateRequestVolumeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public Builder setSuccessRateRequestVolume(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (successRateRequestVolumeBuilder_ == null) {
        successRateRequestVolume_ = builderForValue.build();
        onChanged();
      } else {
        successRateRequestVolumeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public Builder mergeSuccessRateRequestVolume(com.google.protobuf.UInt32Value value) {
      if (successRateRequestVolumeBuilder_ == null) {
        if (successRateRequestVolume_ != null) {
          successRateRequestVolume_ =
            com.google.protobuf.UInt32Value.newBuilder(successRateRequestVolume_).mergeFrom(value).buildPartial();
        } else {
          successRateRequestVolume_ = value;
        }
        onChanged();
      } else {
        successRateRequestVolumeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public Builder clearSuccessRateRequestVolume() {
      if (successRateRequestVolumeBuilder_ == null) {
        successRateRequestVolume_ = null;
        onChanged();
      } else {
        successRateRequestVolume_ = null;
        successRateRequestVolumeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getSuccessRateRequestVolumeBuilder() {
      
      onChanged();
      return getSuccessRateRequestVolumeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getSuccessRateRequestVolumeOrBuilder() {
      if (successRateRequestVolumeBuilder_ != null) {
        return successRateRequestVolumeBuilder_.getMessageOrBuilder();
      } else {
        return successRateRequestVolume_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : successRateRequestVolume_;
      }
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one
     * interval (as defined by the interval duration above) to include this host
     * in success rate based outlier detection. If the volume is lower than this
     * setting, outlier detection via success rate statistics is not performed
     * for that host. Defaults to 100.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_request_volume = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getSuccessRateRequestVolumeFieldBuilder() {
      if (successRateRequestVolumeBuilder_ == null) {
        successRateRequestVolumeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getSuccessRateRequestVolume(),
                getParentForChildren(),
                isClean());
        successRateRequestVolume_ = null;
      }
      return successRateRequestVolumeBuilder_;
    }

    private com.google.protobuf.UInt32Value successRateStdevFactor_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> successRateStdevFactorBuilder_;
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     * @return Whether the successRateStdevFactor field is set.
     */
    public boolean hasSuccessRateStdevFactor() {
      return successRateStdevFactorBuilder_ != null || successRateStdevFactor_ != null;
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     * @return The successRateStdevFactor.
     */
    public com.google.protobuf.UInt32Value getSuccessRateStdevFactor() {
      if (successRateStdevFactorBuilder_ == null) {
        return successRateStdevFactor_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : successRateStdevFactor_;
      } else {
        return successRateStdevFactorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public Builder setSuccessRateStdevFactor(com.google.protobuf.UInt32Value value) {
      if (successRateStdevFactorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        successRateStdevFactor_ = value;
        onChanged();
      } else {
        successRateStdevFactorBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public Builder setSuccessRateStdevFactor(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (successRateStdevFactorBuilder_ == null) {
        successRateStdevFactor_ = builderForValue.build();
        onChanged();
      } else {
        successRateStdevFactorBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public Builder mergeSuccessRateStdevFactor(com.google.protobuf.UInt32Value value) {
      if (successRateStdevFactorBuilder_ == null) {
        if (successRateStdevFactor_ != null) {
          successRateStdevFactor_ =
            com.google.protobuf.UInt32Value.newBuilder(successRateStdevFactor_).mergeFrom(value).buildPartial();
        } else {
          successRateStdevFactor_ = value;
        }
        onChanged();
      } else {
        successRateStdevFactorBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public Builder clearSuccessRateStdevFactor() {
      if (successRateStdevFactorBuilder_ == null) {
        successRateStdevFactor_ = null;
        onChanged();
      } else {
        successRateStdevFactor_ = null;
        successRateStdevFactorBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getSuccessRateStdevFactorBuilder() {
      
      onChanged();
      return getSuccessRateStdevFactorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getSuccessRateStdevFactorOrBuilder() {
      if (successRateStdevFactorBuilder_ != null) {
        return successRateStdevFactorBuilder_.getMessageOrBuilder();
      } else {
        return successRateStdevFactor_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : successRateStdevFactor_;
      }
    }
    /**
     * <pre>
     * This factor is used to determine the ejection threshold for success rate
     * outlier ejection. The ejection threshold is the difference between the
     * mean success rate, and the product of this factor and the standard
     * deviation of the mean success rate: mean - (stdev *
     * success_rate_stdev_factor). This factor is divided by a thousand to get a
     * double. That is, if the desired factor is 1.9, the runtime value should
     * be 1900. Defaults to 1900.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value success_rate_stdev_factor = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getSuccessRateStdevFactorFieldBuilder() {
      if (successRateStdevFactorBuilder_ == null) {
        successRateStdevFactorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getSuccessRateStdevFactor(),
                getParentForChildren(),
                isClean());
        successRateStdevFactor_ = null;
      }
      return successRateStdevFactorBuilder_;
    }

    private com.google.protobuf.UInt32Value consecutiveGatewayFailure_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> consecutiveGatewayFailureBuilder_;
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status codes)
     * before a consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     * @return Whether the consecutiveGatewayFailure field is set.
     */
    public boolean hasConsecutiveGatewayFailure() {
      return consecutiveGatewayFailureBuilder_ != null || consecutiveGatewayFailure_ != null;
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status codes)
     * before a consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     * @return The consecutiveGatewayFailure.
     */
    public com.google.protobuf.UInt32Value getConsecutiveGatewayFailure() {
      if (consecutiveGatewayFailureBuilder_ == null) {
        return consecutiveGatewayFailure_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutiveGatewayFailure_;
      } else {
        return consecutiveGatewayFailureBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status codes)
     * before a consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public Builder setConsecutiveGatewayFailure(com.google.protobuf.UInt32Value value) {
      if (consecutiveGatewayFailureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        consecutiveGatewayFailure_ = value;
        onChanged();
      } else {
        consecutiveGatewayFailureBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status codes)
     * before a consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public Builder setConsecutiveGatewayFailure(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (consecutiveGatewayFailureBuilder_ == null) {
        consecutiveGatewayFailure_ = builderForValue.build();
        onChanged();
      } else {
        consecutiveGatewayFailureBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status codes)
     * before a consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public Builder mergeConsecutiveGatewayFailure(com.google.protobuf.UInt32Value value) {
      if (consecutiveGatewayFailureBuilder_ == null) {
        if (consecutiveGatewayFailure_ != null) {
          consecutiveGatewayFailure_ =
            com.google.protobuf.UInt32Value.newBuilder(consecutiveGatewayFailure_).mergeFrom(value).buildPartial();
        } else {
          consecutiveGatewayFailure_ = value;
        }
        onChanged();
      } else {
        consecutiveGatewayFailureBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status codes)
     * before a consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public Builder clearConsecutiveGatewayFailure() {
      if (consecutiveGatewayFailureBuilder_ == null) {
        consecutiveGatewayFailure_ = null;
        onChanged();
      } else {
        consecutiveGatewayFailure_ = null;
        consecutiveGatewayFailureBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status codes)
     * before a consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getConsecutiveGatewayFailureBuilder() {
      
      onChanged();
      return getConsecutiveGatewayFailureFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status codes)
     * before a consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getConsecutiveGatewayFailureOrBuilder() {
      if (consecutiveGatewayFailureBuilder_ != null) {
        return consecutiveGatewayFailureBuilder_.getMessageOrBuilder();
      } else {
        return consecutiveGatewayFailure_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : consecutiveGatewayFailure_;
      }
    }
    /**
     * <pre>
     * The number of consecutive gateway failures (502, 503, 504 status codes)
     * before a consecutive gateway failure ejection occurs. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_gateway_failure = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getConsecutiveGatewayFailureFieldBuilder() {
      if (consecutiveGatewayFailureBuilder_ == null) {
        consecutiveGatewayFailureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getConsecutiveGatewayFailure(),
                getParentForChildren(),
                isClean());
        consecutiveGatewayFailure_ = null;
      }
      return consecutiveGatewayFailureBuilder_;
    }

    private com.google.protobuf.UInt32Value enforcingConsecutiveGatewayFailure_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> enforcingConsecutiveGatewayFailureBuilder_;
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     * @return Whether the enforcingConsecutiveGatewayFailure field is set.
     */
    public boolean hasEnforcingConsecutiveGatewayFailure() {
      return enforcingConsecutiveGatewayFailureBuilder_ != null || enforcingConsecutiveGatewayFailure_ != null;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     * @return The enforcingConsecutiveGatewayFailure.
     */
    public com.google.protobuf.UInt32Value getEnforcingConsecutiveGatewayFailure() {
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        return enforcingConsecutiveGatewayFailure_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutiveGatewayFailure_;
      } else {
        return enforcingConsecutiveGatewayFailureBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingConsecutiveGatewayFailure(com.google.protobuf.UInt32Value value) {
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        enforcingConsecutiveGatewayFailure_ = value;
        onChanged();
      } else {
        enforcingConsecutiveGatewayFailureBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingConsecutiveGatewayFailure(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        enforcingConsecutiveGatewayFailure_ = builderForValue.build();
        onChanged();
      } else {
        enforcingConsecutiveGatewayFailureBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeEnforcingConsecutiveGatewayFailure(com.google.protobuf.UInt32Value value) {
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        if (enforcingConsecutiveGatewayFailure_ != null) {
          enforcingConsecutiveGatewayFailure_ =
            com.google.protobuf.UInt32Value.newBuilder(enforcingConsecutiveGatewayFailure_).mergeFrom(value).buildPartial();
        } else {
          enforcingConsecutiveGatewayFailure_ = value;
        }
        onChanged();
      } else {
        enforcingConsecutiveGatewayFailureBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public Builder clearEnforcingConsecutiveGatewayFailure() {
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        enforcingConsecutiveGatewayFailure_ = null;
        onChanged();
      } else {
        enforcingConsecutiveGatewayFailure_ = null;
        enforcingConsecutiveGatewayFailureBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getEnforcingConsecutiveGatewayFailureBuilder() {
      
      onChanged();
      return getEnforcingConsecutiveGatewayFailureFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getEnforcingConsecutiveGatewayFailureOrBuilder() {
      if (enforcingConsecutiveGatewayFailureBuilder_ != null) {
        return enforcingConsecutiveGatewayFailureBuilder_.getMessageOrBuilder();
      } else {
        return enforcingConsecutiveGatewayFailure_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutiveGatewayFailure_;
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive gateway failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_gateway_failure = 11 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getEnforcingConsecutiveGatewayFailureFieldBuilder() {
      if (enforcingConsecutiveGatewayFailureBuilder_ == null) {
        enforcingConsecutiveGatewayFailureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getEnforcingConsecutiveGatewayFailure(),
                getParentForChildren(),
                isClean());
        enforcingConsecutiveGatewayFailure_ = null;
      }
      return enforcingConsecutiveGatewayFailureBuilder_;
    }

    private boolean splitExternalLocalOriginErrors_ ;
    /**
     * <pre>
     * Determines whether to distinguish local origin failures from external errors. If set to true
     * the following configuration parameters are taken into account:
     * :ref:`consecutive_local_origin_failure&lt;envoy_api_field_config.cluster.v3.OutlierDetection.consecutive_local_origin_failure&gt;`,
     * :ref:`enforcing_consecutive_local_origin_failure&lt;envoy_api_field_config.cluster.v3.OutlierDetection.enforcing_consecutive_local_origin_failure&gt;`
     * and
     * :ref:`enforcing_local_origin_success_rate&lt;envoy_api_field_config.cluster.v3.OutlierDetection.enforcing_local_origin_success_rate&gt;`.
     * Defaults to false.
     * </pre>
     *
     * <code>bool split_external_local_origin_errors = 12;</code>
     * @return The splitExternalLocalOriginErrors.
     */
    @java.lang.Override
    public boolean getSplitExternalLocalOriginErrors() {
      return splitExternalLocalOriginErrors_;
    }
    /**
     * <pre>
     * Determines whether to distinguish local origin failures from external errors. If set to true
     * the following configuration parameters are taken into account:
     * :ref:`consecutive_local_origin_failure&lt;envoy_api_field_config.cluster.v3.OutlierDetection.consecutive_local_origin_failure&gt;`,
     * :ref:`enforcing_consecutive_local_origin_failure&lt;envoy_api_field_config.cluster.v3.OutlierDetection.enforcing_consecutive_local_origin_failure&gt;`
     * and
     * :ref:`enforcing_local_origin_success_rate&lt;envoy_api_field_config.cluster.v3.OutlierDetection.enforcing_local_origin_success_rate&gt;`.
     * Defaults to false.
     * </pre>
     *
     * <code>bool split_external_local_origin_errors = 12;</code>
     * @param value The splitExternalLocalOriginErrors to set.
     * @return This builder for chaining.
     */
    public Builder setSplitExternalLocalOriginErrors(boolean value) {
      
      splitExternalLocalOriginErrors_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines whether to distinguish local origin failures from external errors. If set to true
     * the following configuration parameters are taken into account:
     * :ref:`consecutive_local_origin_failure&lt;envoy_api_field_config.cluster.v3.OutlierDetection.consecutive_local_origin_failure&gt;`,
     * :ref:`enforcing_consecutive_local_origin_failure&lt;envoy_api_field_config.cluster.v3.OutlierDetection.enforcing_consecutive_local_origin_failure&gt;`
     * and
     * :ref:`enforcing_local_origin_success_rate&lt;envoy_api_field_config.cluster.v3.OutlierDetection.enforcing_local_origin_success_rate&gt;`.
     * Defaults to false.
     * </pre>
     *
     * <code>bool split_external_local_origin_errors = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearSplitExternalLocalOriginErrors() {
      
      splitExternalLocalOriginErrors_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.UInt32Value consecutiveLocalOriginFailure_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> consecutiveLocalOriginFailureBuilder_;
    /**
     * <pre>
     * The number of consecutive locally originated failures before ejection
     * occurs. Defaults to 5. Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_local_origin_failure = 13;</code>
     * @return Whether the consecutiveLocalOriginFailure field is set.
     */
    public boolean hasConsecutiveLocalOriginFailure() {
      return consecutiveLocalOriginFailureBuilder_ != null || consecutiveLocalOriginFailure_ != null;
    }
    /**
     * <pre>
     * The number of consecutive locally originated failures before ejection
     * occurs. Defaults to 5. Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_local_origin_failure = 13;</code>
     * @return The consecutiveLocalOriginFailure.
     */
    public com.google.protobuf.UInt32Value getConsecutiveLocalOriginFailure() {
      if (consecutiveLocalOriginFailureBuilder_ == null) {
        return consecutiveLocalOriginFailure_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : consecutiveLocalOriginFailure_;
      } else {
        return consecutiveLocalOriginFailureBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The number of consecutive locally originated failures before ejection
     * occurs. Defaults to 5. Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_local_origin_failure = 13;</code>
     */
    public Builder setConsecutiveLocalOriginFailure(com.google.protobuf.UInt32Value value) {
      if (consecutiveLocalOriginFailureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        consecutiveLocalOriginFailure_ = value;
        onChanged();
      } else {
        consecutiveLocalOriginFailureBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive locally originated failures before ejection
     * occurs. Defaults to 5. Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_local_origin_failure = 13;</code>
     */
    public Builder setConsecutiveLocalOriginFailure(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (consecutiveLocalOriginFailureBuilder_ == null) {
        consecutiveLocalOriginFailure_ = builderForValue.build();
        onChanged();
      } else {
        consecutiveLocalOriginFailureBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive locally originated failures before ejection
     * occurs. Defaults to 5. Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_local_origin_failure = 13;</code>
     */
    public Builder mergeConsecutiveLocalOriginFailure(com.google.protobuf.UInt32Value value) {
      if (consecutiveLocalOriginFailureBuilder_ == null) {
        if (consecutiveLocalOriginFailure_ != null) {
          consecutiveLocalOriginFailure_ =
            com.google.protobuf.UInt32Value.newBuilder(consecutiveLocalOriginFailure_).mergeFrom(value).buildPartial();
        } else {
          consecutiveLocalOriginFailure_ = value;
        }
        onChanged();
      } else {
        consecutiveLocalOriginFailureBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive locally originated failures before ejection
     * occurs. Defaults to 5. Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_local_origin_failure = 13;</code>
     */
    public Builder clearConsecutiveLocalOriginFailure() {
      if (consecutiveLocalOriginFailureBuilder_ == null) {
        consecutiveLocalOriginFailure_ = null;
        onChanged();
      } else {
        consecutiveLocalOriginFailure_ = null;
        consecutiveLocalOriginFailureBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The number of consecutive locally originated failures before ejection
     * occurs. Defaults to 5. Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_local_origin_failure = 13;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getConsecutiveLocalOriginFailureBuilder() {
      
      onChanged();
      return getConsecutiveLocalOriginFailureFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The number of consecutive locally originated failures before ejection
     * occurs. Defaults to 5. Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_local_origin_failure = 13;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getConsecutiveLocalOriginFailureOrBuilder() {
      if (consecutiveLocalOriginFailureBuilder_ != null) {
        return consecutiveLocalOriginFailureBuilder_.getMessageOrBuilder();
      } else {
        return consecutiveLocalOriginFailure_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : consecutiveLocalOriginFailure_;
      }
    }
    /**
     * <pre>
     * The number of consecutive locally originated failures before ejection
     * occurs. Defaults to 5. Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value consecutive_local_origin_failure = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getConsecutiveLocalOriginFailureFieldBuilder() {
      if (consecutiveLocalOriginFailureBuilder_ == null) {
        consecutiveLocalOriginFailureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getConsecutiveLocalOriginFailure(),
                getParentForChildren(),
                isClean());
        consecutiveLocalOriginFailure_ = null;
      }
      return consecutiveLocalOriginFailureBuilder_;
    }

    private com.google.protobuf.UInt32Value enforcingConsecutiveLocalOriginFailure_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> enforcingConsecutiveLocalOriginFailureBuilder_;
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive locally originated failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_local_origin_failure = 14 [(.validate.rules) = { ... }</code>
     * @return Whether the enforcingConsecutiveLocalOriginFailure field is set.
     */
    public boolean hasEnforcingConsecutiveLocalOriginFailure() {
      return enforcingConsecutiveLocalOriginFailureBuilder_ != null || enforcingConsecutiveLocalOriginFailure_ != null;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive locally originated failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_local_origin_failure = 14 [(.validate.rules) = { ... }</code>
     * @return The enforcingConsecutiveLocalOriginFailure.
     */
    public com.google.protobuf.UInt32Value getEnforcingConsecutiveLocalOriginFailure() {
      if (enforcingConsecutiveLocalOriginFailureBuilder_ == null) {
        return enforcingConsecutiveLocalOriginFailure_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutiveLocalOriginFailure_;
      } else {
        return enforcingConsecutiveLocalOriginFailureBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive locally originated failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_local_origin_failure = 14 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingConsecutiveLocalOriginFailure(com.google.protobuf.UInt32Value value) {
      if (enforcingConsecutiveLocalOriginFailureBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        enforcingConsecutiveLocalOriginFailure_ = value;
        onChanged();
      } else {
        enforcingConsecutiveLocalOriginFailureBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive locally originated failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_local_origin_failure = 14 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingConsecutiveLocalOriginFailure(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (enforcingConsecutiveLocalOriginFailureBuilder_ == null) {
        enforcingConsecutiveLocalOriginFailure_ = builderForValue.build();
        onChanged();
      } else {
        enforcingConsecutiveLocalOriginFailureBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive locally originated failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_local_origin_failure = 14 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeEnforcingConsecutiveLocalOriginFailure(com.google.protobuf.UInt32Value value) {
      if (enforcingConsecutiveLocalOriginFailureBuilder_ == null) {
        if (enforcingConsecutiveLocalOriginFailure_ != null) {
          enforcingConsecutiveLocalOriginFailure_ =
            com.google.protobuf.UInt32Value.newBuilder(enforcingConsecutiveLocalOriginFailure_).mergeFrom(value).buildPartial();
        } else {
          enforcingConsecutiveLocalOriginFailure_ = value;
        }
        onChanged();
      } else {
        enforcingConsecutiveLocalOriginFailureBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive locally originated failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_local_origin_failure = 14 [(.validate.rules) = { ... }</code>
     */
    public Builder clearEnforcingConsecutiveLocalOriginFailure() {
      if (enforcingConsecutiveLocalOriginFailureBuilder_ == null) {
        enforcingConsecutiveLocalOriginFailure_ = null;
        onChanged();
      } else {
        enforcingConsecutiveLocalOriginFailure_ = null;
        enforcingConsecutiveLocalOriginFailureBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive locally originated failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_local_origin_failure = 14 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getEnforcingConsecutiveLocalOriginFailureBuilder() {
      
      onChanged();
      return getEnforcingConsecutiveLocalOriginFailureFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive locally originated failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_local_origin_failure = 14 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getEnforcingConsecutiveLocalOriginFailureOrBuilder() {
      if (enforcingConsecutiveLocalOriginFailureBuilder_ != null) {
        return enforcingConsecutiveLocalOriginFailureBuilder_.getMessageOrBuilder();
      } else {
        return enforcingConsecutiveLocalOriginFailure_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingConsecutiveLocalOriginFailure_;
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through consecutive locally originated failures. This setting can be
     * used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_consecutive_local_origin_failure = 14 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getEnforcingConsecutiveLocalOriginFailureFieldBuilder() {
      if (enforcingConsecutiveLocalOriginFailureBuilder_ == null) {
        enforcingConsecutiveLocalOriginFailureBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getEnforcingConsecutiveLocalOriginFailure(),
                getParentForChildren(),
                isClean());
        enforcingConsecutiveLocalOriginFailure_ = null;
      }
      return enforcingConsecutiveLocalOriginFailureBuilder_;
    }

    private com.google.protobuf.UInt32Value enforcingLocalOriginSuccessRate_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> enforcingLocalOriginSuccessRateBuilder_;
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics for locally originated errors.
     * This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_local_origin_success_rate = 15 [(.validate.rules) = { ... }</code>
     * @return Whether the enforcingLocalOriginSuccessRate field is set.
     */
    public boolean hasEnforcingLocalOriginSuccessRate() {
      return enforcingLocalOriginSuccessRateBuilder_ != null || enforcingLocalOriginSuccessRate_ != null;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics for locally originated errors.
     * This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_local_origin_success_rate = 15 [(.validate.rules) = { ... }</code>
     * @return The enforcingLocalOriginSuccessRate.
     */
    public com.google.protobuf.UInt32Value getEnforcingLocalOriginSuccessRate() {
      if (enforcingLocalOriginSuccessRateBuilder_ == null) {
        return enforcingLocalOriginSuccessRate_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingLocalOriginSuccessRate_;
      } else {
        return enforcingLocalOriginSuccessRateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics for locally originated errors.
     * This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_local_origin_success_rate = 15 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingLocalOriginSuccessRate(com.google.protobuf.UInt32Value value) {
      if (enforcingLocalOriginSuccessRateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        enforcingLocalOriginSuccessRate_ = value;
        onChanged();
      } else {
        enforcingLocalOriginSuccessRateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics for locally originated errors.
     * This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_local_origin_success_rate = 15 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingLocalOriginSuccessRate(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (enforcingLocalOriginSuccessRateBuilder_ == null) {
        enforcingLocalOriginSuccessRate_ = builderForValue.build();
        onChanged();
      } else {
        enforcingLocalOriginSuccessRateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics for locally originated errors.
     * This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_local_origin_success_rate = 15 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeEnforcingLocalOriginSuccessRate(com.google.protobuf.UInt32Value value) {
      if (enforcingLocalOriginSuccessRateBuilder_ == null) {
        if (enforcingLocalOriginSuccessRate_ != null) {
          enforcingLocalOriginSuccessRate_ =
            com.google.protobuf.UInt32Value.newBuilder(enforcingLocalOriginSuccessRate_).mergeFrom(value).buildPartial();
        } else {
          enforcingLocalOriginSuccessRate_ = value;
        }
        onChanged();
      } else {
        enforcingLocalOriginSuccessRateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics for locally originated errors.
     * This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_local_origin_success_rate = 15 [(.validate.rules) = { ... }</code>
     */
    public Builder clearEnforcingLocalOriginSuccessRate() {
      if (enforcingLocalOriginSuccessRateBuilder_ == null) {
        enforcingLocalOriginSuccessRate_ = null;
        onChanged();
      } else {
        enforcingLocalOriginSuccessRate_ = null;
        enforcingLocalOriginSuccessRateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics for locally originated errors.
     * This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_local_origin_success_rate = 15 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getEnforcingLocalOriginSuccessRateBuilder() {
      
      onChanged();
      return getEnforcingLocalOriginSuccessRateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics for locally originated errors.
     * This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_local_origin_success_rate = 15 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getEnforcingLocalOriginSuccessRateOrBuilder() {
      if (enforcingLocalOriginSuccessRateBuilder_ != null) {
        return enforcingLocalOriginSuccessRateBuilder_.getMessageOrBuilder();
      } else {
        return enforcingLocalOriginSuccessRate_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingLocalOriginSuccessRate_;
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status
     * is detected through success rate statistics for locally originated errors.
     * This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.
     * Parameter takes effect only when
     * :ref:`split_external_local_origin_errors&lt;envoy_api_field_config.cluster.v3.OutlierDetection.split_external_local_origin_errors&gt;`
     * is set to true.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_local_origin_success_rate = 15 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getEnforcingLocalOriginSuccessRateFieldBuilder() {
      if (enforcingLocalOriginSuccessRateBuilder_ == null) {
        enforcingLocalOriginSuccessRateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getEnforcingLocalOriginSuccessRate(),
                getParentForChildren(),
                isClean());
        enforcingLocalOriginSuccessRate_ = null;
      }
      return enforcingLocalOriginSuccessRateBuilder_;
    }

    private com.google.protobuf.UInt32Value failurePercentageThreshold_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> failurePercentageThresholdBuilder_;
    /**
     * <pre>
     * The failure percentage to use when determining failure percentage-based outlier detection. If
     * the failure percentage of a given host is greater than or equal to this value, it will be
     * ejected. Defaults to 85.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_threshold = 16 [(.validate.rules) = { ... }</code>
     * @return Whether the failurePercentageThreshold field is set.
     */
    public boolean hasFailurePercentageThreshold() {
      return failurePercentageThresholdBuilder_ != null || failurePercentageThreshold_ != null;
    }
    /**
     * <pre>
     * The failure percentage to use when determining failure percentage-based outlier detection. If
     * the failure percentage of a given host is greater than or equal to this value, it will be
     * ejected. Defaults to 85.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_threshold = 16 [(.validate.rules) = { ... }</code>
     * @return The failurePercentageThreshold.
     */
    public com.google.protobuf.UInt32Value getFailurePercentageThreshold() {
      if (failurePercentageThresholdBuilder_ == null) {
        return failurePercentageThreshold_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : failurePercentageThreshold_;
      } else {
        return failurePercentageThresholdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The failure percentage to use when determining failure percentage-based outlier detection. If
     * the failure percentage of a given host is greater than or equal to this value, it will be
     * ejected. Defaults to 85.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_threshold = 16 [(.validate.rules) = { ... }</code>
     */
    public Builder setFailurePercentageThreshold(com.google.protobuf.UInt32Value value) {
      if (failurePercentageThresholdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        failurePercentageThreshold_ = value;
        onChanged();
      } else {
        failurePercentageThresholdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The failure percentage to use when determining failure percentage-based outlier detection. If
     * the failure percentage of a given host is greater than or equal to this value, it will be
     * ejected. Defaults to 85.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_threshold = 16 [(.validate.rules) = { ... }</code>
     */
    public Builder setFailurePercentageThreshold(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (failurePercentageThresholdBuilder_ == null) {
        failurePercentageThreshold_ = builderForValue.build();
        onChanged();
      } else {
        failurePercentageThresholdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The failure percentage to use when determining failure percentage-based outlier detection. If
     * the failure percentage of a given host is greater than or equal to this value, it will be
     * ejected. Defaults to 85.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_threshold = 16 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeFailurePercentageThreshold(com.google.protobuf.UInt32Value value) {
      if (failurePercentageThresholdBuilder_ == null) {
        if (failurePercentageThreshold_ != null) {
          failurePercentageThreshold_ =
            com.google.protobuf.UInt32Value.newBuilder(failurePercentageThreshold_).mergeFrom(value).buildPartial();
        } else {
          failurePercentageThreshold_ = value;
        }
        onChanged();
      } else {
        failurePercentageThresholdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The failure percentage to use when determining failure percentage-based outlier detection. If
     * the failure percentage of a given host is greater than or equal to this value, it will be
     * ejected. Defaults to 85.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_threshold = 16 [(.validate.rules) = { ... }</code>
     */
    public Builder clearFailurePercentageThreshold() {
      if (failurePercentageThresholdBuilder_ == null) {
        failurePercentageThreshold_ = null;
        onChanged();
      } else {
        failurePercentageThreshold_ = null;
        failurePercentageThresholdBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The failure percentage to use when determining failure percentage-based outlier detection. If
     * the failure percentage of a given host is greater than or equal to this value, it will be
     * ejected. Defaults to 85.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_threshold = 16 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getFailurePercentageThresholdBuilder() {
      
      onChanged();
      return getFailurePercentageThresholdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The failure percentage to use when determining failure percentage-based outlier detection. If
     * the failure percentage of a given host is greater than or equal to this value, it will be
     * ejected. Defaults to 85.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_threshold = 16 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getFailurePercentageThresholdOrBuilder() {
      if (failurePercentageThresholdBuilder_ != null) {
        return failurePercentageThresholdBuilder_.getMessageOrBuilder();
      } else {
        return failurePercentageThreshold_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : failurePercentageThreshold_;
      }
    }
    /**
     * <pre>
     * The failure percentage to use when determining failure percentage-based outlier detection. If
     * the failure percentage of a given host is greater than or equal to this value, it will be
     * ejected. Defaults to 85.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_threshold = 16 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getFailurePercentageThresholdFieldBuilder() {
      if (failurePercentageThresholdBuilder_ == null) {
        failurePercentageThresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getFailurePercentageThreshold(),
                getParentForChildren(),
                isClean());
        failurePercentageThreshold_ = null;
      }
      return failurePercentageThresholdBuilder_;
    }

    private com.google.protobuf.UInt32Value enforcingFailurePercentage_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> enforcingFailurePercentageBuilder_;
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * failure percentage statistics. This setting can be used to disable ejection or to ramp it up
     * slowly. Defaults to 0.
     * [#next-major-version: setting this without setting failure_percentage_threshold should be
     * invalid in v4.]
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage = 17 [(.validate.rules) = { ... }</code>
     * @return Whether the enforcingFailurePercentage field is set.
     */
    public boolean hasEnforcingFailurePercentage() {
      return enforcingFailurePercentageBuilder_ != null || enforcingFailurePercentage_ != null;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * failure percentage statistics. This setting can be used to disable ejection or to ramp it up
     * slowly. Defaults to 0.
     * [#next-major-version: setting this without setting failure_percentage_threshold should be
     * invalid in v4.]
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage = 17 [(.validate.rules) = { ... }</code>
     * @return The enforcingFailurePercentage.
     */
    public com.google.protobuf.UInt32Value getEnforcingFailurePercentage() {
      if (enforcingFailurePercentageBuilder_ == null) {
        return enforcingFailurePercentage_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingFailurePercentage_;
      } else {
        return enforcingFailurePercentageBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * failure percentage statistics. This setting can be used to disable ejection or to ramp it up
     * slowly. Defaults to 0.
     * [#next-major-version: setting this without setting failure_percentage_threshold should be
     * invalid in v4.]
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage = 17 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingFailurePercentage(com.google.protobuf.UInt32Value value) {
      if (enforcingFailurePercentageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        enforcingFailurePercentage_ = value;
        onChanged();
      } else {
        enforcingFailurePercentageBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * failure percentage statistics. This setting can be used to disable ejection or to ramp it up
     * slowly. Defaults to 0.
     * [#next-major-version: setting this without setting failure_percentage_threshold should be
     * invalid in v4.]
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage = 17 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingFailurePercentage(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (enforcingFailurePercentageBuilder_ == null) {
        enforcingFailurePercentage_ = builderForValue.build();
        onChanged();
      } else {
        enforcingFailurePercentageBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * failure percentage statistics. This setting can be used to disable ejection or to ramp it up
     * slowly. Defaults to 0.
     * [#next-major-version: setting this without setting failure_percentage_threshold should be
     * invalid in v4.]
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage = 17 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeEnforcingFailurePercentage(com.google.protobuf.UInt32Value value) {
      if (enforcingFailurePercentageBuilder_ == null) {
        if (enforcingFailurePercentage_ != null) {
          enforcingFailurePercentage_ =
            com.google.protobuf.UInt32Value.newBuilder(enforcingFailurePercentage_).mergeFrom(value).buildPartial();
        } else {
          enforcingFailurePercentage_ = value;
        }
        onChanged();
      } else {
        enforcingFailurePercentageBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * failure percentage statistics. This setting can be used to disable ejection or to ramp it up
     * slowly. Defaults to 0.
     * [#next-major-version: setting this without setting failure_percentage_threshold should be
     * invalid in v4.]
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage = 17 [(.validate.rules) = { ... }</code>
     */
    public Builder clearEnforcingFailurePercentage() {
      if (enforcingFailurePercentageBuilder_ == null) {
        enforcingFailurePercentage_ = null;
        onChanged();
      } else {
        enforcingFailurePercentage_ = null;
        enforcingFailurePercentageBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * failure percentage statistics. This setting can be used to disable ejection or to ramp it up
     * slowly. Defaults to 0.
     * [#next-major-version: setting this without setting failure_percentage_threshold should be
     * invalid in v4.]
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage = 17 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getEnforcingFailurePercentageBuilder() {
      
      onChanged();
      return getEnforcingFailurePercentageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * failure percentage statistics. This setting can be used to disable ejection or to ramp it up
     * slowly. Defaults to 0.
     * [#next-major-version: setting this without setting failure_percentage_threshold should be
     * invalid in v4.]
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage = 17 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getEnforcingFailurePercentageOrBuilder() {
      if (enforcingFailurePercentageBuilder_ != null) {
        return enforcingFailurePercentageBuilder_.getMessageOrBuilder();
      } else {
        return enforcingFailurePercentage_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingFailurePercentage_;
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * failure percentage statistics. This setting can be used to disable ejection or to ramp it up
     * slowly. Defaults to 0.
     * [#next-major-version: setting this without setting failure_percentage_threshold should be
     * invalid in v4.]
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage = 17 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getEnforcingFailurePercentageFieldBuilder() {
      if (enforcingFailurePercentageBuilder_ == null) {
        enforcingFailurePercentageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getEnforcingFailurePercentage(),
                getParentForChildren(),
                isClean());
        enforcingFailurePercentage_ = null;
      }
      return enforcingFailurePercentageBuilder_;
    }

    private com.google.protobuf.UInt32Value enforcingFailurePercentageLocalOrigin_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> enforcingFailurePercentageLocalOriginBuilder_;
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * local-origin failure percentage statistics. This setting can be used to disable ejection or to
     * ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage_local_origin = 18 [(.validate.rules) = { ... }</code>
     * @return Whether the enforcingFailurePercentageLocalOrigin field is set.
     */
    public boolean hasEnforcingFailurePercentageLocalOrigin() {
      return enforcingFailurePercentageLocalOriginBuilder_ != null || enforcingFailurePercentageLocalOrigin_ != null;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * local-origin failure percentage statistics. This setting can be used to disable ejection or to
     * ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage_local_origin = 18 [(.validate.rules) = { ... }</code>
     * @return The enforcingFailurePercentageLocalOrigin.
     */
    public com.google.protobuf.UInt32Value getEnforcingFailurePercentageLocalOrigin() {
      if (enforcingFailurePercentageLocalOriginBuilder_ == null) {
        return enforcingFailurePercentageLocalOrigin_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingFailurePercentageLocalOrigin_;
      } else {
        return enforcingFailurePercentageLocalOriginBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * local-origin failure percentage statistics. This setting can be used to disable ejection or to
     * ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage_local_origin = 18 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingFailurePercentageLocalOrigin(com.google.protobuf.UInt32Value value) {
      if (enforcingFailurePercentageLocalOriginBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        enforcingFailurePercentageLocalOrigin_ = value;
        onChanged();
      } else {
        enforcingFailurePercentageLocalOriginBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * local-origin failure percentage statistics. This setting can be used to disable ejection or to
     * ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage_local_origin = 18 [(.validate.rules) = { ... }</code>
     */
    public Builder setEnforcingFailurePercentageLocalOrigin(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (enforcingFailurePercentageLocalOriginBuilder_ == null) {
        enforcingFailurePercentageLocalOrigin_ = builderForValue.build();
        onChanged();
      } else {
        enforcingFailurePercentageLocalOriginBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * local-origin failure percentage statistics. This setting can be used to disable ejection or to
     * ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage_local_origin = 18 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeEnforcingFailurePercentageLocalOrigin(com.google.protobuf.UInt32Value value) {
      if (enforcingFailurePercentageLocalOriginBuilder_ == null) {
        if (enforcingFailurePercentageLocalOrigin_ != null) {
          enforcingFailurePercentageLocalOrigin_ =
            com.google.protobuf.UInt32Value.newBuilder(enforcingFailurePercentageLocalOrigin_).mergeFrom(value).buildPartial();
        } else {
          enforcingFailurePercentageLocalOrigin_ = value;
        }
        onChanged();
      } else {
        enforcingFailurePercentageLocalOriginBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * local-origin failure percentage statistics. This setting can be used to disable ejection or to
     * ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage_local_origin = 18 [(.validate.rules) = { ... }</code>
     */
    public Builder clearEnforcingFailurePercentageLocalOrigin() {
      if (enforcingFailurePercentageLocalOriginBuilder_ == null) {
        enforcingFailurePercentageLocalOrigin_ = null;
        onChanged();
      } else {
        enforcingFailurePercentageLocalOrigin_ = null;
        enforcingFailurePercentageLocalOriginBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * local-origin failure percentage statistics. This setting can be used to disable ejection or to
     * ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage_local_origin = 18 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32Value.Builder getEnforcingFailurePercentageLocalOriginBuilder() {
      
      onChanged();
      return getEnforcingFailurePercentageLocalOriginFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * local-origin failure percentage statistics. This setting can be used to disable ejection or to
     * ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage_local_origin = 18 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getEnforcingFailurePercentageLocalOriginOrBuilder() {
      if (enforcingFailurePercentageLocalOriginBuilder_ != null) {
        return enforcingFailurePercentageLocalOriginBuilder_.getMessageOrBuilder();
      } else {
        return enforcingFailurePercentageLocalOrigin_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : enforcingFailurePercentageLocalOrigin_;
      }
    }
    /**
     * <pre>
     * The % chance that a host will be actually ejected when an outlier status is detected through
     * local-origin failure percentage statistics. This setting can be used to disable ejection or to
     * ramp it up slowly. Defaults to 0.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value enforcing_failure_percentage_local_origin = 18 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getEnforcingFailurePercentageLocalOriginFieldBuilder() {
      if (enforcingFailurePercentageLocalOriginBuilder_ == null) {
        enforcingFailurePercentageLocalOriginBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getEnforcingFailurePercentageLocalOrigin(),
                getParentForChildren(),
                isClean());
        enforcingFailurePercentageLocalOrigin_ = null;
      }
      return enforcingFailurePercentageLocalOriginBuilder_;
    }

    private com.google.protobuf.UInt32Value failurePercentageMinimumHosts_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> failurePercentageMinimumHostsBuilder_;
    /**
     * <pre>
     * The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
     * If the total number of hosts in the cluster is less than this value, failure percentage-based
     * ejection will not be performed. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_minimum_hosts = 19;</code>
     * @return Whether the failurePercentageMinimumHosts field is set.
     */
    public boolean hasFailurePercentageMinimumHosts() {
      return failurePercentageMinimumHostsBuilder_ != null || failurePercentageMinimumHosts_ != null;
    }
    /**
     * <pre>
     * The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
     * If the total number of hosts in the cluster is less than this value, failure percentage-based
     * ejection will not be performed. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_minimum_hosts = 19;</code>
     * @return The failurePercentageMinimumHosts.
     */
    public com.google.protobuf.UInt32Value getFailurePercentageMinimumHosts() {
      if (failurePercentageMinimumHostsBuilder_ == null) {
        return failurePercentageMinimumHosts_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : failurePercentageMinimumHosts_;
      } else {
        return failurePercentageMinimumHostsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
     * If the total number of hosts in the cluster is less than this value, failure percentage-based
     * ejection will not be performed. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_minimum_hosts = 19;</code>
     */
    public Builder setFailurePercentageMinimumHosts(com.google.protobuf.UInt32Value value) {
      if (failurePercentageMinimumHostsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        failurePercentageMinimumHosts_ = value;
        onChanged();
      } else {
        failurePercentageMinimumHostsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
     * If the total number of hosts in the cluster is less than this value, failure percentage-based
     * ejection will not be performed. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_minimum_hosts = 19;</code>
     */
    public Builder setFailurePercentageMinimumHosts(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (failurePercentageMinimumHostsBuilder_ == null) {
        failurePercentageMinimumHosts_ = builderForValue.build();
        onChanged();
      } else {
        failurePercentageMinimumHostsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
     * If the total number of hosts in the cluster is less than this value, failure percentage-based
     * ejection will not be performed. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_minimum_hosts = 19;</code>
     */
    public Builder mergeFailurePercentageMinimumHosts(com.google.protobuf.UInt32Value value) {
      if (failurePercentageMinimumHostsBuilder_ == null) {
        if (failurePercentageMinimumHosts_ != null) {
          failurePercentageMinimumHosts_ =
            com.google.protobuf.UInt32Value.newBuilder(failurePercentageMinimumHosts_).mergeFrom(value).buildPartial();
        } else {
          failurePercentageMinimumHosts_ = value;
        }
        onChanged();
      } else {
        failurePercentageMinimumHostsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
     * If the total number of hosts in the cluster is less than this value, failure percentage-based
     * ejection will not be performed. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_minimum_hosts = 19;</code>
     */
    public Builder clearFailurePercentageMinimumHosts() {
      if (failurePercentageMinimumHostsBuilder_ == null) {
        failurePercentageMinimumHosts_ = null;
        onChanged();
      } else {
        failurePercentageMinimumHosts_ = null;
        failurePercentageMinimumHostsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
     * If the total number of hosts in the cluster is less than this value, failure percentage-based
     * ejection will not be performed. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_minimum_hosts = 19;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getFailurePercentageMinimumHostsBuilder() {
      
      onChanged();
      return getFailurePercentageMinimumHostsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
     * If the total number of hosts in the cluster is less than this value, failure percentage-based
     * ejection will not be performed. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_minimum_hosts = 19;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getFailurePercentageMinimumHostsOrBuilder() {
      if (failurePercentageMinimumHostsBuilder_ != null) {
        return failurePercentageMinimumHostsBuilder_.getMessageOrBuilder();
      } else {
        return failurePercentageMinimumHosts_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : failurePercentageMinimumHosts_;
      }
    }
    /**
     * <pre>
     * The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
     * If the total number of hosts in the cluster is less than this value, failure percentage-based
     * ejection will not be performed. Defaults to 5.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_minimum_hosts = 19;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getFailurePercentageMinimumHostsFieldBuilder() {
      if (failurePercentageMinimumHostsBuilder_ == null) {
        failurePercentageMinimumHostsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getFailurePercentageMinimumHosts(),
                getParentForChildren(),
                isClean());
        failurePercentageMinimumHosts_ = null;
      }
      return failurePercentageMinimumHostsBuilder_;
    }

    private com.google.protobuf.UInt32Value failurePercentageRequestVolume_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> failurePercentageRequestVolumeBuilder_;
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one interval (as defined by the
     * interval duration above) to perform failure percentage-based ejection for this host. If the
     * volume is lower than this setting, failure percentage-based ejection will not be performed for
     * this host. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_request_volume = 20;</code>
     * @return Whether the failurePercentageRequestVolume field is set.
     */
    public boolean hasFailurePercentageRequestVolume() {
      return failurePercentageRequestVolumeBuilder_ != null || failurePercentageRequestVolume_ != null;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one interval (as defined by the
     * interval duration above) to perform failure percentage-based ejection for this host. If the
     * volume is lower than this setting, failure percentage-based ejection will not be performed for
     * this host. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_request_volume = 20;</code>
     * @return The failurePercentageRequestVolume.
     */
    public com.google.protobuf.UInt32Value getFailurePercentageRequestVolume() {
      if (failurePercentageRequestVolumeBuilder_ == null) {
        return failurePercentageRequestVolume_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : failurePercentageRequestVolume_;
      } else {
        return failurePercentageRequestVolumeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one interval (as defined by the
     * interval duration above) to perform failure percentage-based ejection for this host. If the
     * volume is lower than this setting, failure percentage-based ejection will not be performed for
     * this host. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_request_volume = 20;</code>
     */
    public Builder setFailurePercentageRequestVolume(com.google.protobuf.UInt32Value value) {
      if (failurePercentageRequestVolumeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        failurePercentageRequestVolume_ = value;
        onChanged();
      } else {
        failurePercentageRequestVolumeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one interval (as defined by the
     * interval duration above) to perform failure percentage-based ejection for this host. If the
     * volume is lower than this setting, failure percentage-based ejection will not be performed for
     * this host. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_request_volume = 20;</code>
     */
    public Builder setFailurePercentageRequestVolume(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (failurePercentageRequestVolumeBuilder_ == null) {
        failurePercentageRequestVolume_ = builderForValue.build();
        onChanged();
      } else {
        failurePercentageRequestVolumeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one interval (as defined by the
     * interval duration above) to perform failure percentage-based ejection for this host. If the
     * volume is lower than this setting, failure percentage-based ejection will not be performed for
     * this host. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_request_volume = 20;</code>
     */
    public Builder mergeFailurePercentageRequestVolume(com.google.protobuf.UInt32Value value) {
      if (failurePercentageRequestVolumeBuilder_ == null) {
        if (failurePercentageRequestVolume_ != null) {
          failurePercentageRequestVolume_ =
            com.google.protobuf.UInt32Value.newBuilder(failurePercentageRequestVolume_).mergeFrom(value).buildPartial();
        } else {
          failurePercentageRequestVolume_ = value;
        }
        onChanged();
      } else {
        failurePercentageRequestVolumeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one interval (as defined by the
     * interval duration above) to perform failure percentage-based ejection for this host. If the
     * volume is lower than this setting, failure percentage-based ejection will not be performed for
     * this host. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_request_volume = 20;</code>
     */
    public Builder clearFailurePercentageRequestVolume() {
      if (failurePercentageRequestVolumeBuilder_ == null) {
        failurePercentageRequestVolume_ = null;
        onChanged();
      } else {
        failurePercentageRequestVolume_ = null;
        failurePercentageRequestVolumeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one interval (as defined by the
     * interval duration above) to perform failure percentage-based ejection for this host. If the
     * volume is lower than this setting, failure percentage-based ejection will not be performed for
     * this host. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_request_volume = 20;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getFailurePercentageRequestVolumeBuilder() {
      
      onChanged();
      return getFailurePercentageRequestVolumeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one interval (as defined by the
     * interval duration above) to perform failure percentage-based ejection for this host. If the
     * volume is lower than this setting, failure percentage-based ejection will not be performed for
     * this host. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_request_volume = 20;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getFailurePercentageRequestVolumeOrBuilder() {
      if (failurePercentageRequestVolumeBuilder_ != null) {
        return failurePercentageRequestVolumeBuilder_.getMessageOrBuilder();
      } else {
        return failurePercentageRequestVolume_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : failurePercentageRequestVolume_;
      }
    }
    /**
     * <pre>
     * The minimum number of total requests that must be collected in one interval (as defined by the
     * interval duration above) to perform failure percentage-based ejection for this host. If the
     * volume is lower than this setting, failure percentage-based ejection will not be performed for
     * this host. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value failure_percentage_request_volume = 20;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getFailurePercentageRequestVolumeFieldBuilder() {
      if (failurePercentageRequestVolumeBuilder_ == null) {
        failurePercentageRequestVolumeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getFailurePercentageRequestVolume(),
                getParentForChildren(),
                isClean());
        failurePercentageRequestVolume_ = null;
      }
      return failurePercentageRequestVolumeBuilder_;
    }

    private com.google.protobuf.Duration maxEjectionTime_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> maxEjectionTimeBuilder_;
    /**
     * <pre>
     * The maximum time that a host is ejected for. See :ref:`base_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.base_ejection_time&gt;`
     * for more information.
     * Defaults to 300000ms or 300s.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_ejection_time = 21 [(.validate.rules) = { ... }</code>
     * @return Whether the maxEjectionTime field is set.
     */
    public boolean hasMaxEjectionTime() {
      return maxEjectionTimeBuilder_ != null || maxEjectionTime_ != null;
    }
    /**
     * <pre>
     * The maximum time that a host is ejected for. See :ref:`base_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.base_ejection_time&gt;`
     * for more information.
     * Defaults to 300000ms or 300s.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_ejection_time = 21 [(.validate.rules) = { ... }</code>
     * @return The maxEjectionTime.
     */
    public com.google.protobuf.Duration getMaxEjectionTime() {
      if (maxEjectionTimeBuilder_ == null) {
        return maxEjectionTime_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maxEjectionTime_;
      } else {
        return maxEjectionTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The maximum time that a host is ejected for. See :ref:`base_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.base_ejection_time&gt;`
     * for more information.
     * Defaults to 300000ms or 300s.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_ejection_time = 21 [(.validate.rules) = { ... }</code>
     */
    public Builder setMaxEjectionTime(com.google.protobuf.Duration value) {
      if (maxEjectionTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxEjectionTime_ = value;
        onChanged();
      } else {
        maxEjectionTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The maximum time that a host is ejected for. See :ref:`base_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.base_ejection_time&gt;`
     * for more information.
     * Defaults to 300000ms or 300s.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_ejection_time = 21 [(.validate.rules) = { ... }</code>
     */
    public Builder setMaxEjectionTime(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (maxEjectionTimeBuilder_ == null) {
        maxEjectionTime_ = builderForValue.build();
        onChanged();
      } else {
        maxEjectionTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The maximum time that a host is ejected for. See :ref:`base_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.base_ejection_time&gt;`
     * for more information.
     * Defaults to 300000ms or 300s.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_ejection_time = 21 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeMaxEjectionTime(com.google.protobuf.Duration value) {
      if (maxEjectionTimeBuilder_ == null) {
        if (maxEjectionTime_ != null) {
          maxEjectionTime_ =
            com.google.protobuf.Duration.newBuilder(maxEjectionTime_).mergeFrom(value).buildPartial();
        } else {
          maxEjectionTime_ = value;
        }
        onChanged();
      } else {
        maxEjectionTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The maximum time that a host is ejected for. See :ref:`base_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.base_ejection_time&gt;`
     * for more information.
     * Defaults to 300000ms or 300s.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_ejection_time = 21 [(.validate.rules) = { ... }</code>
     */
    public Builder clearMaxEjectionTime() {
      if (maxEjectionTimeBuilder_ == null) {
        maxEjectionTime_ = null;
        onChanged();
      } else {
        maxEjectionTime_ = null;
        maxEjectionTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The maximum time that a host is ejected for. See :ref:`base_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.base_ejection_time&gt;`
     * for more information.
     * Defaults to 300000ms or 300s.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_ejection_time = 21 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.Duration.Builder getMaxEjectionTimeBuilder() {
      
      onChanged();
      return getMaxEjectionTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The maximum time that a host is ejected for. See :ref:`base_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.base_ejection_time&gt;`
     * for more information.
     * Defaults to 300000ms or 300s.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_ejection_time = 21 [(.validate.rules) = { ... }</code>
     */
    public com.google.protobuf.DurationOrBuilder getMaxEjectionTimeOrBuilder() {
      if (maxEjectionTimeBuilder_ != null) {
        return maxEjectionTimeBuilder_.getMessageOrBuilder();
      } else {
        return maxEjectionTime_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : maxEjectionTime_;
      }
    }
    /**
     * <pre>
     * The maximum time that a host is ejected for. See :ref:`base_ejection_time&lt;envoy_api_field_config.cluster.v3.OutlierDetection.base_ejection_time&gt;`
     * for more information.
     * Defaults to 300000ms or 300s.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_ejection_time = 21 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getMaxEjectionTimeFieldBuilder() {
      if (maxEjectionTimeBuilder_ == null) {
        maxEjectionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getMaxEjectionTime(),
                getParentForChildren(),
                isClean());
        maxEjectionTime_ = null;
      }
      return maxEjectionTimeBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.cluster.v3.OutlierDetection)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.cluster.v3.OutlierDetection)
  private static final io.envoyproxy.envoy.config.cluster.v3.OutlierDetection DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.cluster.v3.OutlierDetection();
  }

  public static io.envoyproxy.envoy.config.cluster.v3.OutlierDetection getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OutlierDetection>
      PARSER = new com.google.protobuf.AbstractParser<OutlierDetection>() {
    @java.lang.Override
    public OutlierDetection parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new OutlierDetection(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<OutlierDetection> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OutlierDetection> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.cluster.v3.OutlierDetection getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

