// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/bootstrap/v3/bootstrap.proto

package io.envoyproxy.envoy.config.bootstrap.v3;

public interface AdminOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.bootstrap.v3.Admin)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The path to write the access log for the administration server. If no
   * access log is desired specify ‘/dev/null’. This is only required if
   * :ref:`address &lt;envoy_api_field_config.bootstrap.v3.Admin.address&gt;` is set.
   * </pre>
   *
   * <code>string access_log_path = 1;</code>
   * @return The accessLogPath.
   */
  java.lang.String getAccessLogPath();
  /**
   * <pre>
   * The path to write the access log for the administration server. If no
   * access log is desired specify ‘/dev/null’. This is only required if
   * :ref:`address &lt;envoy_api_field_config.bootstrap.v3.Admin.address&gt;` is set.
   * </pre>
   *
   * <code>string access_log_path = 1;</code>
   * @return The bytes for accessLogPath.
   */
  com.google.protobuf.ByteString
      getAccessLogPathBytes();

  /**
   * <pre>
   * The cpu profiler output path for the administration server. If no profile
   * path is specified, the default is ‘/var/log/envoy/envoy.prof’.
   * </pre>
   *
   * <code>string profile_path = 2;</code>
   * @return The profilePath.
   */
  java.lang.String getProfilePath();
  /**
   * <pre>
   * The cpu profiler output path for the administration server. If no profile
   * path is specified, the default is ‘/var/log/envoy/envoy.prof’.
   * </pre>
   *
   * <code>string profile_path = 2;</code>
   * @return The bytes for profilePath.
   */
  com.google.protobuf.ByteString
      getProfilePathBytes();

  /**
   * <pre>
   * The TCP address that the administration server will listen on.
   * If not specified, Envoy will not start an administration server.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Address address = 3;</code>
   * @return Whether the address field is set.
   */
  boolean hasAddress();
  /**
   * <pre>
   * The TCP address that the administration server will listen on.
   * If not specified, Envoy will not start an administration server.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Address address = 3;</code>
   * @return The address.
   */
  io.envoyproxy.envoy.config.core.v3.Address getAddress();
  /**
   * <pre>
   * The TCP address that the administration server will listen on.
   * If not specified, Envoy will not start an administration server.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Address address = 3;</code>
   */
  io.envoyproxy.envoy.config.core.v3.AddressOrBuilder getAddressOrBuilder();

  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.core.v3.SocketOption> 
      getSocketOptionsList();
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
   */
  io.envoyproxy.envoy.config.core.v3.SocketOption getSocketOptions(int index);
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
   */
  int getSocketOptionsCount();
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.core.v3.SocketOptionOrBuilder> 
      getSocketOptionsOrBuilderList();
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
   */
  io.envoyproxy.envoy.config.core.v3.SocketOptionOrBuilder getSocketOptionsOrBuilder(
      int index);
}
