// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/metrics/v3/metrics_service.proto

package io.envoyproxy.envoy.config.metrics.v3;

public interface MetricsServiceConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.metrics.v3.MetricsServiceConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The upstream gRPC cluster that hosts the metrics service.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the grpcService field is set.
   */
  boolean hasGrpcService();
  /**
   * <pre>
   * The upstream gRPC cluster that hosts the metrics service.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 1 [(.validate.rules) = { ... }</code>
   * @return The grpcService.
   */
  io.envoyproxy.envoy.config.core.v3.GrpcService getGrpcService();
  /**
   * <pre>
   * The upstream gRPC cluster that hosts the metrics service.
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder getGrpcServiceOrBuilder();

  /**
   * <pre>
   * API version for metric service transport protocol. This describes the metric service gRPC
   * endpoint and version of messages used on the wire.
   * </pre>
   *
   * <code>.envoy.config.core.v3.ApiVersion transport_api_version = 3 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for transportApiVersion.
   */
  int getTransportApiVersionValue();
  /**
   * <pre>
   * API version for metric service transport protocol. This describes the metric service gRPC
   * endpoint and version of messages used on the wire.
   * </pre>
   *
   * <code>.envoy.config.core.v3.ApiVersion transport_api_version = 3 [(.validate.rules) = { ... }</code>
   * @return The transportApiVersion.
   */
  io.envoyproxy.envoy.config.core.v3.ApiVersion getTransportApiVersion();

  /**
   * <pre>
   * If true, counters are reported as the delta between flushing intervals. Otherwise, the current
   * counter value is reported. Defaults to false.
   * Eventually (https://github.com/envoyproxy/envoy/issues/10968) if this value is not set, the
   * sink will take updates from the :ref:`MetricsResponse &lt;envoy_api_msg_service.metrics.v3.StreamMetricsResponse&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue report_counters_as_deltas = 2;</code>
   * @return Whether the reportCountersAsDeltas field is set.
   */
  boolean hasReportCountersAsDeltas();
  /**
   * <pre>
   * If true, counters are reported as the delta between flushing intervals. Otherwise, the current
   * counter value is reported. Defaults to false.
   * Eventually (https://github.com/envoyproxy/envoy/issues/10968) if this value is not set, the
   * sink will take updates from the :ref:`MetricsResponse &lt;envoy_api_msg_service.metrics.v3.StreamMetricsResponse&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue report_counters_as_deltas = 2;</code>
   * @return The reportCountersAsDeltas.
   */
  com.google.protobuf.BoolValue getReportCountersAsDeltas();
  /**
   * <pre>
   * If true, counters are reported as the delta between flushing intervals. Otherwise, the current
   * counter value is reported. Defaults to false.
   * Eventually (https://github.com/envoyproxy/envoy/issues/10968) if this value is not set, the
   * sink will take updates from the :ref:`MetricsResponse &lt;envoy_api_msg_service.metrics.v3.StreamMetricsResponse&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue report_counters_as_deltas = 2;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getReportCountersAsDeltasOrBuilder();
}
