// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/metrics/v3/stats.proto

package io.envoyproxy.envoy.config.metrics.v3;

/**
 * <pre>
 * Statistics configuration such as tagging.
 * </pre>
 *
 * Protobuf type {@code envoy.config.metrics.v3.StatsConfig}
 */
public final class StatsConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.metrics.v3.StatsConfig)
    StatsConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StatsConfig.newBuilder() to construct.
  private StatsConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StatsConfig() {
    statsTags_ = java.util.Collections.emptyList();
    histogramBucketSettings_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new StatsConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private StatsConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              statsTags_ = new java.util.ArrayList<io.envoyproxy.envoy.config.metrics.v3.TagSpecifier>();
              mutable_bitField0_ |= 0x00000001;
            }
            statsTags_.add(
                input.readMessage(io.envoyproxy.envoy.config.metrics.v3.TagSpecifier.parser(), extensionRegistry));
            break;
          }
          case 18: {
            com.google.protobuf.BoolValue.Builder subBuilder = null;
            if (useAllDefaultTags_ != null) {
              subBuilder = useAllDefaultTags_.toBuilder();
            }
            useAllDefaultTags_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(useAllDefaultTags_);
              useAllDefaultTags_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.envoyproxy.envoy.config.metrics.v3.StatsMatcher.Builder subBuilder = null;
            if (statsMatcher_ != null) {
              subBuilder = statsMatcher_.toBuilder();
            }
            statsMatcher_ = input.readMessage(io.envoyproxy.envoy.config.metrics.v3.StatsMatcher.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(statsMatcher_);
              statsMatcher_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              histogramBucketSettings_ = new java.util.ArrayList<io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings>();
              mutable_bitField0_ |= 0x00000002;
            }
            histogramBucketSettings_.add(
                input.readMessage(io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        statsTags_ = java.util.Collections.unmodifiableList(statsTags_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        histogramBucketSettings_ = java.util.Collections.unmodifiableList(histogramBucketSettings_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.metrics.v3.StatsProto.internal_static_envoy_config_metrics_v3_StatsConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.metrics.v3.StatsProto.internal_static_envoy_config_metrics_v3_StatsConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.metrics.v3.StatsConfig.class, io.envoyproxy.envoy.config.metrics.v3.StatsConfig.Builder.class);
  }

  public static final int STATS_TAGS_FIELD_NUMBER = 1;
  private java.util.List<io.envoyproxy.envoy.config.metrics.v3.TagSpecifier> statsTags_;
  /**
   * <pre>
   * Each stat name is iteratively processed through these tag specifiers.
   * When a tag is matched, the first capture group is removed from the name so
   * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
   * same portion of the match.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.metrics.v3.TagSpecifier> getStatsTagsList() {
    return statsTags_;
  }
  /**
   * <pre>
   * Each stat name is iteratively processed through these tag specifiers.
   * When a tag is matched, the first capture group is removed from the name so
   * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
   * same portion of the match.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.metrics.v3.TagSpecifierOrBuilder> 
      getStatsTagsOrBuilderList() {
    return statsTags_;
  }
  /**
   * <pre>
   * Each stat name is iteratively processed through these tag specifiers.
   * When a tag is matched, the first capture group is removed from the name so
   * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
   * same portion of the match.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
   */
  @java.lang.Override
  public int getStatsTagsCount() {
    return statsTags_.size();
  }
  /**
   * <pre>
   * Each stat name is iteratively processed through these tag specifiers.
   * When a tag is matched, the first capture group is removed from the name so
   * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
   * same portion of the match.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.metrics.v3.TagSpecifier getStatsTags(int index) {
    return statsTags_.get(index);
  }
  /**
   * <pre>
   * Each stat name is iteratively processed through these tag specifiers.
   * When a tag is matched, the first capture group is removed from the name so
   * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
   * same portion of the match.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.metrics.v3.TagSpecifierOrBuilder getStatsTagsOrBuilder(
      int index) {
    return statsTags_.get(index);
  }

  public static final int USE_ALL_DEFAULT_TAGS_FIELD_NUMBER = 2;
  private com.google.protobuf.BoolValue useAllDefaultTags_;
  /**
   * <pre>
   * Use all default tag regexes specified in Envoy. These can be combined with
   * custom tags specified in :ref:`stats_tags
   * &lt;envoy_api_field_config.metrics.v3.StatsConfig.stats_tags&gt;`. They will be processed before
   * the custom tags.
   * .. note::
   *   If any default tags are specified twice, the config will be considered
   *   invalid.
   * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
   * default tags in Envoy.
   * If not provided, the value is assumed to be true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
   * @return Whether the useAllDefaultTags field is set.
   */
  @java.lang.Override
  public boolean hasUseAllDefaultTags() {
    return useAllDefaultTags_ != null;
  }
  /**
   * <pre>
   * Use all default tag regexes specified in Envoy. These can be combined with
   * custom tags specified in :ref:`stats_tags
   * &lt;envoy_api_field_config.metrics.v3.StatsConfig.stats_tags&gt;`. They will be processed before
   * the custom tags.
   * .. note::
   *   If any default tags are specified twice, the config will be considered
   *   invalid.
   * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
   * default tags in Envoy.
   * If not provided, the value is assumed to be true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
   * @return The useAllDefaultTags.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getUseAllDefaultTags() {
    return useAllDefaultTags_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : useAllDefaultTags_;
  }
  /**
   * <pre>
   * Use all default tag regexes specified in Envoy. These can be combined with
   * custom tags specified in :ref:`stats_tags
   * &lt;envoy_api_field_config.metrics.v3.StatsConfig.stats_tags&gt;`. They will be processed before
   * the custom tags.
   * .. note::
   *   If any default tags are specified twice, the config will be considered
   *   invalid.
   * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
   * default tags in Envoy.
   * If not provided, the value is assumed to be true.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getUseAllDefaultTagsOrBuilder() {
    return getUseAllDefaultTags();
  }

  public static final int STATS_MATCHER_FIELD_NUMBER = 3;
  private io.envoyproxy.envoy.config.metrics.v3.StatsMatcher statsMatcher_;
  /**
   * <pre>
   * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
   * as normal. Preventing the instantiation of certain families of stats can improve memory
   * performance for Envoys running especially large configs.
   * .. warning::
   *   Excluding stats may affect Envoy's behavior in undocumented ways. See
   *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
   *   If any unexpected behavior changes are observed, please open a new issue immediately.
   * </pre>
   *
   * <code>.envoy.config.metrics.v3.StatsMatcher stats_matcher = 3;</code>
   * @return Whether the statsMatcher field is set.
   */
  @java.lang.Override
  public boolean hasStatsMatcher() {
    return statsMatcher_ != null;
  }
  /**
   * <pre>
   * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
   * as normal. Preventing the instantiation of certain families of stats can improve memory
   * performance for Envoys running especially large configs.
   * .. warning::
   *   Excluding stats may affect Envoy's behavior in undocumented ways. See
   *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
   *   If any unexpected behavior changes are observed, please open a new issue immediately.
   * </pre>
   *
   * <code>.envoy.config.metrics.v3.StatsMatcher stats_matcher = 3;</code>
   * @return The statsMatcher.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.metrics.v3.StatsMatcher getStatsMatcher() {
    return statsMatcher_ == null ? io.envoyproxy.envoy.config.metrics.v3.StatsMatcher.getDefaultInstance() : statsMatcher_;
  }
  /**
   * <pre>
   * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
   * as normal. Preventing the instantiation of certain families of stats can improve memory
   * performance for Envoys running especially large configs.
   * .. warning::
   *   Excluding stats may affect Envoy's behavior in undocumented ways. See
   *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
   *   If any unexpected behavior changes are observed, please open a new issue immediately.
   * </pre>
   *
   * <code>.envoy.config.metrics.v3.StatsMatcher stats_matcher = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.metrics.v3.StatsMatcherOrBuilder getStatsMatcherOrBuilder() {
    return getStatsMatcher();
  }

  public static final int HISTOGRAM_BUCKET_SETTINGS_FIELD_NUMBER = 4;
  private java.util.List<io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings> histogramBucketSettings_;
  /**
   * <pre>
   * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
   * match is applied. If no match is found (or if no rules are set), the following default buckets
   * are used:
   *   .. code-block:: json
   *     [
   *       0.5,
   *       1,
   *       5,
   *       10,
   *       25,
   *       50,
   *       100,
   *       250,
   *       500,
   *       1000,
   *       2500,
   *       5000,
   *       10000,
   *       30000,
   *       60000,
   *       300000,
   *       600000,
   *       1800000,
   *       3600000
   *     ]
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings> getHistogramBucketSettingsList() {
    return histogramBucketSettings_;
  }
  /**
   * <pre>
   * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
   * match is applied. If no match is found (or if no rules are set), the following default buckets
   * are used:
   *   .. code-block:: json
   *     [
   *       0.5,
   *       1,
   *       5,
   *       10,
   *       25,
   *       50,
   *       100,
   *       250,
   *       500,
   *       1000,
   *       2500,
   *       5000,
   *       10000,
   *       30000,
   *       60000,
   *       300000,
   *       600000,
   *       1800000,
   *       3600000
   *     ]
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettingsOrBuilder> 
      getHistogramBucketSettingsOrBuilderList() {
    return histogramBucketSettings_;
  }
  /**
   * <pre>
   * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
   * match is applied. If no match is found (or if no rules are set), the following default buckets
   * are used:
   *   .. code-block:: json
   *     [
   *       0.5,
   *       1,
   *       5,
   *       10,
   *       25,
   *       50,
   *       100,
   *       250,
   *       500,
   *       1000,
   *       2500,
   *       5000,
   *       10000,
   *       30000,
   *       60000,
   *       300000,
   *       600000,
   *       1800000,
   *       3600000
   *     ]
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
   */
  @java.lang.Override
  public int getHistogramBucketSettingsCount() {
    return histogramBucketSettings_.size();
  }
  /**
   * <pre>
   * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
   * match is applied. If no match is found (or if no rules are set), the following default buckets
   * are used:
   *   .. code-block:: json
   *     [
   *       0.5,
   *       1,
   *       5,
   *       10,
   *       25,
   *       50,
   *       100,
   *       250,
   *       500,
   *       1000,
   *       2500,
   *       5000,
   *       10000,
   *       30000,
   *       60000,
   *       300000,
   *       600000,
   *       1800000,
   *       3600000
   *     ]
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings getHistogramBucketSettings(int index) {
    return histogramBucketSettings_.get(index);
  }
  /**
   * <pre>
   * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
   * match is applied. If no match is found (or if no rules are set), the following default buckets
   * are used:
   *   .. code-block:: json
   *     [
   *       0.5,
   *       1,
   *       5,
   *       10,
   *       25,
   *       50,
   *       100,
   *       250,
   *       500,
   *       1000,
   *       2500,
   *       5000,
   *       10000,
   *       30000,
   *       60000,
   *       300000,
   *       600000,
   *       1800000,
   *       3600000
   *     ]
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettingsOrBuilder getHistogramBucketSettingsOrBuilder(
      int index) {
    return histogramBucketSettings_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < statsTags_.size(); i++) {
      output.writeMessage(1, statsTags_.get(i));
    }
    if (useAllDefaultTags_ != null) {
      output.writeMessage(2, getUseAllDefaultTags());
    }
    if (statsMatcher_ != null) {
      output.writeMessage(3, getStatsMatcher());
    }
    for (int i = 0; i < histogramBucketSettings_.size(); i++) {
      output.writeMessage(4, histogramBucketSettings_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < statsTags_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, statsTags_.get(i));
    }
    if (useAllDefaultTags_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getUseAllDefaultTags());
    }
    if (statsMatcher_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getStatsMatcher());
    }
    for (int i = 0; i < histogramBucketSettings_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, histogramBucketSettings_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.metrics.v3.StatsConfig)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.metrics.v3.StatsConfig other = (io.envoyproxy.envoy.config.metrics.v3.StatsConfig) obj;

    if (!getStatsTagsList()
        .equals(other.getStatsTagsList())) return false;
    if (hasUseAllDefaultTags() != other.hasUseAllDefaultTags()) return false;
    if (hasUseAllDefaultTags()) {
      if (!getUseAllDefaultTags()
          .equals(other.getUseAllDefaultTags())) return false;
    }
    if (hasStatsMatcher() != other.hasStatsMatcher()) return false;
    if (hasStatsMatcher()) {
      if (!getStatsMatcher()
          .equals(other.getStatsMatcher())) return false;
    }
    if (!getHistogramBucketSettingsList()
        .equals(other.getHistogramBucketSettingsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getStatsTagsCount() > 0) {
      hash = (37 * hash) + STATS_TAGS_FIELD_NUMBER;
      hash = (53 * hash) + getStatsTagsList().hashCode();
    }
    if (hasUseAllDefaultTags()) {
      hash = (37 * hash) + USE_ALL_DEFAULT_TAGS_FIELD_NUMBER;
      hash = (53 * hash) + getUseAllDefaultTags().hashCode();
    }
    if (hasStatsMatcher()) {
      hash = (37 * hash) + STATS_MATCHER_FIELD_NUMBER;
      hash = (53 * hash) + getStatsMatcher().hashCode();
    }
    if (getHistogramBucketSettingsCount() > 0) {
      hash = (37 * hash) + HISTOGRAM_BUCKET_SETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getHistogramBucketSettingsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.metrics.v3.StatsConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.metrics.v3.StatsConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.metrics.v3.StatsConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.metrics.v3.StatsConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.metrics.v3.StatsConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.metrics.v3.StatsConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.metrics.v3.StatsConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.metrics.v3.StatsConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.metrics.v3.StatsConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.metrics.v3.StatsConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.metrics.v3.StatsConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.metrics.v3.StatsConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.metrics.v3.StatsConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Statistics configuration such as tagging.
   * </pre>
   *
   * Protobuf type {@code envoy.config.metrics.v3.StatsConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.metrics.v3.StatsConfig)
      io.envoyproxy.envoy.config.metrics.v3.StatsConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.metrics.v3.StatsProto.internal_static_envoy_config_metrics_v3_StatsConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.metrics.v3.StatsProto.internal_static_envoy_config_metrics_v3_StatsConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.metrics.v3.StatsConfig.class, io.envoyproxy.envoy.config.metrics.v3.StatsConfig.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.metrics.v3.StatsConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getStatsTagsFieldBuilder();
        getHistogramBucketSettingsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (statsTagsBuilder_ == null) {
        statsTags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        statsTagsBuilder_.clear();
      }
      if (useAllDefaultTagsBuilder_ == null) {
        useAllDefaultTags_ = null;
      } else {
        useAllDefaultTags_ = null;
        useAllDefaultTagsBuilder_ = null;
      }
      if (statsMatcherBuilder_ == null) {
        statsMatcher_ = null;
      } else {
        statsMatcher_ = null;
        statsMatcherBuilder_ = null;
      }
      if (histogramBucketSettingsBuilder_ == null) {
        histogramBucketSettings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        histogramBucketSettingsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.metrics.v3.StatsProto.internal_static_envoy_config_metrics_v3_StatsConfig_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.metrics.v3.StatsConfig getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.metrics.v3.StatsConfig.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.metrics.v3.StatsConfig build() {
      io.envoyproxy.envoy.config.metrics.v3.StatsConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.metrics.v3.StatsConfig buildPartial() {
      io.envoyproxy.envoy.config.metrics.v3.StatsConfig result = new io.envoyproxy.envoy.config.metrics.v3.StatsConfig(this);
      int from_bitField0_ = bitField0_;
      if (statsTagsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          statsTags_ = java.util.Collections.unmodifiableList(statsTags_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.statsTags_ = statsTags_;
      } else {
        result.statsTags_ = statsTagsBuilder_.build();
      }
      if (useAllDefaultTagsBuilder_ == null) {
        result.useAllDefaultTags_ = useAllDefaultTags_;
      } else {
        result.useAllDefaultTags_ = useAllDefaultTagsBuilder_.build();
      }
      if (statsMatcherBuilder_ == null) {
        result.statsMatcher_ = statsMatcher_;
      } else {
        result.statsMatcher_ = statsMatcherBuilder_.build();
      }
      if (histogramBucketSettingsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          histogramBucketSettings_ = java.util.Collections.unmodifiableList(histogramBucketSettings_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.histogramBucketSettings_ = histogramBucketSettings_;
      } else {
        result.histogramBucketSettings_ = histogramBucketSettingsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.metrics.v3.StatsConfig) {
        return mergeFrom((io.envoyproxy.envoy.config.metrics.v3.StatsConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.metrics.v3.StatsConfig other) {
      if (other == io.envoyproxy.envoy.config.metrics.v3.StatsConfig.getDefaultInstance()) return this;
      if (statsTagsBuilder_ == null) {
        if (!other.statsTags_.isEmpty()) {
          if (statsTags_.isEmpty()) {
            statsTags_ = other.statsTags_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureStatsTagsIsMutable();
            statsTags_.addAll(other.statsTags_);
          }
          onChanged();
        }
      } else {
        if (!other.statsTags_.isEmpty()) {
          if (statsTagsBuilder_.isEmpty()) {
            statsTagsBuilder_.dispose();
            statsTagsBuilder_ = null;
            statsTags_ = other.statsTags_;
            bitField0_ = (bitField0_ & ~0x00000001);
            statsTagsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getStatsTagsFieldBuilder() : null;
          } else {
            statsTagsBuilder_.addAllMessages(other.statsTags_);
          }
        }
      }
      if (other.hasUseAllDefaultTags()) {
        mergeUseAllDefaultTags(other.getUseAllDefaultTags());
      }
      if (other.hasStatsMatcher()) {
        mergeStatsMatcher(other.getStatsMatcher());
      }
      if (histogramBucketSettingsBuilder_ == null) {
        if (!other.histogramBucketSettings_.isEmpty()) {
          if (histogramBucketSettings_.isEmpty()) {
            histogramBucketSettings_ = other.histogramBucketSettings_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHistogramBucketSettingsIsMutable();
            histogramBucketSettings_.addAll(other.histogramBucketSettings_);
          }
          onChanged();
        }
      } else {
        if (!other.histogramBucketSettings_.isEmpty()) {
          if (histogramBucketSettingsBuilder_.isEmpty()) {
            histogramBucketSettingsBuilder_.dispose();
            histogramBucketSettingsBuilder_ = null;
            histogramBucketSettings_ = other.histogramBucketSettings_;
            bitField0_ = (bitField0_ & ~0x00000002);
            histogramBucketSettingsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHistogramBucketSettingsFieldBuilder() : null;
          } else {
            histogramBucketSettingsBuilder_.addAllMessages(other.histogramBucketSettings_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.config.metrics.v3.StatsConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.config.metrics.v3.StatsConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<io.envoyproxy.envoy.config.metrics.v3.TagSpecifier> statsTags_ =
      java.util.Collections.emptyList();
    private void ensureStatsTagsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        statsTags_ = new java.util.ArrayList<io.envoyproxy.envoy.config.metrics.v3.TagSpecifier>(statsTags_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.metrics.v3.TagSpecifier, io.envoyproxy.envoy.config.metrics.v3.TagSpecifier.Builder, io.envoyproxy.envoy.config.metrics.v3.TagSpecifierOrBuilder> statsTagsBuilder_;

    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.metrics.v3.TagSpecifier> getStatsTagsList() {
      if (statsTagsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(statsTags_);
      } else {
        return statsTagsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public int getStatsTagsCount() {
      if (statsTagsBuilder_ == null) {
        return statsTags_.size();
      } else {
        return statsTagsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public io.envoyproxy.envoy.config.metrics.v3.TagSpecifier getStatsTags(int index) {
      if (statsTagsBuilder_ == null) {
        return statsTags_.get(index);
      } else {
        return statsTagsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public Builder setStatsTags(
        int index, io.envoyproxy.envoy.config.metrics.v3.TagSpecifier value) {
      if (statsTagsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatsTagsIsMutable();
        statsTags_.set(index, value);
        onChanged();
      } else {
        statsTagsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public Builder setStatsTags(
        int index, io.envoyproxy.envoy.config.metrics.v3.TagSpecifier.Builder builderForValue) {
      if (statsTagsBuilder_ == null) {
        ensureStatsTagsIsMutable();
        statsTags_.set(index, builderForValue.build());
        onChanged();
      } else {
        statsTagsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public Builder addStatsTags(io.envoyproxy.envoy.config.metrics.v3.TagSpecifier value) {
      if (statsTagsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatsTagsIsMutable();
        statsTags_.add(value);
        onChanged();
      } else {
        statsTagsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public Builder addStatsTags(
        int index, io.envoyproxy.envoy.config.metrics.v3.TagSpecifier value) {
      if (statsTagsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatsTagsIsMutable();
        statsTags_.add(index, value);
        onChanged();
      } else {
        statsTagsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public Builder addStatsTags(
        io.envoyproxy.envoy.config.metrics.v3.TagSpecifier.Builder builderForValue) {
      if (statsTagsBuilder_ == null) {
        ensureStatsTagsIsMutable();
        statsTags_.add(builderForValue.build());
        onChanged();
      } else {
        statsTagsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public Builder addStatsTags(
        int index, io.envoyproxy.envoy.config.metrics.v3.TagSpecifier.Builder builderForValue) {
      if (statsTagsBuilder_ == null) {
        ensureStatsTagsIsMutable();
        statsTags_.add(index, builderForValue.build());
        onChanged();
      } else {
        statsTagsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public Builder addAllStatsTags(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.metrics.v3.TagSpecifier> values) {
      if (statsTagsBuilder_ == null) {
        ensureStatsTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, statsTags_);
        onChanged();
      } else {
        statsTagsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public Builder clearStatsTags() {
      if (statsTagsBuilder_ == null) {
        statsTags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        statsTagsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public Builder removeStatsTags(int index) {
      if (statsTagsBuilder_ == null) {
        ensureStatsTagsIsMutable();
        statsTags_.remove(index);
        onChanged();
      } else {
        statsTagsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public io.envoyproxy.envoy.config.metrics.v3.TagSpecifier.Builder getStatsTagsBuilder(
        int index) {
      return getStatsTagsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public io.envoyproxy.envoy.config.metrics.v3.TagSpecifierOrBuilder getStatsTagsOrBuilder(
        int index) {
      if (statsTagsBuilder_ == null) {
        return statsTags_.get(index);  } else {
        return statsTagsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.metrics.v3.TagSpecifierOrBuilder> 
         getStatsTagsOrBuilderList() {
      if (statsTagsBuilder_ != null) {
        return statsTagsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(statsTags_);
      }
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public io.envoyproxy.envoy.config.metrics.v3.TagSpecifier.Builder addStatsTagsBuilder() {
      return getStatsTagsFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.metrics.v3.TagSpecifier.getDefaultInstance());
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public io.envoyproxy.envoy.config.metrics.v3.TagSpecifier.Builder addStatsTagsBuilder(
        int index) {
      return getStatsTagsFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.metrics.v3.TagSpecifier.getDefaultInstance());
    }
    /**
     * <pre>
     * Each stat name is iteratively processed through these tag specifiers.
     * When a tag is matched, the first capture group is removed from the name so
     * later :ref:`TagSpecifiers &lt;envoy_api_msg_config.metrics.v3.TagSpecifier&gt;` cannot match that
     * same portion of the match.
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.TagSpecifier stats_tags = 1;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.metrics.v3.TagSpecifier.Builder> 
         getStatsTagsBuilderList() {
      return getStatsTagsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.metrics.v3.TagSpecifier, io.envoyproxy.envoy.config.metrics.v3.TagSpecifier.Builder, io.envoyproxy.envoy.config.metrics.v3.TagSpecifierOrBuilder> 
        getStatsTagsFieldBuilder() {
      if (statsTagsBuilder_ == null) {
        statsTagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.metrics.v3.TagSpecifier, io.envoyproxy.envoy.config.metrics.v3.TagSpecifier.Builder, io.envoyproxy.envoy.config.metrics.v3.TagSpecifierOrBuilder>(
                statsTags_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        statsTags_ = null;
      }
      return statsTagsBuilder_;
    }

    private com.google.protobuf.BoolValue useAllDefaultTags_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> useAllDefaultTagsBuilder_;
    /**
     * <pre>
     * Use all default tag regexes specified in Envoy. These can be combined with
     * custom tags specified in :ref:`stats_tags
     * &lt;envoy_api_field_config.metrics.v3.StatsConfig.stats_tags&gt;`. They will be processed before
     * the custom tags.
     * .. note::
     *   If any default tags are specified twice, the config will be considered
     *   invalid.
     * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
     * default tags in Envoy.
     * If not provided, the value is assumed to be true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
     * @return Whether the useAllDefaultTags field is set.
     */
    public boolean hasUseAllDefaultTags() {
      return useAllDefaultTagsBuilder_ != null || useAllDefaultTags_ != null;
    }
    /**
     * <pre>
     * Use all default tag regexes specified in Envoy. These can be combined with
     * custom tags specified in :ref:`stats_tags
     * &lt;envoy_api_field_config.metrics.v3.StatsConfig.stats_tags&gt;`. They will be processed before
     * the custom tags.
     * .. note::
     *   If any default tags are specified twice, the config will be considered
     *   invalid.
     * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
     * default tags in Envoy.
     * If not provided, the value is assumed to be true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
     * @return The useAllDefaultTags.
     */
    public com.google.protobuf.BoolValue getUseAllDefaultTags() {
      if (useAllDefaultTagsBuilder_ == null) {
        return useAllDefaultTags_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : useAllDefaultTags_;
      } else {
        return useAllDefaultTagsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Use all default tag regexes specified in Envoy. These can be combined with
     * custom tags specified in :ref:`stats_tags
     * &lt;envoy_api_field_config.metrics.v3.StatsConfig.stats_tags&gt;`. They will be processed before
     * the custom tags.
     * .. note::
     *   If any default tags are specified twice, the config will be considered
     *   invalid.
     * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
     * default tags in Envoy.
     * If not provided, the value is assumed to be true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
     */
    public Builder setUseAllDefaultTags(com.google.protobuf.BoolValue value) {
      if (useAllDefaultTagsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        useAllDefaultTags_ = value;
        onChanged();
      } else {
        useAllDefaultTagsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Use all default tag regexes specified in Envoy. These can be combined with
     * custom tags specified in :ref:`stats_tags
     * &lt;envoy_api_field_config.metrics.v3.StatsConfig.stats_tags&gt;`. They will be processed before
     * the custom tags.
     * .. note::
     *   If any default tags are specified twice, the config will be considered
     *   invalid.
     * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
     * default tags in Envoy.
     * If not provided, the value is assumed to be true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
     */
    public Builder setUseAllDefaultTags(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (useAllDefaultTagsBuilder_ == null) {
        useAllDefaultTags_ = builderForValue.build();
        onChanged();
      } else {
        useAllDefaultTagsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Use all default tag regexes specified in Envoy. These can be combined with
     * custom tags specified in :ref:`stats_tags
     * &lt;envoy_api_field_config.metrics.v3.StatsConfig.stats_tags&gt;`. They will be processed before
     * the custom tags.
     * .. note::
     *   If any default tags are specified twice, the config will be considered
     *   invalid.
     * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
     * default tags in Envoy.
     * If not provided, the value is assumed to be true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
     */
    public Builder mergeUseAllDefaultTags(com.google.protobuf.BoolValue value) {
      if (useAllDefaultTagsBuilder_ == null) {
        if (useAllDefaultTags_ != null) {
          useAllDefaultTags_ =
            com.google.protobuf.BoolValue.newBuilder(useAllDefaultTags_).mergeFrom(value).buildPartial();
        } else {
          useAllDefaultTags_ = value;
        }
        onChanged();
      } else {
        useAllDefaultTagsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Use all default tag regexes specified in Envoy. These can be combined with
     * custom tags specified in :ref:`stats_tags
     * &lt;envoy_api_field_config.metrics.v3.StatsConfig.stats_tags&gt;`. They will be processed before
     * the custom tags.
     * .. note::
     *   If any default tags are specified twice, the config will be considered
     *   invalid.
     * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
     * default tags in Envoy.
     * If not provided, the value is assumed to be true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
     */
    public Builder clearUseAllDefaultTags() {
      if (useAllDefaultTagsBuilder_ == null) {
        useAllDefaultTags_ = null;
        onChanged();
      } else {
        useAllDefaultTags_ = null;
        useAllDefaultTagsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Use all default tag regexes specified in Envoy. These can be combined with
     * custom tags specified in :ref:`stats_tags
     * &lt;envoy_api_field_config.metrics.v3.StatsConfig.stats_tags&gt;`. They will be processed before
     * the custom tags.
     * .. note::
     *   If any default tags are specified twice, the config will be considered
     *   invalid.
     * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
     * default tags in Envoy.
     * If not provided, the value is assumed to be true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
     */
    public com.google.protobuf.BoolValue.Builder getUseAllDefaultTagsBuilder() {
      
      onChanged();
      return getUseAllDefaultTagsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Use all default tag regexes specified in Envoy. These can be combined with
     * custom tags specified in :ref:`stats_tags
     * &lt;envoy_api_field_config.metrics.v3.StatsConfig.stats_tags&gt;`. They will be processed before
     * the custom tags.
     * .. note::
     *   If any default tags are specified twice, the config will be considered
     *   invalid.
     * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
     * default tags in Envoy.
     * If not provided, the value is assumed to be true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
     */
    public com.google.protobuf.BoolValueOrBuilder getUseAllDefaultTagsOrBuilder() {
      if (useAllDefaultTagsBuilder_ != null) {
        return useAllDefaultTagsBuilder_.getMessageOrBuilder();
      } else {
        return useAllDefaultTags_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : useAllDefaultTags_;
      }
    }
    /**
     * <pre>
     * Use all default tag regexes specified in Envoy. These can be combined with
     * custom tags specified in :ref:`stats_tags
     * &lt;envoy_api_field_config.metrics.v3.StatsConfig.stats_tags&gt;`. They will be processed before
     * the custom tags.
     * .. note::
     *   If any default tags are specified twice, the config will be considered
     *   invalid.
     * See :repo:`well_known_names.h &lt;source/common/config/well_known_names.h&gt;` for a list of the
     * default tags in Envoy.
     * If not provided, the value is assumed to be true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue use_all_default_tags = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getUseAllDefaultTagsFieldBuilder() {
      if (useAllDefaultTagsBuilder_ == null) {
        useAllDefaultTagsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getUseAllDefaultTags(),
                getParentForChildren(),
                isClean());
        useAllDefaultTags_ = null;
      }
      return useAllDefaultTagsBuilder_;
    }

    private io.envoyproxy.envoy.config.metrics.v3.StatsMatcher statsMatcher_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.metrics.v3.StatsMatcher, io.envoyproxy.envoy.config.metrics.v3.StatsMatcher.Builder, io.envoyproxy.envoy.config.metrics.v3.StatsMatcherOrBuilder> statsMatcherBuilder_;
    /**
     * <pre>
     * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
     * as normal. Preventing the instantiation of certain families of stats can improve memory
     * performance for Envoys running especially large configs.
     * .. warning::
     *   Excluding stats may affect Envoy's behavior in undocumented ways. See
     *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
     *   If any unexpected behavior changes are observed, please open a new issue immediately.
     * </pre>
     *
     * <code>.envoy.config.metrics.v3.StatsMatcher stats_matcher = 3;</code>
     * @return Whether the statsMatcher field is set.
     */
    public boolean hasStatsMatcher() {
      return statsMatcherBuilder_ != null || statsMatcher_ != null;
    }
    /**
     * <pre>
     * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
     * as normal. Preventing the instantiation of certain families of stats can improve memory
     * performance for Envoys running especially large configs.
     * .. warning::
     *   Excluding stats may affect Envoy's behavior in undocumented ways. See
     *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
     *   If any unexpected behavior changes are observed, please open a new issue immediately.
     * </pre>
     *
     * <code>.envoy.config.metrics.v3.StatsMatcher stats_matcher = 3;</code>
     * @return The statsMatcher.
     */
    public io.envoyproxy.envoy.config.metrics.v3.StatsMatcher getStatsMatcher() {
      if (statsMatcherBuilder_ == null) {
        return statsMatcher_ == null ? io.envoyproxy.envoy.config.metrics.v3.StatsMatcher.getDefaultInstance() : statsMatcher_;
      } else {
        return statsMatcherBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
     * as normal. Preventing the instantiation of certain families of stats can improve memory
     * performance for Envoys running especially large configs.
     * .. warning::
     *   Excluding stats may affect Envoy's behavior in undocumented ways. See
     *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
     *   If any unexpected behavior changes are observed, please open a new issue immediately.
     * </pre>
     *
     * <code>.envoy.config.metrics.v3.StatsMatcher stats_matcher = 3;</code>
     */
    public Builder setStatsMatcher(io.envoyproxy.envoy.config.metrics.v3.StatsMatcher value) {
      if (statsMatcherBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        statsMatcher_ = value;
        onChanged();
      } else {
        statsMatcherBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
     * as normal. Preventing the instantiation of certain families of stats can improve memory
     * performance for Envoys running especially large configs.
     * .. warning::
     *   Excluding stats may affect Envoy's behavior in undocumented ways. See
     *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
     *   If any unexpected behavior changes are observed, please open a new issue immediately.
     * </pre>
     *
     * <code>.envoy.config.metrics.v3.StatsMatcher stats_matcher = 3;</code>
     */
    public Builder setStatsMatcher(
        io.envoyproxy.envoy.config.metrics.v3.StatsMatcher.Builder builderForValue) {
      if (statsMatcherBuilder_ == null) {
        statsMatcher_ = builderForValue.build();
        onChanged();
      } else {
        statsMatcherBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
     * as normal. Preventing the instantiation of certain families of stats can improve memory
     * performance for Envoys running especially large configs.
     * .. warning::
     *   Excluding stats may affect Envoy's behavior in undocumented ways. See
     *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
     *   If any unexpected behavior changes are observed, please open a new issue immediately.
     * </pre>
     *
     * <code>.envoy.config.metrics.v3.StatsMatcher stats_matcher = 3;</code>
     */
    public Builder mergeStatsMatcher(io.envoyproxy.envoy.config.metrics.v3.StatsMatcher value) {
      if (statsMatcherBuilder_ == null) {
        if (statsMatcher_ != null) {
          statsMatcher_ =
            io.envoyproxy.envoy.config.metrics.v3.StatsMatcher.newBuilder(statsMatcher_).mergeFrom(value).buildPartial();
        } else {
          statsMatcher_ = value;
        }
        onChanged();
      } else {
        statsMatcherBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
     * as normal. Preventing the instantiation of certain families of stats can improve memory
     * performance for Envoys running especially large configs.
     * .. warning::
     *   Excluding stats may affect Envoy's behavior in undocumented ways. See
     *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
     *   If any unexpected behavior changes are observed, please open a new issue immediately.
     * </pre>
     *
     * <code>.envoy.config.metrics.v3.StatsMatcher stats_matcher = 3;</code>
     */
    public Builder clearStatsMatcher() {
      if (statsMatcherBuilder_ == null) {
        statsMatcher_ = null;
        onChanged();
      } else {
        statsMatcher_ = null;
        statsMatcherBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
     * as normal. Preventing the instantiation of certain families of stats can improve memory
     * performance for Envoys running especially large configs.
     * .. warning::
     *   Excluding stats may affect Envoy's behavior in undocumented ways. See
     *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
     *   If any unexpected behavior changes are observed, please open a new issue immediately.
     * </pre>
     *
     * <code>.envoy.config.metrics.v3.StatsMatcher stats_matcher = 3;</code>
     */
    public io.envoyproxy.envoy.config.metrics.v3.StatsMatcher.Builder getStatsMatcherBuilder() {
      
      onChanged();
      return getStatsMatcherFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
     * as normal. Preventing the instantiation of certain families of stats can improve memory
     * performance for Envoys running especially large configs.
     * .. warning::
     *   Excluding stats may affect Envoy's behavior in undocumented ways. See
     *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
     *   If any unexpected behavior changes are observed, please open a new issue immediately.
     * </pre>
     *
     * <code>.envoy.config.metrics.v3.StatsMatcher stats_matcher = 3;</code>
     */
    public io.envoyproxy.envoy.config.metrics.v3.StatsMatcherOrBuilder getStatsMatcherOrBuilder() {
      if (statsMatcherBuilder_ != null) {
        return statsMatcherBuilder_.getMessageOrBuilder();
      } else {
        return statsMatcher_ == null ?
            io.envoyproxy.envoy.config.metrics.v3.StatsMatcher.getDefaultInstance() : statsMatcher_;
      }
    }
    /**
     * <pre>
     * Inclusion/exclusion matcher for stat name creation. If not provided, all stats are instantiated
     * as normal. Preventing the instantiation of certain families of stats can improve memory
     * performance for Envoys running especially large configs.
     * .. warning::
     *   Excluding stats may affect Envoy's behavior in undocumented ways. See
     *   `issue #8771 &lt;https://github.com/envoyproxy/envoy/issues/8771&gt;`_ for more information.
     *   If any unexpected behavior changes are observed, please open a new issue immediately.
     * </pre>
     *
     * <code>.envoy.config.metrics.v3.StatsMatcher stats_matcher = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.metrics.v3.StatsMatcher, io.envoyproxy.envoy.config.metrics.v3.StatsMatcher.Builder, io.envoyproxy.envoy.config.metrics.v3.StatsMatcherOrBuilder> 
        getStatsMatcherFieldBuilder() {
      if (statsMatcherBuilder_ == null) {
        statsMatcherBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.metrics.v3.StatsMatcher, io.envoyproxy.envoy.config.metrics.v3.StatsMatcher.Builder, io.envoyproxy.envoy.config.metrics.v3.StatsMatcherOrBuilder>(
                getStatsMatcher(),
                getParentForChildren(),
                isClean());
        statsMatcher_ = null;
      }
      return statsMatcherBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings> histogramBucketSettings_ =
      java.util.Collections.emptyList();
    private void ensureHistogramBucketSettingsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        histogramBucketSettings_ = new java.util.ArrayList<io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings>(histogramBucketSettings_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings, io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings.Builder, io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettingsOrBuilder> histogramBucketSettingsBuilder_;

    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings> getHistogramBucketSettingsList() {
      if (histogramBucketSettingsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(histogramBucketSettings_);
      } else {
        return histogramBucketSettingsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public int getHistogramBucketSettingsCount() {
      if (histogramBucketSettingsBuilder_ == null) {
        return histogramBucketSettings_.size();
      } else {
        return histogramBucketSettingsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings getHistogramBucketSettings(int index) {
      if (histogramBucketSettingsBuilder_ == null) {
        return histogramBucketSettings_.get(index);
      } else {
        return histogramBucketSettingsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public Builder setHistogramBucketSettings(
        int index, io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings value) {
      if (histogramBucketSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHistogramBucketSettingsIsMutable();
        histogramBucketSettings_.set(index, value);
        onChanged();
      } else {
        histogramBucketSettingsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public Builder setHistogramBucketSettings(
        int index, io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings.Builder builderForValue) {
      if (histogramBucketSettingsBuilder_ == null) {
        ensureHistogramBucketSettingsIsMutable();
        histogramBucketSettings_.set(index, builderForValue.build());
        onChanged();
      } else {
        histogramBucketSettingsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public Builder addHistogramBucketSettings(io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings value) {
      if (histogramBucketSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHistogramBucketSettingsIsMutable();
        histogramBucketSettings_.add(value);
        onChanged();
      } else {
        histogramBucketSettingsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public Builder addHistogramBucketSettings(
        int index, io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings value) {
      if (histogramBucketSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHistogramBucketSettingsIsMutable();
        histogramBucketSettings_.add(index, value);
        onChanged();
      } else {
        histogramBucketSettingsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public Builder addHistogramBucketSettings(
        io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings.Builder builderForValue) {
      if (histogramBucketSettingsBuilder_ == null) {
        ensureHistogramBucketSettingsIsMutable();
        histogramBucketSettings_.add(builderForValue.build());
        onChanged();
      } else {
        histogramBucketSettingsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public Builder addHistogramBucketSettings(
        int index, io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings.Builder builderForValue) {
      if (histogramBucketSettingsBuilder_ == null) {
        ensureHistogramBucketSettingsIsMutable();
        histogramBucketSettings_.add(index, builderForValue.build());
        onChanged();
      } else {
        histogramBucketSettingsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public Builder addAllHistogramBucketSettings(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings> values) {
      if (histogramBucketSettingsBuilder_ == null) {
        ensureHistogramBucketSettingsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, histogramBucketSettings_);
        onChanged();
      } else {
        histogramBucketSettingsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public Builder clearHistogramBucketSettings() {
      if (histogramBucketSettingsBuilder_ == null) {
        histogramBucketSettings_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        histogramBucketSettingsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public Builder removeHistogramBucketSettings(int index) {
      if (histogramBucketSettingsBuilder_ == null) {
        ensureHistogramBucketSettingsIsMutable();
        histogramBucketSettings_.remove(index);
        onChanged();
      } else {
        histogramBucketSettingsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings.Builder getHistogramBucketSettingsBuilder(
        int index) {
      return getHistogramBucketSettingsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettingsOrBuilder getHistogramBucketSettingsOrBuilder(
        int index) {
      if (histogramBucketSettingsBuilder_ == null) {
        return histogramBucketSettings_.get(index);  } else {
        return histogramBucketSettingsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettingsOrBuilder> 
         getHistogramBucketSettingsOrBuilderList() {
      if (histogramBucketSettingsBuilder_ != null) {
        return histogramBucketSettingsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(histogramBucketSettings_);
      }
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings.Builder addHistogramBucketSettingsBuilder() {
      return getHistogramBucketSettingsFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings.getDefaultInstance());
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings.Builder addHistogramBucketSettingsBuilder(
        int index) {
      return getHistogramBucketSettingsFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings.getDefaultInstance());
    }
    /**
     * <pre>
     * Defines rules for setting the histogram buckets. Rules are evaluated in order, and the first
     * match is applied. If no match is found (or if no rules are set), the following default buckets
     * are used:
     *   .. code-block:: json
     *     [
     *       0.5,
     *       1,
     *       5,
     *       10,
     *       25,
     *       50,
     *       100,
     *       250,
     *       500,
     *       1000,
     *       2500,
     *       5000,
     *       10000,
     *       30000,
     *       60000,
     *       300000,
     *       600000,
     *       1800000,
     *       3600000
     *     ]
     * </pre>
     *
     * <code>repeated .envoy.config.metrics.v3.HistogramBucketSettings histogram_bucket_settings = 4;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings.Builder> 
         getHistogramBucketSettingsBuilderList() {
      return getHistogramBucketSettingsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings, io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings.Builder, io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettingsOrBuilder> 
        getHistogramBucketSettingsFieldBuilder() {
      if (histogramBucketSettingsBuilder_ == null) {
        histogramBucketSettingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings, io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettings.Builder, io.envoyproxy.envoy.config.metrics.v3.HistogramBucketSettingsOrBuilder>(
                histogramBucketSettings_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        histogramBucketSettings_ = null;
      }
      return histogramBucketSettingsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.metrics.v3.StatsConfig)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.metrics.v3.StatsConfig)
  private static final io.envoyproxy.envoy.config.metrics.v3.StatsConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.metrics.v3.StatsConfig();
  }

  public static io.envoyproxy.envoy.config.metrics.v3.StatsConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StatsConfig>
      PARSER = new com.google.protobuf.AbstractParser<StatsConfig>() {
    @java.lang.Override
    public StatsConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new StatsConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<StatsConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StatsConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.metrics.v3.StatsConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

