// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/type/matcher/v3/string.proto

package io.envoyproxy.envoy.type.matcher.v3;

public interface StringMatcherOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.type.matcher.v3.StringMatcher)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The input string must match exactly the string specified here.
   * Examples:
   * * *abc* only matches the value *abc*.
   * </pre>
   *
   * <code>string exact = 1;</code>
   * @return Whether the exact field is set.
   */
  boolean hasExact();
  /**
   * <pre>
   * The input string must match exactly the string specified here.
   * Examples:
   * * *abc* only matches the value *abc*.
   * </pre>
   *
   * <code>string exact = 1;</code>
   * @return The exact.
   */
  java.lang.String getExact();
  /**
   * <pre>
   * The input string must match exactly the string specified here.
   * Examples:
   * * *abc* only matches the value *abc*.
   * </pre>
   *
   * <code>string exact = 1;</code>
   * @return The bytes for exact.
   */
  com.google.protobuf.ByteString
      getExactBytes();

  /**
   * <pre>
   * The input string must have the prefix specified here.
   * Note: empty prefix is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *abc.xyz*
   * </pre>
   *
   * <code>string prefix = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the prefix field is set.
   */
  boolean hasPrefix();
  /**
   * <pre>
   * The input string must have the prefix specified here.
   * Note: empty prefix is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *abc.xyz*
   * </pre>
   *
   * <code>string prefix = 2 [(.validate.rules) = { ... }</code>
   * @return The prefix.
   */
  java.lang.String getPrefix();
  /**
   * <pre>
   * The input string must have the prefix specified here.
   * Note: empty prefix is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *abc.xyz*
   * </pre>
   *
   * <code>string prefix = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for prefix.
   */
  com.google.protobuf.ByteString
      getPrefixBytes();

  /**
   * <pre>
   * The input string must have the suffix specified here.
   * Note: empty prefix is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *xyz.abc*
   * </pre>
   *
   * <code>string suffix = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the suffix field is set.
   */
  boolean hasSuffix();
  /**
   * <pre>
   * The input string must have the suffix specified here.
   * Note: empty prefix is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *xyz.abc*
   * </pre>
   *
   * <code>string suffix = 3 [(.validate.rules) = { ... }</code>
   * @return The suffix.
   */
  java.lang.String getSuffix();
  /**
   * <pre>
   * The input string must have the suffix specified here.
   * Note: empty prefix is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *xyz.abc*
   * </pre>
   *
   * <code>string suffix = 3 [(.validate.rules) = { ... }</code>
   * @return The bytes for suffix.
   */
  com.google.protobuf.ByteString
      getSuffixBytes();

  /**
   * <pre>
   * The input string must match the regular expression specified here.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
   * @return Whether the safeRegex field is set.
   */
  boolean hasSafeRegex();
  /**
   * <pre>
   * The input string must match the regular expression specified here.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
   * @return The safeRegex.
   */
  io.envoyproxy.envoy.type.matcher.v3.RegexMatcher getSafeRegex();
  /**
   * <pre>
   * The input string must match the regular expression specified here.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.RegexMatcher safe_regex = 5 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.type.matcher.v3.RegexMatcherOrBuilder getSafeRegexOrBuilder();

  /**
   * <pre>
   * The input string must have the substring specified here.
   * Note: empty contains match is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *xyz.abc.def*
   * </pre>
   *
   * <code>string contains = 7 [(.validate.rules) = { ... }</code>
   * @return Whether the contains field is set.
   */
  boolean hasContains();
  /**
   * <pre>
   * The input string must have the substring specified here.
   * Note: empty contains match is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *xyz.abc.def*
   * </pre>
   *
   * <code>string contains = 7 [(.validate.rules) = { ... }</code>
   * @return The contains.
   */
  java.lang.String getContains();
  /**
   * <pre>
   * The input string must have the substring specified here.
   * Note: empty contains match is not allowed, please use regex instead.
   * Examples:
   * * *abc* matches the value *xyz.abc.def*
   * </pre>
   *
   * <code>string contains = 7 [(.validate.rules) = { ... }</code>
   * @return The bytes for contains.
   */
  com.google.protobuf.ByteString
      getContainsBytes();

  /**
   * <pre>
   * If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no
   * effect for the safe_regex match.
   * For example, the matcher *data* will match both input string *Data* and *data* if set to true.
   * </pre>
   *
   * <code>bool ignore_case = 6;</code>
   * @return The ignoreCase.
   */
  boolean getIgnoreCase();

  public io.envoyproxy.envoy.type.matcher.v3.StringMatcher.MatchPatternCase getMatchPatternCase();
}
