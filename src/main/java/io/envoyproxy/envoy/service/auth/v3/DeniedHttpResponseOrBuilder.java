// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/service/auth/v3/external_auth.proto

package io.envoyproxy.envoy.service.auth.v3;

public interface DeniedHttpResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.service.auth.v3.DeniedHttpResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * This field allows the authorization service to send a HTTP response status
   * code to the downstream client other than 403 (Forbidden).
   * </pre>
   *
   * <code>.envoy.type.v3.HttpStatus status = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the status field is set.
   */
  boolean hasStatus();
  /**
   * <pre>
   * This field allows the authorization service to send a HTTP response status
   * code to the downstream client other than 403 (Forbidden).
   * </pre>
   *
   * <code>.envoy.type.v3.HttpStatus status = 1 [(.validate.rules) = { ... }</code>
   * @return The status.
   */
  io.envoyproxy.envoy.type.v3.HttpStatus getStatus();
  /**
   * <pre>
   * This field allows the authorization service to send a HTTP response status
   * code to the downstream client other than 403 (Forbidden).
   * </pre>
   *
   * <code>.envoy.type.v3.HttpStatus status = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.type.v3.HttpStatusOrBuilder getStatusOrBuilder();

  /**
   * <pre>
   * This field allows the authorization service to send HTTP response headers
   * to the downstream client. Note that the `append` field in `HeaderValueOption` defaults to
   * false when used in this message.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> 
      getHeadersList();
  /**
   * <pre>
   * This field allows the authorization service to send HTTP response headers
   * to the downstream client. Note that the `append` field in `HeaderValueOption` defaults to
   * false when used in this message.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValueOption getHeaders(int index);
  /**
   * <pre>
   * This field allows the authorization service to send HTTP response headers
   * to the downstream client. Note that the `append` field in `HeaderValueOption` defaults to
   * false when used in this message.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
   */
  int getHeadersCount();
  /**
   * <pre>
   * This field allows the authorization service to send HTTP response headers
   * to the downstream client. Note that the `append` field in `HeaderValueOption` defaults to
   * false when used in this message.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> 
      getHeadersOrBuilderList();
  /**
   * <pre>
   * This field allows the authorization service to send HTTP response headers
   * to the downstream client. Note that the `append` field in `HeaderValueOption` defaults to
   * false when used in this message.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption headers = 2;</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder getHeadersOrBuilder(
      int index);

  /**
   * <pre>
   * This field allows the authorization service to send a response body data
   * to the downstream client.
   * </pre>
   *
   * <code>string body = 3;</code>
   * @return The body.
   */
  java.lang.String getBody();
  /**
   * <pre>
   * This field allows the authorization service to send a response body data
   * to the downstream client.
   * </pre>
   *
   * <code>string body = 3;</code>
   * @return The bytes for body.
   */
  com.google.protobuf.ByteString
      getBodyBytes();
}
