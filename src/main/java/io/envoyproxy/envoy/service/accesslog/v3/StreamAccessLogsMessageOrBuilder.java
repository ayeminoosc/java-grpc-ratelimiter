// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/service/accesslog/v3/als.proto

package io.envoyproxy.envoy.service.accesslog.v3;

public interface StreamAccessLogsMessageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.service.accesslog.v3.StreamAccessLogsMessage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Identifier data that will only be sent in the first message on the stream. This is effectively
   * structured metadata and is a performance optimization.
   * </pre>
   *
   * <code>.envoy.service.accesslog.v3.StreamAccessLogsMessage.Identifier identifier = 1;</code>
   * @return Whether the identifier field is set.
   */
  boolean hasIdentifier();
  /**
   * <pre>
   * Identifier data that will only be sent in the first message on the stream. This is effectively
   * structured metadata and is a performance optimization.
   * </pre>
   *
   * <code>.envoy.service.accesslog.v3.StreamAccessLogsMessage.Identifier identifier = 1;</code>
   * @return The identifier.
   */
  io.envoyproxy.envoy.service.accesslog.v3.StreamAccessLogsMessage.Identifier getIdentifier();
  /**
   * <pre>
   * Identifier data that will only be sent in the first message on the stream. This is effectively
   * structured metadata and is a performance optimization.
   * </pre>
   *
   * <code>.envoy.service.accesslog.v3.StreamAccessLogsMessage.Identifier identifier = 1;</code>
   */
  io.envoyproxy.envoy.service.accesslog.v3.StreamAccessLogsMessage.IdentifierOrBuilder getIdentifierOrBuilder();

  /**
   * <code>.envoy.service.accesslog.v3.StreamAccessLogsMessage.HTTPAccessLogEntries http_logs = 2;</code>
   * @return Whether the httpLogs field is set.
   */
  boolean hasHttpLogs();
  /**
   * <code>.envoy.service.accesslog.v3.StreamAccessLogsMessage.HTTPAccessLogEntries http_logs = 2;</code>
   * @return The httpLogs.
   */
  io.envoyproxy.envoy.service.accesslog.v3.StreamAccessLogsMessage.HTTPAccessLogEntries getHttpLogs();
  /**
   * <code>.envoy.service.accesslog.v3.StreamAccessLogsMessage.HTTPAccessLogEntries http_logs = 2;</code>
   */
  io.envoyproxy.envoy.service.accesslog.v3.StreamAccessLogsMessage.HTTPAccessLogEntriesOrBuilder getHttpLogsOrBuilder();

  /**
   * <code>.envoy.service.accesslog.v3.StreamAccessLogsMessage.TCPAccessLogEntries tcp_logs = 3;</code>
   * @return Whether the tcpLogs field is set.
   */
  boolean hasTcpLogs();
  /**
   * <code>.envoy.service.accesslog.v3.StreamAccessLogsMessage.TCPAccessLogEntries tcp_logs = 3;</code>
   * @return The tcpLogs.
   */
  io.envoyproxy.envoy.service.accesslog.v3.StreamAccessLogsMessage.TCPAccessLogEntries getTcpLogs();
  /**
   * <code>.envoy.service.accesslog.v3.StreamAccessLogsMessage.TCPAccessLogEntries tcp_logs = 3;</code>
   */
  io.envoyproxy.envoy.service.accesslog.v3.StreamAccessLogsMessage.TCPAccessLogEntriesOrBuilder getTcpLogsOrBuilder();

  public io.envoyproxy.envoy.service.accesslog.v3.StreamAccessLogsMessage.LogEntriesCase getLogEntriesCase();
}
