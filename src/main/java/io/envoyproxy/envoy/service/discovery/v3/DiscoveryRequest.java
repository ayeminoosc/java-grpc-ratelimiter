// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/service/discovery/v3/discovery.proto

package io.envoyproxy.envoy.service.discovery.v3;

/**
 * <pre>
 * A DiscoveryRequest requests a set of versioned resources of the same type for
 * a given Envoy node on some API.
 * [#next-free-field: 7]
 * </pre>
 *
 * Protobuf type {@code envoy.service.discovery.v3.DiscoveryRequest}
 */
public final class DiscoveryRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.service.discovery.v3.DiscoveryRequest)
    DiscoveryRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DiscoveryRequest.newBuilder() to construct.
  private DiscoveryRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DiscoveryRequest() {
    versionInfo_ = "";
    resourceNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    typeUrl_ = "";
    responseNonce_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new DiscoveryRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DiscoveryRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            versionInfo_ = s;
            break;
          }
          case 18: {
            io.envoyproxy.envoy.config.core.v3.Node.Builder subBuilder = null;
            if (node_ != null) {
              subBuilder = node_.toBuilder();
            }
            node_ = input.readMessage(io.envoyproxy.envoy.config.core.v3.Node.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(node_);
              node_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              resourceNames_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            resourceNames_.add(s);
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            typeUrl_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            responseNonce_ = s;
            break;
          }
          case 50: {
            com.google.rpc.Status.Builder subBuilder = null;
            if (errorDetail_ != null) {
              subBuilder = errorDetail_.toBuilder();
            }
            errorDetail_ = input.readMessage(com.google.rpc.Status.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(errorDetail_);
              errorDetail_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        resourceNames_ = resourceNames_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.service.discovery.v3.DiscoveryProto.internal_static_envoy_service_discovery_v3_DiscoveryRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.service.discovery.v3.DiscoveryProto.internal_static_envoy_service_discovery_v3_DiscoveryRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest.class, io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest.Builder.class);
  }

  public static final int VERSION_INFO_FIELD_NUMBER = 1;
  private volatile java.lang.Object versionInfo_;
  /**
   * <pre>
   * The version_info provided in the request messages will be the version_info
   * received with the most recent successfully processed response or empty on
   * the first request. It is expected that no new request is sent after a
   * response is received until the Envoy instance is ready to ACK/NACK the new
   * configuration. ACK/NACK takes place by returning the new API config version
   * as applied or the previous API config version respectively. Each type_url
   * (see below) has an independent version associated with it.
   * </pre>
   *
   * <code>string version_info = 1;</code>
   * @return The versionInfo.
   */
  @java.lang.Override
  public java.lang.String getVersionInfo() {
    java.lang.Object ref = versionInfo_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      versionInfo_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The version_info provided in the request messages will be the version_info
   * received with the most recent successfully processed response or empty on
   * the first request. It is expected that no new request is sent after a
   * response is received until the Envoy instance is ready to ACK/NACK the new
   * configuration. ACK/NACK takes place by returning the new API config version
   * as applied or the previous API config version respectively. Each type_url
   * (see below) has an independent version associated with it.
   * </pre>
   *
   * <code>string version_info = 1;</code>
   * @return The bytes for versionInfo.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getVersionInfoBytes() {
    java.lang.Object ref = versionInfo_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      versionInfo_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NODE_FIELD_NUMBER = 2;
  private io.envoyproxy.envoy.config.core.v3.Node node_;
  /**
   * <pre>
   * The node making the request.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Node node = 2;</code>
   * @return Whether the node field is set.
   */
  @java.lang.Override
  public boolean hasNode() {
    return node_ != null;
  }
  /**
   * <pre>
   * The node making the request.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Node node = 2;</code>
   * @return The node.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.Node getNode() {
    return node_ == null ? io.envoyproxy.envoy.config.core.v3.Node.getDefaultInstance() : node_;
  }
  /**
   * <pre>
   * The node making the request.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Node node = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.NodeOrBuilder getNodeOrBuilder() {
    return getNode();
  }

  public static final int RESOURCE_NAMES_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList resourceNames_;
  /**
   * <pre>
   * List of resources to subscribe to, e.g. list of cluster names or a route
   * configuration name. If this is empty, all resources for the API are
   * returned. LDS/CDS may have empty resource_names, which will cause all
   * resources for the Envoy instance to be returned. The LDS and CDS responses
   * will then imply a number of resources that need to be fetched via EDS/RDS,
   * which will be explicitly enumerated in resource_names.
   * </pre>
   *
   * <code>repeated string resource_names = 3;</code>
   * @return A list containing the resourceNames.
   */
  public com.google.protobuf.ProtocolStringList
      getResourceNamesList() {
    return resourceNames_;
  }
  /**
   * <pre>
   * List of resources to subscribe to, e.g. list of cluster names or a route
   * configuration name. If this is empty, all resources for the API are
   * returned. LDS/CDS may have empty resource_names, which will cause all
   * resources for the Envoy instance to be returned. The LDS and CDS responses
   * will then imply a number of resources that need to be fetched via EDS/RDS,
   * which will be explicitly enumerated in resource_names.
   * </pre>
   *
   * <code>repeated string resource_names = 3;</code>
   * @return The count of resourceNames.
   */
  public int getResourceNamesCount() {
    return resourceNames_.size();
  }
  /**
   * <pre>
   * List of resources to subscribe to, e.g. list of cluster names or a route
   * configuration name. If this is empty, all resources for the API are
   * returned. LDS/CDS may have empty resource_names, which will cause all
   * resources for the Envoy instance to be returned. The LDS and CDS responses
   * will then imply a number of resources that need to be fetched via EDS/RDS,
   * which will be explicitly enumerated in resource_names.
   * </pre>
   *
   * <code>repeated string resource_names = 3;</code>
   * @param index The index of the element to return.
   * @return The resourceNames at the given index.
   */
  public java.lang.String getResourceNames(int index) {
    return resourceNames_.get(index);
  }
  /**
   * <pre>
   * List of resources to subscribe to, e.g. list of cluster names or a route
   * configuration name. If this is empty, all resources for the API are
   * returned. LDS/CDS may have empty resource_names, which will cause all
   * resources for the Envoy instance to be returned. The LDS and CDS responses
   * will then imply a number of resources that need to be fetched via EDS/RDS,
   * which will be explicitly enumerated in resource_names.
   * </pre>
   *
   * <code>repeated string resource_names = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the resourceNames at the given index.
   */
  public com.google.protobuf.ByteString
      getResourceNamesBytes(int index) {
    return resourceNames_.getByteString(index);
  }

  public static final int TYPE_URL_FIELD_NUMBER = 4;
  private volatile java.lang.Object typeUrl_;
  /**
   * <pre>
   * Type of the resource that is being requested, e.g.
   * "type.googleapis.com/envoy.api.v2.ClusterLoadAssignment". This is implicit
   * in requests made via singleton xDS APIs such as CDS, LDS, etc. but is
   * required for ADS.
   * </pre>
   *
   * <code>string type_url = 4;</code>
   * @return The typeUrl.
   */
  @java.lang.Override
  public java.lang.String getTypeUrl() {
    java.lang.Object ref = typeUrl_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      typeUrl_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Type of the resource that is being requested, e.g.
   * "type.googleapis.com/envoy.api.v2.ClusterLoadAssignment". This is implicit
   * in requests made via singleton xDS APIs such as CDS, LDS, etc. but is
   * required for ADS.
   * </pre>
   *
   * <code>string type_url = 4;</code>
   * @return The bytes for typeUrl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTypeUrlBytes() {
    java.lang.Object ref = typeUrl_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      typeUrl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int RESPONSE_NONCE_FIELD_NUMBER = 5;
  private volatile java.lang.Object responseNonce_;
  /**
   * <pre>
   * nonce corresponding to DiscoveryResponse being ACK/NACKed. See above
   * discussion on version_info and the DiscoveryResponse nonce comment. This
   * may be empty only if 1) this is a non-persistent-stream xDS such as HTTP,
   * or 2) the client has not yet accepted an update in this xDS stream (unlike
   * delta, where it is populated only for new explicit ACKs).
   * </pre>
   *
   * <code>string response_nonce = 5;</code>
   * @return The responseNonce.
   */
  @java.lang.Override
  public java.lang.String getResponseNonce() {
    java.lang.Object ref = responseNonce_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      responseNonce_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * nonce corresponding to DiscoveryResponse being ACK/NACKed. See above
   * discussion on version_info and the DiscoveryResponse nonce comment. This
   * may be empty only if 1) this is a non-persistent-stream xDS such as HTTP,
   * or 2) the client has not yet accepted an update in this xDS stream (unlike
   * delta, where it is populated only for new explicit ACKs).
   * </pre>
   *
   * <code>string response_nonce = 5;</code>
   * @return The bytes for responseNonce.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getResponseNonceBytes() {
    java.lang.Object ref = responseNonce_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      responseNonce_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ERROR_DETAIL_FIELD_NUMBER = 6;
  private com.google.rpc.Status errorDetail_;
  /**
   * <pre>
   * This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_api_msg_service.discovery.v3.DiscoveryResponse&gt;`
   * failed to update configuration. The *message* field in *error_details* provides the Envoy
   * internal exception related to the failure. It is only intended for consumption during manual
   * debugging, the string provided is not guaranteed to be stable across Envoy versions.
   * </pre>
   *
   * <code>.google.rpc.Status error_detail = 6;</code>
   * @return Whether the errorDetail field is set.
   */
  @java.lang.Override
  public boolean hasErrorDetail() {
    return errorDetail_ != null;
  }
  /**
   * <pre>
   * This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_api_msg_service.discovery.v3.DiscoveryResponse&gt;`
   * failed to update configuration. The *message* field in *error_details* provides the Envoy
   * internal exception related to the failure. It is only intended for consumption during manual
   * debugging, the string provided is not guaranteed to be stable across Envoy versions.
   * </pre>
   *
   * <code>.google.rpc.Status error_detail = 6;</code>
   * @return The errorDetail.
   */
  @java.lang.Override
  public com.google.rpc.Status getErrorDetail() {
    return errorDetail_ == null ? com.google.rpc.Status.getDefaultInstance() : errorDetail_;
  }
  /**
   * <pre>
   * This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_api_msg_service.discovery.v3.DiscoveryResponse&gt;`
   * failed to update configuration. The *message* field in *error_details* provides the Envoy
   * internal exception related to the failure. It is only intended for consumption during manual
   * debugging, the string provided is not guaranteed to be stable across Envoy versions.
   * </pre>
   *
   * <code>.google.rpc.Status error_detail = 6;</code>
   */
  @java.lang.Override
  public com.google.rpc.StatusOrBuilder getErrorDetailOrBuilder() {
    return getErrorDetail();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getVersionInfoBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, versionInfo_);
    }
    if (node_ != null) {
      output.writeMessage(2, getNode());
    }
    for (int i = 0; i < resourceNames_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, resourceNames_.getRaw(i));
    }
    if (!getTypeUrlBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, typeUrl_);
    }
    if (!getResponseNonceBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, responseNonce_);
    }
    if (errorDetail_ != null) {
      output.writeMessage(6, getErrorDetail());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getVersionInfoBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, versionInfo_);
    }
    if (node_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getNode());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < resourceNames_.size(); i++) {
        dataSize += computeStringSizeNoTag(resourceNames_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getResourceNamesList().size();
    }
    if (!getTypeUrlBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, typeUrl_);
    }
    if (!getResponseNonceBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, responseNonce_);
    }
    if (errorDetail_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getErrorDetail());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest other = (io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest) obj;

    if (!getVersionInfo()
        .equals(other.getVersionInfo())) return false;
    if (hasNode() != other.hasNode()) return false;
    if (hasNode()) {
      if (!getNode()
          .equals(other.getNode())) return false;
    }
    if (!getResourceNamesList()
        .equals(other.getResourceNamesList())) return false;
    if (!getTypeUrl()
        .equals(other.getTypeUrl())) return false;
    if (!getResponseNonce()
        .equals(other.getResponseNonce())) return false;
    if (hasErrorDetail() != other.hasErrorDetail()) return false;
    if (hasErrorDetail()) {
      if (!getErrorDetail()
          .equals(other.getErrorDetail())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VERSION_INFO_FIELD_NUMBER;
    hash = (53 * hash) + getVersionInfo().hashCode();
    if (hasNode()) {
      hash = (37 * hash) + NODE_FIELD_NUMBER;
      hash = (53 * hash) + getNode().hashCode();
    }
    if (getResourceNamesCount() > 0) {
      hash = (37 * hash) + RESOURCE_NAMES_FIELD_NUMBER;
      hash = (53 * hash) + getResourceNamesList().hashCode();
    }
    hash = (37 * hash) + TYPE_URL_FIELD_NUMBER;
    hash = (53 * hash) + getTypeUrl().hashCode();
    hash = (37 * hash) + RESPONSE_NONCE_FIELD_NUMBER;
    hash = (53 * hash) + getResponseNonce().hashCode();
    if (hasErrorDetail()) {
      hash = (37 * hash) + ERROR_DETAIL_FIELD_NUMBER;
      hash = (53 * hash) + getErrorDetail().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A DiscoveryRequest requests a set of versioned resources of the same type for
   * a given Envoy node on some API.
   * [#next-free-field: 7]
   * </pre>
   *
   * Protobuf type {@code envoy.service.discovery.v3.DiscoveryRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.service.discovery.v3.DiscoveryRequest)
      io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.service.discovery.v3.DiscoveryProto.internal_static_envoy_service_discovery_v3_DiscoveryRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.service.discovery.v3.DiscoveryProto.internal_static_envoy_service_discovery_v3_DiscoveryRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest.class, io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      versionInfo_ = "";

      if (nodeBuilder_ == null) {
        node_ = null;
      } else {
        node_ = null;
        nodeBuilder_ = null;
      }
      resourceNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      typeUrl_ = "";

      responseNonce_ = "";

      if (errorDetailBuilder_ == null) {
        errorDetail_ = null;
      } else {
        errorDetail_ = null;
        errorDetailBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.service.discovery.v3.DiscoveryProto.internal_static_envoy_service_discovery_v3_DiscoveryRequest_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest getDefaultInstanceForType() {
      return io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest build() {
      io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest buildPartial() {
      io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest result = new io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest(this);
      int from_bitField0_ = bitField0_;
      result.versionInfo_ = versionInfo_;
      if (nodeBuilder_ == null) {
        result.node_ = node_;
      } else {
        result.node_ = nodeBuilder_.build();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        resourceNames_ = resourceNames_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.resourceNames_ = resourceNames_;
      result.typeUrl_ = typeUrl_;
      result.responseNonce_ = responseNonce_;
      if (errorDetailBuilder_ == null) {
        result.errorDetail_ = errorDetail_;
      } else {
        result.errorDetail_ = errorDetailBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest) {
        return mergeFrom((io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest other) {
      if (other == io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest.getDefaultInstance()) return this;
      if (!other.getVersionInfo().isEmpty()) {
        versionInfo_ = other.versionInfo_;
        onChanged();
      }
      if (other.hasNode()) {
        mergeNode(other.getNode());
      }
      if (!other.resourceNames_.isEmpty()) {
        if (resourceNames_.isEmpty()) {
          resourceNames_ = other.resourceNames_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureResourceNamesIsMutable();
          resourceNames_.addAll(other.resourceNames_);
        }
        onChanged();
      }
      if (!other.getTypeUrl().isEmpty()) {
        typeUrl_ = other.typeUrl_;
        onChanged();
      }
      if (!other.getResponseNonce().isEmpty()) {
        responseNonce_ = other.responseNonce_;
        onChanged();
      }
      if (other.hasErrorDetail()) {
        mergeErrorDetail(other.getErrorDetail());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object versionInfo_ = "";
    /**
     * <pre>
     * The version_info provided in the request messages will be the version_info
     * received with the most recent successfully processed response or empty on
     * the first request. It is expected that no new request is sent after a
     * response is received until the Envoy instance is ready to ACK/NACK the new
     * configuration. ACK/NACK takes place by returning the new API config version
     * as applied or the previous API config version respectively. Each type_url
     * (see below) has an independent version associated with it.
     * </pre>
     *
     * <code>string version_info = 1;</code>
     * @return The versionInfo.
     */
    public java.lang.String getVersionInfo() {
      java.lang.Object ref = versionInfo_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        versionInfo_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The version_info provided in the request messages will be the version_info
     * received with the most recent successfully processed response or empty on
     * the first request. It is expected that no new request is sent after a
     * response is received until the Envoy instance is ready to ACK/NACK the new
     * configuration. ACK/NACK takes place by returning the new API config version
     * as applied or the previous API config version respectively. Each type_url
     * (see below) has an independent version associated with it.
     * </pre>
     *
     * <code>string version_info = 1;</code>
     * @return The bytes for versionInfo.
     */
    public com.google.protobuf.ByteString
        getVersionInfoBytes() {
      java.lang.Object ref = versionInfo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        versionInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The version_info provided in the request messages will be the version_info
     * received with the most recent successfully processed response or empty on
     * the first request. It is expected that no new request is sent after a
     * response is received until the Envoy instance is ready to ACK/NACK the new
     * configuration. ACK/NACK takes place by returning the new API config version
     * as applied or the previous API config version respectively. Each type_url
     * (see below) has an independent version associated with it.
     * </pre>
     *
     * <code>string version_info = 1;</code>
     * @param value The versionInfo to set.
     * @return This builder for chaining.
     */
    public Builder setVersionInfo(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      versionInfo_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The version_info provided in the request messages will be the version_info
     * received with the most recent successfully processed response or empty on
     * the first request. It is expected that no new request is sent after a
     * response is received until the Envoy instance is ready to ACK/NACK the new
     * configuration. ACK/NACK takes place by returning the new API config version
     * as applied or the previous API config version respectively. Each type_url
     * (see below) has an independent version associated with it.
     * </pre>
     *
     * <code>string version_info = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearVersionInfo() {
      
      versionInfo_ = getDefaultInstance().getVersionInfo();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The version_info provided in the request messages will be the version_info
     * received with the most recent successfully processed response or empty on
     * the first request. It is expected that no new request is sent after a
     * response is received until the Envoy instance is ready to ACK/NACK the new
     * configuration. ACK/NACK takes place by returning the new API config version
     * as applied or the previous API config version respectively. Each type_url
     * (see below) has an independent version associated with it.
     * </pre>
     *
     * <code>string version_info = 1;</code>
     * @param value The bytes for versionInfo to set.
     * @return This builder for chaining.
     */
    public Builder setVersionInfoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      versionInfo_ = value;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.config.core.v3.Node node_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.Node, io.envoyproxy.envoy.config.core.v3.Node.Builder, io.envoyproxy.envoy.config.core.v3.NodeOrBuilder> nodeBuilder_;
    /**
     * <pre>
     * The node making the request.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Node node = 2;</code>
     * @return Whether the node field is set.
     */
    public boolean hasNode() {
      return nodeBuilder_ != null || node_ != null;
    }
    /**
     * <pre>
     * The node making the request.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Node node = 2;</code>
     * @return The node.
     */
    public io.envoyproxy.envoy.config.core.v3.Node getNode() {
      if (nodeBuilder_ == null) {
        return node_ == null ? io.envoyproxy.envoy.config.core.v3.Node.getDefaultInstance() : node_;
      } else {
        return nodeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The node making the request.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Node node = 2;</code>
     */
    public Builder setNode(io.envoyproxy.envoy.config.core.v3.Node value) {
      if (nodeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        node_ = value;
        onChanged();
      } else {
        nodeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The node making the request.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Node node = 2;</code>
     */
    public Builder setNode(
        io.envoyproxy.envoy.config.core.v3.Node.Builder builderForValue) {
      if (nodeBuilder_ == null) {
        node_ = builderForValue.build();
        onChanged();
      } else {
        nodeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The node making the request.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Node node = 2;</code>
     */
    public Builder mergeNode(io.envoyproxy.envoy.config.core.v3.Node value) {
      if (nodeBuilder_ == null) {
        if (node_ != null) {
          node_ =
            io.envoyproxy.envoy.config.core.v3.Node.newBuilder(node_).mergeFrom(value).buildPartial();
        } else {
          node_ = value;
        }
        onChanged();
      } else {
        nodeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The node making the request.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Node node = 2;</code>
     */
    public Builder clearNode() {
      if (nodeBuilder_ == null) {
        node_ = null;
        onChanged();
      } else {
        node_ = null;
        nodeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The node making the request.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Node node = 2;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.Node.Builder getNodeBuilder() {
      
      onChanged();
      return getNodeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The node making the request.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Node node = 2;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.NodeOrBuilder getNodeOrBuilder() {
      if (nodeBuilder_ != null) {
        return nodeBuilder_.getMessageOrBuilder();
      } else {
        return node_ == null ?
            io.envoyproxy.envoy.config.core.v3.Node.getDefaultInstance() : node_;
      }
    }
    /**
     * <pre>
     * The node making the request.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Node node = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.Node, io.envoyproxy.envoy.config.core.v3.Node.Builder, io.envoyproxy.envoy.config.core.v3.NodeOrBuilder> 
        getNodeFieldBuilder() {
      if (nodeBuilder_ == null) {
        nodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.Node, io.envoyproxy.envoy.config.core.v3.Node.Builder, io.envoyproxy.envoy.config.core.v3.NodeOrBuilder>(
                getNode(),
                getParentForChildren(),
                isClean());
        node_ = null;
      }
      return nodeBuilder_;
    }

    private com.google.protobuf.LazyStringList resourceNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureResourceNamesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        resourceNames_ = new com.google.protobuf.LazyStringArrayList(resourceNames_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * List of resources to subscribe to, e.g. list of cluster names or a route
     * configuration name. If this is empty, all resources for the API are
     * returned. LDS/CDS may have empty resource_names, which will cause all
     * resources for the Envoy instance to be returned. The LDS and CDS responses
     * will then imply a number of resources that need to be fetched via EDS/RDS,
     * which will be explicitly enumerated in resource_names.
     * </pre>
     *
     * <code>repeated string resource_names = 3;</code>
     * @return A list containing the resourceNames.
     */
    public com.google.protobuf.ProtocolStringList
        getResourceNamesList() {
      return resourceNames_.getUnmodifiableView();
    }
    /**
     * <pre>
     * List of resources to subscribe to, e.g. list of cluster names or a route
     * configuration name. If this is empty, all resources for the API are
     * returned. LDS/CDS may have empty resource_names, which will cause all
     * resources for the Envoy instance to be returned. The LDS and CDS responses
     * will then imply a number of resources that need to be fetched via EDS/RDS,
     * which will be explicitly enumerated in resource_names.
     * </pre>
     *
     * <code>repeated string resource_names = 3;</code>
     * @return The count of resourceNames.
     */
    public int getResourceNamesCount() {
      return resourceNames_.size();
    }
    /**
     * <pre>
     * List of resources to subscribe to, e.g. list of cluster names or a route
     * configuration name. If this is empty, all resources for the API are
     * returned. LDS/CDS may have empty resource_names, which will cause all
     * resources for the Envoy instance to be returned. The LDS and CDS responses
     * will then imply a number of resources that need to be fetched via EDS/RDS,
     * which will be explicitly enumerated in resource_names.
     * </pre>
     *
     * <code>repeated string resource_names = 3;</code>
     * @param index The index of the element to return.
     * @return The resourceNames at the given index.
     */
    public java.lang.String getResourceNames(int index) {
      return resourceNames_.get(index);
    }
    /**
     * <pre>
     * List of resources to subscribe to, e.g. list of cluster names or a route
     * configuration name. If this is empty, all resources for the API are
     * returned. LDS/CDS may have empty resource_names, which will cause all
     * resources for the Envoy instance to be returned. The LDS and CDS responses
     * will then imply a number of resources that need to be fetched via EDS/RDS,
     * which will be explicitly enumerated in resource_names.
     * </pre>
     *
     * <code>repeated string resource_names = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the resourceNames at the given index.
     */
    public com.google.protobuf.ByteString
        getResourceNamesBytes(int index) {
      return resourceNames_.getByteString(index);
    }
    /**
     * <pre>
     * List of resources to subscribe to, e.g. list of cluster names or a route
     * configuration name. If this is empty, all resources for the API are
     * returned. LDS/CDS may have empty resource_names, which will cause all
     * resources for the Envoy instance to be returned. The LDS and CDS responses
     * will then imply a number of resources that need to be fetched via EDS/RDS,
     * which will be explicitly enumerated in resource_names.
     * </pre>
     *
     * <code>repeated string resource_names = 3;</code>
     * @param index The index to set the value at.
     * @param value The resourceNames to set.
     * @return This builder for chaining.
     */
    public Builder setResourceNames(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureResourceNamesIsMutable();
      resourceNames_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of resources to subscribe to, e.g. list of cluster names or a route
     * configuration name. If this is empty, all resources for the API are
     * returned. LDS/CDS may have empty resource_names, which will cause all
     * resources for the Envoy instance to be returned. The LDS and CDS responses
     * will then imply a number of resources that need to be fetched via EDS/RDS,
     * which will be explicitly enumerated in resource_names.
     * </pre>
     *
     * <code>repeated string resource_names = 3;</code>
     * @param value The resourceNames to add.
     * @return This builder for chaining.
     */
    public Builder addResourceNames(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureResourceNamesIsMutable();
      resourceNames_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of resources to subscribe to, e.g. list of cluster names or a route
     * configuration name. If this is empty, all resources for the API are
     * returned. LDS/CDS may have empty resource_names, which will cause all
     * resources for the Envoy instance to be returned. The LDS and CDS responses
     * will then imply a number of resources that need to be fetched via EDS/RDS,
     * which will be explicitly enumerated in resource_names.
     * </pre>
     *
     * <code>repeated string resource_names = 3;</code>
     * @param values The resourceNames to add.
     * @return This builder for chaining.
     */
    public Builder addAllResourceNames(
        java.lang.Iterable<java.lang.String> values) {
      ensureResourceNamesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, resourceNames_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of resources to subscribe to, e.g. list of cluster names or a route
     * configuration name. If this is empty, all resources for the API are
     * returned. LDS/CDS may have empty resource_names, which will cause all
     * resources for the Envoy instance to be returned. The LDS and CDS responses
     * will then imply a number of resources that need to be fetched via EDS/RDS,
     * which will be explicitly enumerated in resource_names.
     * </pre>
     *
     * <code>repeated string resource_names = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearResourceNames() {
      resourceNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of resources to subscribe to, e.g. list of cluster names or a route
     * configuration name. If this is empty, all resources for the API are
     * returned. LDS/CDS may have empty resource_names, which will cause all
     * resources for the Envoy instance to be returned. The LDS and CDS responses
     * will then imply a number of resources that need to be fetched via EDS/RDS,
     * which will be explicitly enumerated in resource_names.
     * </pre>
     *
     * <code>repeated string resource_names = 3;</code>
     * @param value The bytes of the resourceNames to add.
     * @return This builder for chaining.
     */
    public Builder addResourceNamesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureResourceNamesIsMutable();
      resourceNames_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object typeUrl_ = "";
    /**
     * <pre>
     * Type of the resource that is being requested, e.g.
     * "type.googleapis.com/envoy.api.v2.ClusterLoadAssignment". This is implicit
     * in requests made via singleton xDS APIs such as CDS, LDS, etc. but is
     * required for ADS.
     * </pre>
     *
     * <code>string type_url = 4;</code>
     * @return The typeUrl.
     */
    public java.lang.String getTypeUrl() {
      java.lang.Object ref = typeUrl_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        typeUrl_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Type of the resource that is being requested, e.g.
     * "type.googleapis.com/envoy.api.v2.ClusterLoadAssignment". This is implicit
     * in requests made via singleton xDS APIs such as CDS, LDS, etc. but is
     * required for ADS.
     * </pre>
     *
     * <code>string type_url = 4;</code>
     * @return The bytes for typeUrl.
     */
    public com.google.protobuf.ByteString
        getTypeUrlBytes() {
      java.lang.Object ref = typeUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Type of the resource that is being requested, e.g.
     * "type.googleapis.com/envoy.api.v2.ClusterLoadAssignment". This is implicit
     * in requests made via singleton xDS APIs such as CDS, LDS, etc. but is
     * required for ADS.
     * </pre>
     *
     * <code>string type_url = 4;</code>
     * @param value The typeUrl to set.
     * @return This builder for chaining.
     */
    public Builder setTypeUrl(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      typeUrl_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of the resource that is being requested, e.g.
     * "type.googleapis.com/envoy.api.v2.ClusterLoadAssignment". This is implicit
     * in requests made via singleton xDS APIs such as CDS, LDS, etc. but is
     * required for ADS.
     * </pre>
     *
     * <code>string type_url = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTypeUrl() {
      
      typeUrl_ = getDefaultInstance().getTypeUrl();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of the resource that is being requested, e.g.
     * "type.googleapis.com/envoy.api.v2.ClusterLoadAssignment". This is implicit
     * in requests made via singleton xDS APIs such as CDS, LDS, etc. but is
     * required for ADS.
     * </pre>
     *
     * <code>string type_url = 4;</code>
     * @param value The bytes for typeUrl to set.
     * @return This builder for chaining.
     */
    public Builder setTypeUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      typeUrl_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object responseNonce_ = "";
    /**
     * <pre>
     * nonce corresponding to DiscoveryResponse being ACK/NACKed. See above
     * discussion on version_info and the DiscoveryResponse nonce comment. This
     * may be empty only if 1) this is a non-persistent-stream xDS such as HTTP,
     * or 2) the client has not yet accepted an update in this xDS stream (unlike
     * delta, where it is populated only for new explicit ACKs).
     * </pre>
     *
     * <code>string response_nonce = 5;</code>
     * @return The responseNonce.
     */
    public java.lang.String getResponseNonce() {
      java.lang.Object ref = responseNonce_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        responseNonce_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * nonce corresponding to DiscoveryResponse being ACK/NACKed. See above
     * discussion on version_info and the DiscoveryResponse nonce comment. This
     * may be empty only if 1) this is a non-persistent-stream xDS such as HTTP,
     * or 2) the client has not yet accepted an update in this xDS stream (unlike
     * delta, where it is populated only for new explicit ACKs).
     * </pre>
     *
     * <code>string response_nonce = 5;</code>
     * @return The bytes for responseNonce.
     */
    public com.google.protobuf.ByteString
        getResponseNonceBytes() {
      java.lang.Object ref = responseNonce_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        responseNonce_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * nonce corresponding to DiscoveryResponse being ACK/NACKed. See above
     * discussion on version_info and the DiscoveryResponse nonce comment. This
     * may be empty only if 1) this is a non-persistent-stream xDS such as HTTP,
     * or 2) the client has not yet accepted an update in this xDS stream (unlike
     * delta, where it is populated only for new explicit ACKs).
     * </pre>
     *
     * <code>string response_nonce = 5;</code>
     * @param value The responseNonce to set.
     * @return This builder for chaining.
     */
    public Builder setResponseNonce(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      responseNonce_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * nonce corresponding to DiscoveryResponse being ACK/NACKed. See above
     * discussion on version_info and the DiscoveryResponse nonce comment. This
     * may be empty only if 1) this is a non-persistent-stream xDS such as HTTP,
     * or 2) the client has not yet accepted an update in this xDS stream (unlike
     * delta, where it is populated only for new explicit ACKs).
     * </pre>
     *
     * <code>string response_nonce = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearResponseNonce() {
      
      responseNonce_ = getDefaultInstance().getResponseNonce();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * nonce corresponding to DiscoveryResponse being ACK/NACKed. See above
     * discussion on version_info and the DiscoveryResponse nonce comment. This
     * may be empty only if 1) this is a non-persistent-stream xDS such as HTTP,
     * or 2) the client has not yet accepted an update in this xDS stream (unlike
     * delta, where it is populated only for new explicit ACKs).
     * </pre>
     *
     * <code>string response_nonce = 5;</code>
     * @param value The bytes for responseNonce to set.
     * @return This builder for chaining.
     */
    public Builder setResponseNonceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      responseNonce_ = value;
      onChanged();
      return this;
    }

    private com.google.rpc.Status errorDetail_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> errorDetailBuilder_;
    /**
     * <pre>
     * This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_api_msg_service.discovery.v3.DiscoveryResponse&gt;`
     * failed to update configuration. The *message* field in *error_details* provides the Envoy
     * internal exception related to the failure. It is only intended for consumption during manual
     * debugging, the string provided is not guaranteed to be stable across Envoy versions.
     * </pre>
     *
     * <code>.google.rpc.Status error_detail = 6;</code>
     * @return Whether the errorDetail field is set.
     */
    public boolean hasErrorDetail() {
      return errorDetailBuilder_ != null || errorDetail_ != null;
    }
    /**
     * <pre>
     * This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_api_msg_service.discovery.v3.DiscoveryResponse&gt;`
     * failed to update configuration. The *message* field in *error_details* provides the Envoy
     * internal exception related to the failure. It is only intended for consumption during manual
     * debugging, the string provided is not guaranteed to be stable across Envoy versions.
     * </pre>
     *
     * <code>.google.rpc.Status error_detail = 6;</code>
     * @return The errorDetail.
     */
    public com.google.rpc.Status getErrorDetail() {
      if (errorDetailBuilder_ == null) {
        return errorDetail_ == null ? com.google.rpc.Status.getDefaultInstance() : errorDetail_;
      } else {
        return errorDetailBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_api_msg_service.discovery.v3.DiscoveryResponse&gt;`
     * failed to update configuration. The *message* field in *error_details* provides the Envoy
     * internal exception related to the failure. It is only intended for consumption during manual
     * debugging, the string provided is not guaranteed to be stable across Envoy versions.
     * </pre>
     *
     * <code>.google.rpc.Status error_detail = 6;</code>
     */
    public Builder setErrorDetail(com.google.rpc.Status value) {
      if (errorDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        errorDetail_ = value;
        onChanged();
      } else {
        errorDetailBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_api_msg_service.discovery.v3.DiscoveryResponse&gt;`
     * failed to update configuration. The *message* field in *error_details* provides the Envoy
     * internal exception related to the failure. It is only intended for consumption during manual
     * debugging, the string provided is not guaranteed to be stable across Envoy versions.
     * </pre>
     *
     * <code>.google.rpc.Status error_detail = 6;</code>
     */
    public Builder setErrorDetail(
        com.google.rpc.Status.Builder builderForValue) {
      if (errorDetailBuilder_ == null) {
        errorDetail_ = builderForValue.build();
        onChanged();
      } else {
        errorDetailBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_api_msg_service.discovery.v3.DiscoveryResponse&gt;`
     * failed to update configuration. The *message* field in *error_details* provides the Envoy
     * internal exception related to the failure. It is only intended for consumption during manual
     * debugging, the string provided is not guaranteed to be stable across Envoy versions.
     * </pre>
     *
     * <code>.google.rpc.Status error_detail = 6;</code>
     */
    public Builder mergeErrorDetail(com.google.rpc.Status value) {
      if (errorDetailBuilder_ == null) {
        if (errorDetail_ != null) {
          errorDetail_ =
            com.google.rpc.Status.newBuilder(errorDetail_).mergeFrom(value).buildPartial();
        } else {
          errorDetail_ = value;
        }
        onChanged();
      } else {
        errorDetailBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_api_msg_service.discovery.v3.DiscoveryResponse&gt;`
     * failed to update configuration. The *message* field in *error_details* provides the Envoy
     * internal exception related to the failure. It is only intended for consumption during manual
     * debugging, the string provided is not guaranteed to be stable across Envoy versions.
     * </pre>
     *
     * <code>.google.rpc.Status error_detail = 6;</code>
     */
    public Builder clearErrorDetail() {
      if (errorDetailBuilder_ == null) {
        errorDetail_ = null;
        onChanged();
      } else {
        errorDetail_ = null;
        errorDetailBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_api_msg_service.discovery.v3.DiscoveryResponse&gt;`
     * failed to update configuration. The *message* field in *error_details* provides the Envoy
     * internal exception related to the failure. It is only intended for consumption during manual
     * debugging, the string provided is not guaranteed to be stable across Envoy versions.
     * </pre>
     *
     * <code>.google.rpc.Status error_detail = 6;</code>
     */
    public com.google.rpc.Status.Builder getErrorDetailBuilder() {
      
      onChanged();
      return getErrorDetailFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_api_msg_service.discovery.v3.DiscoveryResponse&gt;`
     * failed to update configuration. The *message* field in *error_details* provides the Envoy
     * internal exception related to the failure. It is only intended for consumption during manual
     * debugging, the string provided is not guaranteed to be stable across Envoy versions.
     * </pre>
     *
     * <code>.google.rpc.Status error_detail = 6;</code>
     */
    public com.google.rpc.StatusOrBuilder getErrorDetailOrBuilder() {
      if (errorDetailBuilder_ != null) {
        return errorDetailBuilder_.getMessageOrBuilder();
      } else {
        return errorDetail_ == null ?
            com.google.rpc.Status.getDefaultInstance() : errorDetail_;
      }
    }
    /**
     * <pre>
     * This is populated when the previous :ref:`DiscoveryResponse &lt;envoy_api_msg_service.discovery.v3.DiscoveryResponse&gt;`
     * failed to update configuration. The *message* field in *error_details* provides the Envoy
     * internal exception related to the failure. It is only intended for consumption during manual
     * debugging, the string provided is not guaranteed to be stable across Envoy versions.
     * </pre>
     *
     * <code>.google.rpc.Status error_detail = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> 
        getErrorDetailFieldBuilder() {
      if (errorDetailBuilder_ == null) {
        errorDetailBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder>(
                getErrorDetail(),
                getParentForChildren(),
                isClean());
        errorDetail_ = null;
      }
      return errorDetailBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.service.discovery.v3.DiscoveryRequest)
  }

  // @@protoc_insertion_point(class_scope:envoy.service.discovery.v3.DiscoveryRequest)
  private static final io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest();
  }

  public static io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DiscoveryRequest>
      PARSER = new com.google.protobuf.AbstractParser<DiscoveryRequest>() {
    @java.lang.Override
    public DiscoveryRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DiscoveryRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DiscoveryRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DiscoveryRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.service.discovery.v3.DiscoveryRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

