// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/admin/v3/tap.proto

package io.envoyproxy.envoy.admin.v3;

public interface TapRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.admin.v3.TapRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The opaque configuration ID used to match the configuration to a loaded extension.
   * A tap extension configures a similar opaque ID that is used to match.
   * </pre>
   *
   * <code>string config_id = 1 [(.validate.rules) = { ... }</code>
   * @return The configId.
   */
  java.lang.String getConfigId();
  /**
   * <pre>
   * The opaque configuration ID used to match the configuration to a loaded extension.
   * A tap extension configures a similar opaque ID that is used to match.
   * </pre>
   *
   * <code>string config_id = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for configId.
   */
  com.google.protobuf.ByteString
      getConfigIdBytes();

  /**
   * <pre>
   * The tap configuration to load.
   * </pre>
   *
   * <code>.envoy.config.tap.v3.TapConfig tap_config = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the tapConfig field is set.
   */
  boolean hasTapConfig();
  /**
   * <pre>
   * The tap configuration to load.
   * </pre>
   *
   * <code>.envoy.config.tap.v3.TapConfig tap_config = 2 [(.validate.rules) = { ... }</code>
   * @return The tapConfig.
   */
  io.envoyproxy.envoy.config.tap.v3.TapConfig getTapConfig();
  /**
   * <pre>
   * The tap configuration to load.
   * </pre>
   *
   * <code>.envoy.config.tap.v3.TapConfig tap_config = 2 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.tap.v3.TapConfigOrBuilder getTapConfigOrBuilder();
}
