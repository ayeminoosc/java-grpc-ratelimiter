// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/data/accesslog/v3/accesslog.proto

package io.envoyproxy.envoy.data.accesslog.v3;

/**
 * <pre>
 * Properties of a negotiated TLS connection.
 * [#next-free-field: 7]
 * </pre>
 *
 * Protobuf type {@code envoy.data.accesslog.v3.TLSProperties}
 */
public final class TLSProperties extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.data.accesslog.v3.TLSProperties)
    TLSPropertiesOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TLSProperties.newBuilder() to construct.
  private TLSProperties(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TLSProperties() {
    tlsVersion_ = 0;
    tlsSniHostname_ = "";
    tlsSessionId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TLSProperties();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TLSProperties(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            tlsVersion_ = rawValue;
            break;
          }
          case 18: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (tlsCipherSuite_ != null) {
              subBuilder = tlsCipherSuite_.toBuilder();
            }
            tlsCipherSuite_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tlsCipherSuite_);
              tlsCipherSuite_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            tlsSniHostname_ = s;
            break;
          }
          case 34: {
            io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder subBuilder = null;
            if (localCertificateProperties_ != null) {
              subBuilder = localCertificateProperties_.toBuilder();
            }
            localCertificateProperties_ = input.readMessage(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(localCertificateProperties_);
              localCertificateProperties_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder subBuilder = null;
            if (peerCertificateProperties_ != null) {
              subBuilder = peerCertificateProperties_.toBuilder();
            }
            peerCertificateProperties_ = input.readMessage(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(peerCertificateProperties_);
              peerCertificateProperties_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            tlsSessionId_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.class, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.Builder.class);
  }

  /**
   * Protobuf enum {@code envoy.data.accesslog.v3.TLSProperties.TLSVersion}
   */
  public enum TLSVersion
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VERSION_UNSPECIFIED = 0;</code>
     */
    VERSION_UNSPECIFIED(0),
    /**
     * <code>TLSv1 = 1;</code>
     */
    TLSv1(1),
    /**
     * <code>TLSv1_1 = 2;</code>
     */
    TLSv1_1(2),
    /**
     * <code>TLSv1_2 = 3;</code>
     */
    TLSv1_2(3),
    /**
     * <code>TLSv1_3 = 4;</code>
     */
    TLSv1_3(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>VERSION_UNSPECIFIED = 0;</code>
     */
    public static final int VERSION_UNSPECIFIED_VALUE = 0;
    /**
     * <code>TLSv1 = 1;</code>
     */
    public static final int TLSv1_VALUE = 1;
    /**
     * <code>TLSv1_1 = 2;</code>
     */
    public static final int TLSv1_1_VALUE = 2;
    /**
     * <code>TLSv1_2 = 3;</code>
     */
    public static final int TLSv1_2_VALUE = 3;
    /**
     * <code>TLSv1_3 = 4;</code>
     */
    public static final int TLSv1_3_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TLSVersion valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TLSVersion forNumber(int value) {
      switch (value) {
        case 0: return VERSION_UNSPECIFIED;
        case 1: return TLSv1;
        case 2: return TLSv1_1;
        case 3: return TLSv1_2;
        case 4: return TLSv1_3;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TLSVersion>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TLSVersion> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TLSVersion>() {
            public TLSVersion findValueByNumber(int number) {
              return TLSVersion.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.getDescriptor().getEnumTypes().get(0);
    }

    private static final TLSVersion[] VALUES = values();

    public static TLSVersion valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TLSVersion(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:envoy.data.accesslog.v3.TLSProperties.TLSVersion)
  }

  public interface CertificatePropertiesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.data.accesslog.v3.TLSProperties.CertificateProperties)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * SANs present in the certificate.
     * </pre>
     *
     * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
     */
    java.util.List<io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName> 
        getSubjectAltNameList();
    /**
     * <pre>
     * SANs present in the certificate.
     * </pre>
     *
     * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
     */
    io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName getSubjectAltName(int index);
    /**
     * <pre>
     * SANs present in the certificate.
     * </pre>
     *
     * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
     */
    int getSubjectAltNameCount();
    /**
     * <pre>
     * SANs present in the certificate.
     * </pre>
     *
     * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
     */
    java.util.List<? extends io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltNameOrBuilder> 
        getSubjectAltNameOrBuilderList();
    /**
     * <pre>
     * SANs present in the certificate.
     * </pre>
     *
     * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
     */
    io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltNameOrBuilder getSubjectAltNameOrBuilder(
        int index);

    /**
     * <pre>
     * The subject field of the certificate.
     * </pre>
     *
     * <code>string subject = 2;</code>
     * @return The subject.
     */
    java.lang.String getSubject();
    /**
     * <pre>
     * The subject field of the certificate.
     * </pre>
     *
     * <code>string subject = 2;</code>
     * @return The bytes for subject.
     */
    com.google.protobuf.ByteString
        getSubjectBytes();
  }
  /**
   * Protobuf type {@code envoy.data.accesslog.v3.TLSProperties.CertificateProperties}
   */
  public static final class CertificateProperties extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.data.accesslog.v3.TLSProperties.CertificateProperties)
      CertificatePropertiesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CertificateProperties.newBuilder() to construct.
    private CertificateProperties(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CertificateProperties() {
      subjectAltName_ = java.util.Collections.emptyList();
      subject_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CertificateProperties();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CertificateProperties(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                subjectAltName_ = new java.util.ArrayList<io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName>();
                mutable_bitField0_ |= 0x00000001;
              }
              subjectAltName_.add(
                  input.readMessage(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.parser(), extensionRegistry));
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              subject_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          subjectAltName_ = java.util.Collections.unmodifiableList(subjectAltName_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_CertificateProperties_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_CertificateProperties_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.class, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder.class);
    }

    public interface SubjectAltNameOrBuilder extends
        // @@protoc_insertion_point(interface_extends:envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string uri = 1;</code>
       * @return Whether the uri field is set.
       */
      boolean hasUri();
      /**
       * <code>string uri = 1;</code>
       * @return The uri.
       */
      java.lang.String getUri();
      /**
       * <code>string uri = 1;</code>
       * @return The bytes for uri.
       */
      com.google.protobuf.ByteString
          getUriBytes();

      /**
       * <pre>
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>string dns = 2;</code>
       * @return Whether the dns field is set.
       */
      boolean hasDns();
      /**
       * <pre>
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>string dns = 2;</code>
       * @return The dns.
       */
      java.lang.String getDns();
      /**
       * <pre>
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>string dns = 2;</code>
       * @return The bytes for dns.
       */
      com.google.protobuf.ByteString
          getDnsBytes();

      public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.SanCase getSanCase();
    }
    /**
     * Protobuf type {@code envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName}
     */
    public static final class SubjectAltName extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName)
        SubjectAltNameOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SubjectAltName.newBuilder() to construct.
      private SubjectAltName(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SubjectAltName() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new SubjectAltName();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private SubjectAltName(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                sanCase_ = 1;
                san_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                sanCase_ = 2;
                san_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_CertificateProperties_SubjectAltName_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_CertificateProperties_SubjectAltName_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.class, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.Builder.class);
      }

      private int sanCase_ = 0;
      private java.lang.Object san_;
      public enum SanCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        URI(1),
        DNS(2),
        SAN_NOT_SET(0);
        private final int value;
        private SanCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static SanCase valueOf(int value) {
          return forNumber(value);
        }

        public static SanCase forNumber(int value) {
          switch (value) {
            case 1: return URI;
            case 2: return DNS;
            case 0: return SAN_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public SanCase
      getSanCase() {
        return SanCase.forNumber(
            sanCase_);
      }

      public static final int URI_FIELD_NUMBER = 1;
      /**
       * <code>string uri = 1;</code>
       * @return Whether the uri field is set.
       */
      public boolean hasUri() {
        return sanCase_ == 1;
      }
      /**
       * <code>string uri = 1;</code>
       * @return The uri.
       */
      public java.lang.String getUri() {
        java.lang.Object ref = "";
        if (sanCase_ == 1) {
          ref = san_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (sanCase_ == 1) {
            san_ = s;
          }
          return s;
        }
      }
      /**
       * <code>string uri = 1;</code>
       * @return The bytes for uri.
       */
      public com.google.protobuf.ByteString
          getUriBytes() {
        java.lang.Object ref = "";
        if (sanCase_ == 1) {
          ref = san_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (sanCase_ == 1) {
            san_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DNS_FIELD_NUMBER = 2;
      /**
       * <pre>
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>string dns = 2;</code>
       * @return Whether the dns field is set.
       */
      public boolean hasDns() {
        return sanCase_ == 2;
      }
      /**
       * <pre>
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>string dns = 2;</code>
       * @return The dns.
       */
      public java.lang.String getDns() {
        java.lang.Object ref = "";
        if (sanCase_ == 2) {
          ref = san_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (sanCase_ == 2) {
            san_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>string dns = 2;</code>
       * @return The bytes for dns.
       */
      public com.google.protobuf.ByteString
          getDnsBytes() {
        java.lang.Object ref = "";
        if (sanCase_ == 2) {
          ref = san_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (sanCase_ == 2) {
            san_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sanCase_ == 1) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, san_);
        }
        if (sanCase_ == 2) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, san_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sanCase_ == 1) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, san_);
        }
        if (sanCase_ == 2) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, san_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName)) {
          return super.equals(obj);
        }
        io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName other = (io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName) obj;

        if (!getSanCase().equals(other.getSanCase())) return false;
        switch (sanCase_) {
          case 1:
            if (!getUri()
                .equals(other.getUri())) return false;
            break;
          case 2:
            if (!getDns()
                .equals(other.getDns())) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (sanCase_) {
          case 1:
            hash = (37 * hash) + URI_FIELD_NUMBER;
            hash = (53 * hash) + getUri().hashCode();
            break;
          case 2:
            hash = (37 * hash) + DNS_FIELD_NUMBER;
            hash = (53 * hash) + getDns().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName)
          io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltNameOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_CertificateProperties_SubjectAltName_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_CertificateProperties_SubjectAltName_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.class, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.Builder.class);
        }

        // Construct using io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          sanCase_ = 0;
          san_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_CertificateProperties_SubjectAltName_descriptor;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName getDefaultInstanceForType() {
          return io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.getDefaultInstance();
        }

        @java.lang.Override
        public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName build() {
          io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName buildPartial() {
          io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName result = new io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName(this);
          if (sanCase_ == 1) {
            result.san_ = san_;
          }
          if (sanCase_ == 2) {
            result.san_ = san_;
          }
          result.sanCase_ = sanCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName) {
            return mergeFrom((io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName other) {
          if (other == io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.getDefaultInstance()) return this;
          switch (other.getSanCase()) {
            case URI: {
              sanCase_ = 1;
              san_ = other.san_;
              onChanged();
              break;
            }
            case DNS: {
              sanCase_ = 2;
              san_ = other.san_;
              onChanged();
              break;
            }
            case SAN_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int sanCase_ = 0;
        private java.lang.Object san_;
        public SanCase
            getSanCase() {
          return SanCase.forNumber(
              sanCase_);
        }

        public Builder clearSan() {
          sanCase_ = 0;
          san_ = null;
          onChanged();
          return this;
        }


        /**
         * <code>string uri = 1;</code>
         * @return Whether the uri field is set.
         */
        @java.lang.Override
        public boolean hasUri() {
          return sanCase_ == 1;
        }
        /**
         * <code>string uri = 1;</code>
         * @return The uri.
         */
        @java.lang.Override
        public java.lang.String getUri() {
          java.lang.Object ref = "";
          if (sanCase_ == 1) {
            ref = san_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (sanCase_ == 1) {
              san_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string uri = 1;</code>
         * @return The bytes for uri.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getUriBytes() {
          java.lang.Object ref = "";
          if (sanCase_ == 1) {
            ref = san_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (sanCase_ == 1) {
              san_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string uri = 1;</code>
         * @param value The uri to set.
         * @return This builder for chaining.
         */
        public Builder setUri(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  sanCase_ = 1;
          san_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string uri = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearUri() {
          if (sanCase_ == 1) {
            sanCase_ = 0;
            san_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <code>string uri = 1;</code>
         * @param value The bytes for uri to set.
         * @return This builder for chaining.
         */
        public Builder setUriBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          sanCase_ = 1;
          san_ = value;
          onChanged();
          return this;
        }

        /**
         * <pre>
         * [#not-implemented-hide:]
         * </pre>
         *
         * <code>string dns = 2;</code>
         * @return Whether the dns field is set.
         */
        @java.lang.Override
        public boolean hasDns() {
          return sanCase_ == 2;
        }
        /**
         * <pre>
         * [#not-implemented-hide:]
         * </pre>
         *
         * <code>string dns = 2;</code>
         * @return The dns.
         */
        @java.lang.Override
        public java.lang.String getDns() {
          java.lang.Object ref = "";
          if (sanCase_ == 2) {
            ref = san_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (sanCase_ == 2) {
              san_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * [#not-implemented-hide:]
         * </pre>
         *
         * <code>string dns = 2;</code>
         * @return The bytes for dns.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getDnsBytes() {
          java.lang.Object ref = "";
          if (sanCase_ == 2) {
            ref = san_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (sanCase_ == 2) {
              san_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * [#not-implemented-hide:]
         * </pre>
         *
         * <code>string dns = 2;</code>
         * @param value The dns to set.
         * @return This builder for chaining.
         */
        public Builder setDns(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  sanCase_ = 2;
          san_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * [#not-implemented-hide:]
         * </pre>
         *
         * <code>string dns = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearDns() {
          if (sanCase_ == 2) {
            sanCase_ = 0;
            san_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * [#not-implemented-hide:]
         * </pre>
         *
         * <code>string dns = 2;</code>
         * @param value The bytes for dns to set.
         * @return This builder for chaining.
         */
        public Builder setDnsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          sanCase_ = 2;
          san_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName)
      }

      // @@protoc_insertion_point(class_scope:envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName)
      private static final io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName();
      }

      public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SubjectAltName>
          PARSER = new com.google.protobuf.AbstractParser<SubjectAltName>() {
        @java.lang.Override
        public SubjectAltName parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SubjectAltName(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SubjectAltName> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SubjectAltName> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int SUBJECT_ALT_NAME_FIELD_NUMBER = 1;
    private java.util.List<io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName> subjectAltName_;
    /**
     * <pre>
     * SANs present in the certificate.
     * </pre>
     *
     * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
     */
    @java.lang.Override
    public java.util.List<io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName> getSubjectAltNameList() {
      return subjectAltName_;
    }
    /**
     * <pre>
     * SANs present in the certificate.
     * </pre>
     *
     * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltNameOrBuilder> 
        getSubjectAltNameOrBuilderList() {
      return subjectAltName_;
    }
    /**
     * <pre>
     * SANs present in the certificate.
     * </pre>
     *
     * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
     */
    @java.lang.Override
    public int getSubjectAltNameCount() {
      return subjectAltName_.size();
    }
    /**
     * <pre>
     * SANs present in the certificate.
     * </pre>
     *
     * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName getSubjectAltName(int index) {
      return subjectAltName_.get(index);
    }
    /**
     * <pre>
     * SANs present in the certificate.
     * </pre>
     *
     * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltNameOrBuilder getSubjectAltNameOrBuilder(
        int index) {
      return subjectAltName_.get(index);
    }

    public static final int SUBJECT_FIELD_NUMBER = 2;
    private volatile java.lang.Object subject_;
    /**
     * <pre>
     * The subject field of the certificate.
     * </pre>
     *
     * <code>string subject = 2;</code>
     * @return The subject.
     */
    @java.lang.Override
    public java.lang.String getSubject() {
      java.lang.Object ref = subject_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subject_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The subject field of the certificate.
     * </pre>
     *
     * <code>string subject = 2;</code>
     * @return The bytes for subject.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSubjectBytes() {
      java.lang.Object ref = subject_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subject_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < subjectAltName_.size(); i++) {
        output.writeMessage(1, subjectAltName_.get(i));
      }
      if (!getSubjectBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, subject_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < subjectAltName_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, subjectAltName_.get(i));
      }
      if (!getSubjectBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, subject_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties other = (io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties) obj;

      if (!getSubjectAltNameList()
          .equals(other.getSubjectAltNameList())) return false;
      if (!getSubject()
          .equals(other.getSubject())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSubjectAltNameCount() > 0) {
        hash = (37 * hash) + SUBJECT_ALT_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getSubjectAltNameList().hashCode();
      }
      hash = (37 * hash) + SUBJECT_FIELD_NUMBER;
      hash = (53 * hash) + getSubject().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code envoy.data.accesslog.v3.TLSProperties.CertificateProperties}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.data.accesslog.v3.TLSProperties.CertificateProperties)
        io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificatePropertiesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_CertificateProperties_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_CertificateProperties_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.class, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSubjectAltNameFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (subjectAltNameBuilder_ == null) {
          subjectAltName_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          subjectAltNameBuilder_.clear();
        }
        subject_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_CertificateProperties_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties getDefaultInstanceForType() {
        return io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties build() {
        io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties buildPartial() {
        io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties result = new io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties(this);
        int from_bitField0_ = bitField0_;
        if (subjectAltNameBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            subjectAltName_ = java.util.Collections.unmodifiableList(subjectAltName_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.subjectAltName_ = subjectAltName_;
        } else {
          result.subjectAltName_ = subjectAltNameBuilder_.build();
        }
        result.subject_ = subject_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties) {
          return mergeFrom((io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties other) {
        if (other == io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.getDefaultInstance()) return this;
        if (subjectAltNameBuilder_ == null) {
          if (!other.subjectAltName_.isEmpty()) {
            if (subjectAltName_.isEmpty()) {
              subjectAltName_ = other.subjectAltName_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSubjectAltNameIsMutable();
              subjectAltName_.addAll(other.subjectAltName_);
            }
            onChanged();
          }
        } else {
          if (!other.subjectAltName_.isEmpty()) {
            if (subjectAltNameBuilder_.isEmpty()) {
              subjectAltNameBuilder_.dispose();
              subjectAltNameBuilder_ = null;
              subjectAltName_ = other.subjectAltName_;
              bitField0_ = (bitField0_ & ~0x00000001);
              subjectAltNameBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSubjectAltNameFieldBuilder() : null;
            } else {
              subjectAltNameBuilder_.addAllMessages(other.subjectAltName_);
            }
          }
        }
        if (!other.getSubject().isEmpty()) {
          subject_ = other.subject_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName> subjectAltName_ =
        java.util.Collections.emptyList();
      private void ensureSubjectAltNameIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          subjectAltName_ = new java.util.ArrayList<io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName>(subjectAltName_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.Builder, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltNameOrBuilder> subjectAltNameBuilder_;

      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public java.util.List<io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName> getSubjectAltNameList() {
        if (subjectAltNameBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subjectAltName_);
        } else {
          return subjectAltNameBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public int getSubjectAltNameCount() {
        if (subjectAltNameBuilder_ == null) {
          return subjectAltName_.size();
        } else {
          return subjectAltNameBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName getSubjectAltName(int index) {
        if (subjectAltNameBuilder_ == null) {
          return subjectAltName_.get(index);
        } else {
          return subjectAltNameBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public Builder setSubjectAltName(
          int index, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName value) {
        if (subjectAltNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubjectAltNameIsMutable();
          subjectAltName_.set(index, value);
          onChanged();
        } else {
          subjectAltNameBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public Builder setSubjectAltName(
          int index, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.Builder builderForValue) {
        if (subjectAltNameBuilder_ == null) {
          ensureSubjectAltNameIsMutable();
          subjectAltName_.set(index, builderForValue.build());
          onChanged();
        } else {
          subjectAltNameBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public Builder addSubjectAltName(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName value) {
        if (subjectAltNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubjectAltNameIsMutable();
          subjectAltName_.add(value);
          onChanged();
        } else {
          subjectAltNameBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public Builder addSubjectAltName(
          int index, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName value) {
        if (subjectAltNameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubjectAltNameIsMutable();
          subjectAltName_.add(index, value);
          onChanged();
        } else {
          subjectAltNameBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public Builder addSubjectAltName(
          io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.Builder builderForValue) {
        if (subjectAltNameBuilder_ == null) {
          ensureSubjectAltNameIsMutable();
          subjectAltName_.add(builderForValue.build());
          onChanged();
        } else {
          subjectAltNameBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public Builder addSubjectAltName(
          int index, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.Builder builderForValue) {
        if (subjectAltNameBuilder_ == null) {
          ensureSubjectAltNameIsMutable();
          subjectAltName_.add(index, builderForValue.build());
          onChanged();
        } else {
          subjectAltNameBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public Builder addAllSubjectAltName(
          java.lang.Iterable<? extends io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName> values) {
        if (subjectAltNameBuilder_ == null) {
          ensureSubjectAltNameIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, subjectAltName_);
          onChanged();
        } else {
          subjectAltNameBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public Builder clearSubjectAltName() {
        if (subjectAltNameBuilder_ == null) {
          subjectAltName_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          subjectAltNameBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public Builder removeSubjectAltName(int index) {
        if (subjectAltNameBuilder_ == null) {
          ensureSubjectAltNameIsMutable();
          subjectAltName_.remove(index);
          onChanged();
        } else {
          subjectAltNameBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.Builder getSubjectAltNameBuilder(
          int index) {
        return getSubjectAltNameFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltNameOrBuilder getSubjectAltNameOrBuilder(
          int index) {
        if (subjectAltNameBuilder_ == null) {
          return subjectAltName_.get(index);  } else {
          return subjectAltNameBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public java.util.List<? extends io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltNameOrBuilder> 
           getSubjectAltNameOrBuilderList() {
        if (subjectAltNameBuilder_ != null) {
          return subjectAltNameBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subjectAltName_);
        }
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.Builder addSubjectAltNameBuilder() {
        return getSubjectAltNameFieldBuilder().addBuilder(
            io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.getDefaultInstance());
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.Builder addSubjectAltNameBuilder(
          int index) {
        return getSubjectAltNameFieldBuilder().addBuilder(
            index, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.getDefaultInstance());
      }
      /**
       * <pre>
       * SANs present in the certificate.
       * </pre>
       *
       * <code>repeated .envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName subject_alt_name = 1;</code>
       */
      public java.util.List<io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.Builder> 
           getSubjectAltNameBuilderList() {
        return getSubjectAltNameFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.Builder, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltNameOrBuilder> 
          getSubjectAltNameFieldBuilder() {
        if (subjectAltNameBuilder_ == null) {
          subjectAltNameBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltName.Builder, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.SubjectAltNameOrBuilder>(
                  subjectAltName_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          subjectAltName_ = null;
        }
        return subjectAltNameBuilder_;
      }

      private java.lang.Object subject_ = "";
      /**
       * <pre>
       * The subject field of the certificate.
       * </pre>
       *
       * <code>string subject = 2;</code>
       * @return The subject.
       */
      public java.lang.String getSubject() {
        java.lang.Object ref = subject_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          subject_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The subject field of the certificate.
       * </pre>
       *
       * <code>string subject = 2;</code>
       * @return The bytes for subject.
       */
      public com.google.protobuf.ByteString
          getSubjectBytes() {
        java.lang.Object ref = subject_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subject_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The subject field of the certificate.
       * </pre>
       *
       * <code>string subject = 2;</code>
       * @param value The subject to set.
       * @return This builder for chaining.
       */
      public Builder setSubject(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        subject_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The subject field of the certificate.
       * </pre>
       *
       * <code>string subject = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubject() {
        
        subject_ = getDefaultInstance().getSubject();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The subject field of the certificate.
       * </pre>
       *
       * <code>string subject = 2;</code>
       * @param value The bytes for subject to set.
       * @return This builder for chaining.
       */
      public Builder setSubjectBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        subject_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.data.accesslog.v3.TLSProperties.CertificateProperties)
    }

    // @@protoc_insertion_point(class_scope:envoy.data.accesslog.v3.TLSProperties.CertificateProperties)
    private static final io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties();
    }

    public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CertificateProperties>
        PARSER = new com.google.protobuf.AbstractParser<CertificateProperties>() {
      @java.lang.Override
      public CertificateProperties parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CertificateProperties(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CertificateProperties> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CertificateProperties> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int TLS_VERSION_FIELD_NUMBER = 1;
  private int tlsVersion_;
  /**
   * <pre>
   * Version of TLS that was negotiated.
   * </pre>
   *
   * <code>.envoy.data.accesslog.v3.TLSProperties.TLSVersion tls_version = 1;</code>
   * @return The enum numeric value on the wire for tlsVersion.
   */
  @java.lang.Override public int getTlsVersionValue() {
    return tlsVersion_;
  }
  /**
   * <pre>
   * Version of TLS that was negotiated.
   * </pre>
   *
   * <code>.envoy.data.accesslog.v3.TLSProperties.TLSVersion tls_version = 1;</code>
   * @return The tlsVersion.
   */
  @java.lang.Override public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.TLSVersion getTlsVersion() {
    @SuppressWarnings("deprecation")
    io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.TLSVersion result = io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.TLSVersion.valueOf(tlsVersion_);
    return result == null ? io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.TLSVersion.UNRECOGNIZED : result;
  }

  public static final int TLS_CIPHER_SUITE_FIELD_NUMBER = 2;
  private com.google.protobuf.UInt32Value tlsCipherSuite_;
  /**
   * <pre>
   * TLS cipher suite negotiated during handshake. The value is a
   * four-digit hex code defined by the IANA TLS Cipher Suite Registry
   * (e.g. ``009C`` for ``TLS_RSA_WITH_AES_128_GCM_SHA256``).
   * Here it is expressed as an integer.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value tls_cipher_suite = 2;</code>
   * @return Whether the tlsCipherSuite field is set.
   */
  @java.lang.Override
  public boolean hasTlsCipherSuite() {
    return tlsCipherSuite_ != null;
  }
  /**
   * <pre>
   * TLS cipher suite negotiated during handshake. The value is a
   * four-digit hex code defined by the IANA TLS Cipher Suite Registry
   * (e.g. ``009C`` for ``TLS_RSA_WITH_AES_128_GCM_SHA256``).
   * Here it is expressed as an integer.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value tls_cipher_suite = 2;</code>
   * @return The tlsCipherSuite.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getTlsCipherSuite() {
    return tlsCipherSuite_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : tlsCipherSuite_;
  }
  /**
   * <pre>
   * TLS cipher suite negotiated during handshake. The value is a
   * four-digit hex code defined by the IANA TLS Cipher Suite Registry
   * (e.g. ``009C`` for ``TLS_RSA_WITH_AES_128_GCM_SHA256``).
   * Here it is expressed as an integer.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value tls_cipher_suite = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getTlsCipherSuiteOrBuilder() {
    return getTlsCipherSuite();
  }

  public static final int TLS_SNI_HOSTNAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object tlsSniHostname_;
  /**
   * <pre>
   * SNI hostname from handshake.
   * </pre>
   *
   * <code>string tls_sni_hostname = 3;</code>
   * @return The tlsSniHostname.
   */
  @java.lang.Override
  public java.lang.String getTlsSniHostname() {
    java.lang.Object ref = tlsSniHostname_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tlsSniHostname_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * SNI hostname from handshake.
   * </pre>
   *
   * <code>string tls_sni_hostname = 3;</code>
   * @return The bytes for tlsSniHostname.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTlsSniHostnameBytes() {
    java.lang.Object ref = tlsSniHostname_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tlsSniHostname_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LOCAL_CERTIFICATE_PROPERTIES_FIELD_NUMBER = 4;
  private io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties localCertificateProperties_;
  /**
   * <pre>
   * Properties of the local certificate used to negotiate TLS.
   * </pre>
   *
   * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties local_certificate_properties = 4;</code>
   * @return Whether the localCertificateProperties field is set.
   */
  @java.lang.Override
  public boolean hasLocalCertificateProperties() {
    return localCertificateProperties_ != null;
  }
  /**
   * <pre>
   * Properties of the local certificate used to negotiate TLS.
   * </pre>
   *
   * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties local_certificate_properties = 4;</code>
   * @return The localCertificateProperties.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties getLocalCertificateProperties() {
    return localCertificateProperties_ == null ? io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.getDefaultInstance() : localCertificateProperties_;
  }
  /**
   * <pre>
   * Properties of the local certificate used to negotiate TLS.
   * </pre>
   *
   * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties local_certificate_properties = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificatePropertiesOrBuilder getLocalCertificatePropertiesOrBuilder() {
    return getLocalCertificateProperties();
  }

  public static final int PEER_CERTIFICATE_PROPERTIES_FIELD_NUMBER = 5;
  private io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peerCertificateProperties_;
  /**
   * <pre>
   * Properties of the peer certificate used to negotiate TLS.
   * </pre>
   *
   * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peer_certificate_properties = 5;</code>
   * @return Whether the peerCertificateProperties field is set.
   */
  @java.lang.Override
  public boolean hasPeerCertificateProperties() {
    return peerCertificateProperties_ != null;
  }
  /**
   * <pre>
   * Properties of the peer certificate used to negotiate TLS.
   * </pre>
   *
   * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peer_certificate_properties = 5;</code>
   * @return The peerCertificateProperties.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties getPeerCertificateProperties() {
    return peerCertificateProperties_ == null ? io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.getDefaultInstance() : peerCertificateProperties_;
  }
  /**
   * <pre>
   * Properties of the peer certificate used to negotiate TLS.
   * </pre>
   *
   * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peer_certificate_properties = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificatePropertiesOrBuilder getPeerCertificatePropertiesOrBuilder() {
    return getPeerCertificateProperties();
  }

  public static final int TLS_SESSION_ID_FIELD_NUMBER = 6;
  private volatile java.lang.Object tlsSessionId_;
  /**
   * <pre>
   * The TLS session ID.
   * </pre>
   *
   * <code>string tls_session_id = 6;</code>
   * @return The tlsSessionId.
   */
  @java.lang.Override
  public java.lang.String getTlsSessionId() {
    java.lang.Object ref = tlsSessionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      tlsSessionId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The TLS session ID.
   * </pre>
   *
   * <code>string tls_session_id = 6;</code>
   * @return The bytes for tlsSessionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTlsSessionIdBytes() {
    java.lang.Object ref = tlsSessionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      tlsSessionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (tlsVersion_ != io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.TLSVersion.VERSION_UNSPECIFIED.getNumber()) {
      output.writeEnum(1, tlsVersion_);
    }
    if (tlsCipherSuite_ != null) {
      output.writeMessage(2, getTlsCipherSuite());
    }
    if (!getTlsSniHostnameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tlsSniHostname_);
    }
    if (localCertificateProperties_ != null) {
      output.writeMessage(4, getLocalCertificateProperties());
    }
    if (peerCertificateProperties_ != null) {
      output.writeMessage(5, getPeerCertificateProperties());
    }
    if (!getTlsSessionIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, tlsSessionId_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (tlsVersion_ != io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.TLSVersion.VERSION_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, tlsVersion_);
    }
    if (tlsCipherSuite_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTlsCipherSuite());
    }
    if (!getTlsSniHostnameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, tlsSniHostname_);
    }
    if (localCertificateProperties_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getLocalCertificateProperties());
    }
    if (peerCertificateProperties_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getPeerCertificateProperties());
    }
    if (!getTlsSessionIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, tlsSessionId_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.data.accesslog.v3.TLSProperties)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.data.accesslog.v3.TLSProperties other = (io.envoyproxy.envoy.data.accesslog.v3.TLSProperties) obj;

    if (tlsVersion_ != other.tlsVersion_) return false;
    if (hasTlsCipherSuite() != other.hasTlsCipherSuite()) return false;
    if (hasTlsCipherSuite()) {
      if (!getTlsCipherSuite()
          .equals(other.getTlsCipherSuite())) return false;
    }
    if (!getTlsSniHostname()
        .equals(other.getTlsSniHostname())) return false;
    if (hasLocalCertificateProperties() != other.hasLocalCertificateProperties()) return false;
    if (hasLocalCertificateProperties()) {
      if (!getLocalCertificateProperties()
          .equals(other.getLocalCertificateProperties())) return false;
    }
    if (hasPeerCertificateProperties() != other.hasPeerCertificateProperties()) return false;
    if (hasPeerCertificateProperties()) {
      if (!getPeerCertificateProperties()
          .equals(other.getPeerCertificateProperties())) return false;
    }
    if (!getTlsSessionId()
        .equals(other.getTlsSessionId())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TLS_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + tlsVersion_;
    if (hasTlsCipherSuite()) {
      hash = (37 * hash) + TLS_CIPHER_SUITE_FIELD_NUMBER;
      hash = (53 * hash) + getTlsCipherSuite().hashCode();
    }
    hash = (37 * hash) + TLS_SNI_HOSTNAME_FIELD_NUMBER;
    hash = (53 * hash) + getTlsSniHostname().hashCode();
    if (hasLocalCertificateProperties()) {
      hash = (37 * hash) + LOCAL_CERTIFICATE_PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + getLocalCertificateProperties().hashCode();
    }
    if (hasPeerCertificateProperties()) {
      hash = (37 * hash) + PEER_CERTIFICATE_PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + getPeerCertificateProperties().hashCode();
    }
    hash = (37 * hash) + TLS_SESSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getTlsSessionId().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Properties of a negotiated TLS connection.
   * [#next-free-field: 7]
   * </pre>
   *
   * Protobuf type {@code envoy.data.accesslog.v3.TLSProperties}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.data.accesslog.v3.TLSProperties)
      io.envoyproxy.envoy.data.accesslog.v3.TLSPropertiesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.class, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      tlsVersion_ = 0;

      if (tlsCipherSuiteBuilder_ == null) {
        tlsCipherSuite_ = null;
      } else {
        tlsCipherSuite_ = null;
        tlsCipherSuiteBuilder_ = null;
      }
      tlsSniHostname_ = "";

      if (localCertificatePropertiesBuilder_ == null) {
        localCertificateProperties_ = null;
      } else {
        localCertificateProperties_ = null;
        localCertificatePropertiesBuilder_ = null;
      }
      if (peerCertificatePropertiesBuilder_ == null) {
        peerCertificateProperties_ = null;
      } else {
        peerCertificateProperties_ = null;
        peerCertificatePropertiesBuilder_ = null;
      }
      tlsSessionId_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.data.accesslog.v3.AccesslogProto.internal_static_envoy_data_accesslog_v3_TLSProperties_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties getDefaultInstanceForType() {
      return io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties build() {
      io.envoyproxy.envoy.data.accesslog.v3.TLSProperties result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties buildPartial() {
      io.envoyproxy.envoy.data.accesslog.v3.TLSProperties result = new io.envoyproxy.envoy.data.accesslog.v3.TLSProperties(this);
      result.tlsVersion_ = tlsVersion_;
      if (tlsCipherSuiteBuilder_ == null) {
        result.tlsCipherSuite_ = tlsCipherSuite_;
      } else {
        result.tlsCipherSuite_ = tlsCipherSuiteBuilder_.build();
      }
      result.tlsSniHostname_ = tlsSniHostname_;
      if (localCertificatePropertiesBuilder_ == null) {
        result.localCertificateProperties_ = localCertificateProperties_;
      } else {
        result.localCertificateProperties_ = localCertificatePropertiesBuilder_.build();
      }
      if (peerCertificatePropertiesBuilder_ == null) {
        result.peerCertificateProperties_ = peerCertificateProperties_;
      } else {
        result.peerCertificateProperties_ = peerCertificatePropertiesBuilder_.build();
      }
      result.tlsSessionId_ = tlsSessionId_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.data.accesslog.v3.TLSProperties) {
        return mergeFrom((io.envoyproxy.envoy.data.accesslog.v3.TLSProperties)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties other) {
      if (other == io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.getDefaultInstance()) return this;
      if (other.tlsVersion_ != 0) {
        setTlsVersionValue(other.getTlsVersionValue());
      }
      if (other.hasTlsCipherSuite()) {
        mergeTlsCipherSuite(other.getTlsCipherSuite());
      }
      if (!other.getTlsSniHostname().isEmpty()) {
        tlsSniHostname_ = other.tlsSniHostname_;
        onChanged();
      }
      if (other.hasLocalCertificateProperties()) {
        mergeLocalCertificateProperties(other.getLocalCertificateProperties());
      }
      if (other.hasPeerCertificateProperties()) {
        mergePeerCertificateProperties(other.getPeerCertificateProperties());
      }
      if (!other.getTlsSessionId().isEmpty()) {
        tlsSessionId_ = other.tlsSessionId_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.data.accesslog.v3.TLSProperties parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.data.accesslog.v3.TLSProperties) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int tlsVersion_ = 0;
    /**
     * <pre>
     * Version of TLS that was negotiated.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.TLSVersion tls_version = 1;</code>
     * @return The enum numeric value on the wire for tlsVersion.
     */
    @java.lang.Override public int getTlsVersionValue() {
      return tlsVersion_;
    }
    /**
     * <pre>
     * Version of TLS that was negotiated.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.TLSVersion tls_version = 1;</code>
     * @param value The enum numeric value on the wire for tlsVersion to set.
     * @return This builder for chaining.
     */
    public Builder setTlsVersionValue(int value) {
      
      tlsVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Version of TLS that was negotiated.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.TLSVersion tls_version = 1;</code>
     * @return The tlsVersion.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.TLSVersion getTlsVersion() {
      @SuppressWarnings("deprecation")
      io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.TLSVersion result = io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.TLSVersion.valueOf(tlsVersion_);
      return result == null ? io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.TLSVersion.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Version of TLS that was negotiated.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.TLSVersion tls_version = 1;</code>
     * @param value The tlsVersion to set.
     * @return This builder for chaining.
     */
    public Builder setTlsVersion(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.TLSVersion value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      tlsVersion_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Version of TLS that was negotiated.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.TLSVersion tls_version = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTlsVersion() {
      
      tlsVersion_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.UInt32Value tlsCipherSuite_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> tlsCipherSuiteBuilder_;
    /**
     * <pre>
     * TLS cipher suite negotiated during handshake. The value is a
     * four-digit hex code defined by the IANA TLS Cipher Suite Registry
     * (e.g. ``009C`` for ``TLS_RSA_WITH_AES_128_GCM_SHA256``).
     * Here it is expressed as an integer.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value tls_cipher_suite = 2;</code>
     * @return Whether the tlsCipherSuite field is set.
     */
    public boolean hasTlsCipherSuite() {
      return tlsCipherSuiteBuilder_ != null || tlsCipherSuite_ != null;
    }
    /**
     * <pre>
     * TLS cipher suite negotiated during handshake. The value is a
     * four-digit hex code defined by the IANA TLS Cipher Suite Registry
     * (e.g. ``009C`` for ``TLS_RSA_WITH_AES_128_GCM_SHA256``).
     * Here it is expressed as an integer.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value tls_cipher_suite = 2;</code>
     * @return The tlsCipherSuite.
     */
    public com.google.protobuf.UInt32Value getTlsCipherSuite() {
      if (tlsCipherSuiteBuilder_ == null) {
        return tlsCipherSuite_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : tlsCipherSuite_;
      } else {
        return tlsCipherSuiteBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * TLS cipher suite negotiated during handshake. The value is a
     * four-digit hex code defined by the IANA TLS Cipher Suite Registry
     * (e.g. ``009C`` for ``TLS_RSA_WITH_AES_128_GCM_SHA256``).
     * Here it is expressed as an integer.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value tls_cipher_suite = 2;</code>
     */
    public Builder setTlsCipherSuite(com.google.protobuf.UInt32Value value) {
      if (tlsCipherSuiteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tlsCipherSuite_ = value;
        onChanged();
      } else {
        tlsCipherSuiteBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * TLS cipher suite negotiated during handshake. The value is a
     * four-digit hex code defined by the IANA TLS Cipher Suite Registry
     * (e.g. ``009C`` for ``TLS_RSA_WITH_AES_128_GCM_SHA256``).
     * Here it is expressed as an integer.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value tls_cipher_suite = 2;</code>
     */
    public Builder setTlsCipherSuite(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (tlsCipherSuiteBuilder_ == null) {
        tlsCipherSuite_ = builderForValue.build();
        onChanged();
      } else {
        tlsCipherSuiteBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * TLS cipher suite negotiated during handshake. The value is a
     * four-digit hex code defined by the IANA TLS Cipher Suite Registry
     * (e.g. ``009C`` for ``TLS_RSA_WITH_AES_128_GCM_SHA256``).
     * Here it is expressed as an integer.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value tls_cipher_suite = 2;</code>
     */
    public Builder mergeTlsCipherSuite(com.google.protobuf.UInt32Value value) {
      if (tlsCipherSuiteBuilder_ == null) {
        if (tlsCipherSuite_ != null) {
          tlsCipherSuite_ =
            com.google.protobuf.UInt32Value.newBuilder(tlsCipherSuite_).mergeFrom(value).buildPartial();
        } else {
          tlsCipherSuite_ = value;
        }
        onChanged();
      } else {
        tlsCipherSuiteBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * TLS cipher suite negotiated during handshake. The value is a
     * four-digit hex code defined by the IANA TLS Cipher Suite Registry
     * (e.g. ``009C`` for ``TLS_RSA_WITH_AES_128_GCM_SHA256``).
     * Here it is expressed as an integer.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value tls_cipher_suite = 2;</code>
     */
    public Builder clearTlsCipherSuite() {
      if (tlsCipherSuiteBuilder_ == null) {
        tlsCipherSuite_ = null;
        onChanged();
      } else {
        tlsCipherSuite_ = null;
        tlsCipherSuiteBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * TLS cipher suite negotiated during handshake. The value is a
     * four-digit hex code defined by the IANA TLS Cipher Suite Registry
     * (e.g. ``009C`` for ``TLS_RSA_WITH_AES_128_GCM_SHA256``).
     * Here it is expressed as an integer.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value tls_cipher_suite = 2;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getTlsCipherSuiteBuilder() {
      
      onChanged();
      return getTlsCipherSuiteFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * TLS cipher suite negotiated during handshake. The value is a
     * four-digit hex code defined by the IANA TLS Cipher Suite Registry
     * (e.g. ``009C`` for ``TLS_RSA_WITH_AES_128_GCM_SHA256``).
     * Here it is expressed as an integer.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value tls_cipher_suite = 2;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getTlsCipherSuiteOrBuilder() {
      if (tlsCipherSuiteBuilder_ != null) {
        return tlsCipherSuiteBuilder_.getMessageOrBuilder();
      } else {
        return tlsCipherSuite_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : tlsCipherSuite_;
      }
    }
    /**
     * <pre>
     * TLS cipher suite negotiated during handshake. The value is a
     * four-digit hex code defined by the IANA TLS Cipher Suite Registry
     * (e.g. ``009C`` for ``TLS_RSA_WITH_AES_128_GCM_SHA256``).
     * Here it is expressed as an integer.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value tls_cipher_suite = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getTlsCipherSuiteFieldBuilder() {
      if (tlsCipherSuiteBuilder_ == null) {
        tlsCipherSuiteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getTlsCipherSuite(),
                getParentForChildren(),
                isClean());
        tlsCipherSuite_ = null;
      }
      return tlsCipherSuiteBuilder_;
    }

    private java.lang.Object tlsSniHostname_ = "";
    /**
     * <pre>
     * SNI hostname from handshake.
     * </pre>
     *
     * <code>string tls_sni_hostname = 3;</code>
     * @return The tlsSniHostname.
     */
    public java.lang.String getTlsSniHostname() {
      java.lang.Object ref = tlsSniHostname_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tlsSniHostname_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * SNI hostname from handshake.
     * </pre>
     *
     * <code>string tls_sni_hostname = 3;</code>
     * @return The bytes for tlsSniHostname.
     */
    public com.google.protobuf.ByteString
        getTlsSniHostnameBytes() {
      java.lang.Object ref = tlsSniHostname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tlsSniHostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * SNI hostname from handshake.
     * </pre>
     *
     * <code>string tls_sni_hostname = 3;</code>
     * @param value The tlsSniHostname to set.
     * @return This builder for chaining.
     */
    public Builder setTlsSniHostname(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      tlsSniHostname_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SNI hostname from handshake.
     * </pre>
     *
     * <code>string tls_sni_hostname = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTlsSniHostname() {
      
      tlsSniHostname_ = getDefaultInstance().getTlsSniHostname();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SNI hostname from handshake.
     * </pre>
     *
     * <code>string tls_sni_hostname = 3;</code>
     * @param value The bytes for tlsSniHostname to set.
     * @return This builder for chaining.
     */
    public Builder setTlsSniHostnameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      tlsSniHostname_ = value;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties localCertificateProperties_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificatePropertiesOrBuilder> localCertificatePropertiesBuilder_;
    /**
     * <pre>
     * Properties of the local certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties local_certificate_properties = 4;</code>
     * @return Whether the localCertificateProperties field is set.
     */
    public boolean hasLocalCertificateProperties() {
      return localCertificatePropertiesBuilder_ != null || localCertificateProperties_ != null;
    }
    /**
     * <pre>
     * Properties of the local certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties local_certificate_properties = 4;</code>
     * @return The localCertificateProperties.
     */
    public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties getLocalCertificateProperties() {
      if (localCertificatePropertiesBuilder_ == null) {
        return localCertificateProperties_ == null ? io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.getDefaultInstance() : localCertificateProperties_;
      } else {
        return localCertificatePropertiesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Properties of the local certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties local_certificate_properties = 4;</code>
     */
    public Builder setLocalCertificateProperties(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties value) {
      if (localCertificatePropertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        localCertificateProperties_ = value;
        onChanged();
      } else {
        localCertificatePropertiesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Properties of the local certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties local_certificate_properties = 4;</code>
     */
    public Builder setLocalCertificateProperties(
        io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder builderForValue) {
      if (localCertificatePropertiesBuilder_ == null) {
        localCertificateProperties_ = builderForValue.build();
        onChanged();
      } else {
        localCertificatePropertiesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Properties of the local certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties local_certificate_properties = 4;</code>
     */
    public Builder mergeLocalCertificateProperties(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties value) {
      if (localCertificatePropertiesBuilder_ == null) {
        if (localCertificateProperties_ != null) {
          localCertificateProperties_ =
            io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.newBuilder(localCertificateProperties_).mergeFrom(value).buildPartial();
        } else {
          localCertificateProperties_ = value;
        }
        onChanged();
      } else {
        localCertificatePropertiesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Properties of the local certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties local_certificate_properties = 4;</code>
     */
    public Builder clearLocalCertificateProperties() {
      if (localCertificatePropertiesBuilder_ == null) {
        localCertificateProperties_ = null;
        onChanged();
      } else {
        localCertificateProperties_ = null;
        localCertificatePropertiesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Properties of the local certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties local_certificate_properties = 4;</code>
     */
    public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder getLocalCertificatePropertiesBuilder() {
      
      onChanged();
      return getLocalCertificatePropertiesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Properties of the local certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties local_certificate_properties = 4;</code>
     */
    public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificatePropertiesOrBuilder getLocalCertificatePropertiesOrBuilder() {
      if (localCertificatePropertiesBuilder_ != null) {
        return localCertificatePropertiesBuilder_.getMessageOrBuilder();
      } else {
        return localCertificateProperties_ == null ?
            io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.getDefaultInstance() : localCertificateProperties_;
      }
    }
    /**
     * <pre>
     * Properties of the local certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties local_certificate_properties = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificatePropertiesOrBuilder> 
        getLocalCertificatePropertiesFieldBuilder() {
      if (localCertificatePropertiesBuilder_ == null) {
        localCertificatePropertiesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificatePropertiesOrBuilder>(
                getLocalCertificateProperties(),
                getParentForChildren(),
                isClean());
        localCertificateProperties_ = null;
      }
      return localCertificatePropertiesBuilder_;
    }

    private io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peerCertificateProperties_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificatePropertiesOrBuilder> peerCertificatePropertiesBuilder_;
    /**
     * <pre>
     * Properties of the peer certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peer_certificate_properties = 5;</code>
     * @return Whether the peerCertificateProperties field is set.
     */
    public boolean hasPeerCertificateProperties() {
      return peerCertificatePropertiesBuilder_ != null || peerCertificateProperties_ != null;
    }
    /**
     * <pre>
     * Properties of the peer certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peer_certificate_properties = 5;</code>
     * @return The peerCertificateProperties.
     */
    public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties getPeerCertificateProperties() {
      if (peerCertificatePropertiesBuilder_ == null) {
        return peerCertificateProperties_ == null ? io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.getDefaultInstance() : peerCertificateProperties_;
      } else {
        return peerCertificatePropertiesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Properties of the peer certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peer_certificate_properties = 5;</code>
     */
    public Builder setPeerCertificateProperties(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties value) {
      if (peerCertificatePropertiesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        peerCertificateProperties_ = value;
        onChanged();
      } else {
        peerCertificatePropertiesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Properties of the peer certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peer_certificate_properties = 5;</code>
     */
    public Builder setPeerCertificateProperties(
        io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder builderForValue) {
      if (peerCertificatePropertiesBuilder_ == null) {
        peerCertificateProperties_ = builderForValue.build();
        onChanged();
      } else {
        peerCertificatePropertiesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Properties of the peer certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peer_certificate_properties = 5;</code>
     */
    public Builder mergePeerCertificateProperties(io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties value) {
      if (peerCertificatePropertiesBuilder_ == null) {
        if (peerCertificateProperties_ != null) {
          peerCertificateProperties_ =
            io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.newBuilder(peerCertificateProperties_).mergeFrom(value).buildPartial();
        } else {
          peerCertificateProperties_ = value;
        }
        onChanged();
      } else {
        peerCertificatePropertiesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Properties of the peer certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peer_certificate_properties = 5;</code>
     */
    public Builder clearPeerCertificateProperties() {
      if (peerCertificatePropertiesBuilder_ == null) {
        peerCertificateProperties_ = null;
        onChanged();
      } else {
        peerCertificateProperties_ = null;
        peerCertificatePropertiesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Properties of the peer certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peer_certificate_properties = 5;</code>
     */
    public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder getPeerCertificatePropertiesBuilder() {
      
      onChanged();
      return getPeerCertificatePropertiesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Properties of the peer certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peer_certificate_properties = 5;</code>
     */
    public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificatePropertiesOrBuilder getPeerCertificatePropertiesOrBuilder() {
      if (peerCertificatePropertiesBuilder_ != null) {
        return peerCertificatePropertiesBuilder_.getMessageOrBuilder();
      } else {
        return peerCertificateProperties_ == null ?
            io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.getDefaultInstance() : peerCertificateProperties_;
      }
    }
    /**
     * <pre>
     * Properties of the peer certificate used to negotiate TLS.
     * </pre>
     *
     * <code>.envoy.data.accesslog.v3.TLSProperties.CertificateProperties peer_certificate_properties = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificatePropertiesOrBuilder> 
        getPeerCertificatePropertiesFieldBuilder() {
      if (peerCertificatePropertiesBuilder_ == null) {
        peerCertificatePropertiesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificateProperties.Builder, io.envoyproxy.envoy.data.accesslog.v3.TLSProperties.CertificatePropertiesOrBuilder>(
                getPeerCertificateProperties(),
                getParentForChildren(),
                isClean());
        peerCertificateProperties_ = null;
      }
      return peerCertificatePropertiesBuilder_;
    }

    private java.lang.Object tlsSessionId_ = "";
    /**
     * <pre>
     * The TLS session ID.
     * </pre>
     *
     * <code>string tls_session_id = 6;</code>
     * @return The tlsSessionId.
     */
    public java.lang.String getTlsSessionId() {
      java.lang.Object ref = tlsSessionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tlsSessionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The TLS session ID.
     * </pre>
     *
     * <code>string tls_session_id = 6;</code>
     * @return The bytes for tlsSessionId.
     */
    public com.google.protobuf.ByteString
        getTlsSessionIdBytes() {
      java.lang.Object ref = tlsSessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tlsSessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The TLS session ID.
     * </pre>
     *
     * <code>string tls_session_id = 6;</code>
     * @param value The tlsSessionId to set.
     * @return This builder for chaining.
     */
    public Builder setTlsSessionId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      tlsSessionId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The TLS session ID.
     * </pre>
     *
     * <code>string tls_session_id = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearTlsSessionId() {
      
      tlsSessionId_ = getDefaultInstance().getTlsSessionId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The TLS session ID.
     * </pre>
     *
     * <code>string tls_session_id = 6;</code>
     * @param value The bytes for tlsSessionId to set.
     * @return This builder for chaining.
     */
    public Builder setTlsSessionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      tlsSessionId_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.data.accesslog.v3.TLSProperties)
  }

  // @@protoc_insertion_point(class_scope:envoy.data.accesslog.v3.TLSProperties)
  private static final io.envoyproxy.envoy.data.accesslog.v3.TLSProperties DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.data.accesslog.v3.TLSProperties();
  }

  public static io.envoyproxy.envoy.data.accesslog.v3.TLSProperties getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TLSProperties>
      PARSER = new com.google.protobuf.AbstractParser<TLSProperties>() {
    @java.lang.Override
    public TLSProperties parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TLSProperties(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TLSProperties> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TLSProperties> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.data.accesslog.v3.TLSProperties getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

