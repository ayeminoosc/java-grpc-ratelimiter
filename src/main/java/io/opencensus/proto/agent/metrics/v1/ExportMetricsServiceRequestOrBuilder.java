// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opencensus/proto/agent/metrics/v1/metrics_service.proto

package io.opencensus.proto.agent.metrics.v1;

public interface ExportMetricsServiceRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencensus.proto.agent.metrics.v1.ExportMetricsServiceRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * This is required only in the first message on the stream or if the
   * previous sent ExportMetricsServiceRequest message has a different Node (e.g.
   * when the same RPC is used to send Metrics from multiple Applications).
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.Node node = 1;</code>
   * @return Whether the node field is set.
   */
  boolean hasNode();
  /**
   * <pre>
   * This is required only in the first message on the stream or if the
   * previous sent ExportMetricsServiceRequest message has a different Node (e.g.
   * when the same RPC is used to send Metrics from multiple Applications).
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.Node node = 1;</code>
   * @return The node.
   */
  io.opencensus.proto.agent.common.v1.Node getNode();
  /**
   * <pre>
   * This is required only in the first message on the stream or if the
   * previous sent ExportMetricsServiceRequest message has a different Node (e.g.
   * when the same RPC is used to send Metrics from multiple Applications).
   * </pre>
   *
   * <code>.opencensus.proto.agent.common.v1.Node node = 1;</code>
   */
  io.opencensus.proto.agent.common.v1.NodeOrBuilder getNodeOrBuilder();

  /**
   * <pre>
   * A list of metrics that belong to the last received Node.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Metric metrics = 2;</code>
   */
  java.util.List<io.opencensus.proto.metrics.v1.Metric> 
      getMetricsList();
  /**
   * <pre>
   * A list of metrics that belong to the last received Node.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Metric metrics = 2;</code>
   */
  io.opencensus.proto.metrics.v1.Metric getMetrics(int index);
  /**
   * <pre>
   * A list of metrics that belong to the last received Node.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Metric metrics = 2;</code>
   */
  int getMetricsCount();
  /**
   * <pre>
   * A list of metrics that belong to the last received Node.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Metric metrics = 2;</code>
   */
  java.util.List<? extends io.opencensus.proto.metrics.v1.MetricOrBuilder> 
      getMetricsOrBuilderList();
  /**
   * <pre>
   * A list of metrics that belong to the last received Node.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.Metric metrics = 2;</code>
   */
  io.opencensus.proto.metrics.v1.MetricOrBuilder getMetricsOrBuilder(
      int index);

  /**
   * <pre>
   * The resource for the metrics in this message that do not have an explicit
   * resource set.
   * If unset, the most recently set resource in the RPC stream applies. It is
   * valid to never be set within a stream, e.g. when no resource info is known
   * at all or when all sent metrics have an explicit resource set.
   * </pre>
   *
   * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
   * @return Whether the resource field is set.
   */
  boolean hasResource();
  /**
   * <pre>
   * The resource for the metrics in this message that do not have an explicit
   * resource set.
   * If unset, the most recently set resource in the RPC stream applies. It is
   * valid to never be set within a stream, e.g. when no resource info is known
   * at all or when all sent metrics have an explicit resource set.
   * </pre>
   *
   * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
   * @return The resource.
   */
  io.opencensus.proto.resource.v1.Resource getResource();
  /**
   * <pre>
   * The resource for the metrics in this message that do not have an explicit
   * resource set.
   * If unset, the most recently set resource in the RPC stream applies. It is
   * valid to never be set within a stream, e.g. when no resource info is known
   * at all or when all sent metrics have an explicit resource set.
   * </pre>
   *
   * <code>.opencensus.proto.resource.v1.Resource resource = 3;</code>
   */
  io.opencensus.proto.resource.v1.ResourceOrBuilder getResourceOrBuilder();
}
