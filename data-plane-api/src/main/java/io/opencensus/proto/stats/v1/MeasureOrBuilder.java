// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opencensus/proto/stats/v1/stats.proto

package io.opencensus.proto.stats.v1;

public interface MeasureOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencensus.proto.stats.v1.Measure)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A string by which the measure will be referred to, e.g. "rpc_server_latency". Names MUST be
   * unique within the library.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * A string by which the measure will be referred to, e.g. "rpc_server_latency". Names MUST be
   * unique within the library.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Describes the measure, e.g. "RPC latency in seconds".
   * </pre>
   *
   * <code>string description = 2;</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * Describes the measure, e.g. "RPC latency in seconds".
   * </pre>
   *
   * <code>string description = 2;</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * Describes the unit used for the Measure. Follows the format described by
   * http://unitsofmeasure.org/ucum.html.
   * </pre>
   *
   * <code>string unit = 3;</code>
   * @return The unit.
   */
  java.lang.String getUnit();
  /**
   * <pre>
   * Describes the unit used for the Measure. Follows the format described by
   * http://unitsofmeasure.org/ucum.html.
   * </pre>
   *
   * <code>string unit = 3;</code>
   * @return The bytes for unit.
   */
  com.google.protobuf.ByteString
      getUnitBytes();

  /**
   * <pre>
   * The type used for this Measure.
   * </pre>
   *
   * <code>.opencensus.proto.stats.v1.Measure.Type type = 4;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <pre>
   * The type used for this Measure.
   * </pre>
   *
   * <code>.opencensus.proto.stats.v1.Measure.Type type = 4;</code>
   * @return The type.
   */
  io.opencensus.proto.stats.v1.Measure.Type getType();
}
