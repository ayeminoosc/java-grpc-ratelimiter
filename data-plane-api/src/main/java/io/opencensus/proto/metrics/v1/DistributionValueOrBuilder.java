// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opencensus/proto/metrics/v1/metrics.proto

package io.opencensus.proto.metrics.v1;

public interface DistributionValueOrBuilder extends
    // @@protoc_insertion_point(interface_extends:opencensus.proto.metrics.v1.DistributionValue)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The number of values in the population. Must be non-negative. This value
   * must equal the sum of the values in bucket_counts if a histogram is
   * provided.
   * </pre>
   *
   * <code>int64 count = 1;</code>
   * @return The count.
   */
  long getCount();

  /**
   * <pre>
   * The sum of the values in the population. If count is zero then this field
   * must be zero.
   * </pre>
   *
   * <code>double sum = 2;</code>
   * @return The sum.
   */
  double getSum();

  /**
   * <pre>
   * The sum of squared deviations from the mean of the values in the
   * population. For values x_i this is:
   *     Sum[i=1..n]((x_i - mean)^2)
   * Knuth, "The Art of Computer Programming", Vol. 2, page 323, 3rd edition
   * describes Welford's method for accumulating this sum in one pass.
   * If count is zero then this field must be zero.
   * </pre>
   *
   * <code>double sum_of_squared_deviation = 3;</code>
   * @return The sumOfSquaredDeviation.
   */
  double getSumOfSquaredDeviation();

  /**
   * <pre>
   * Don't change bucket boundaries within a TimeSeries if your backend doesn't
   * support this.
   * TODO(issue #152): consider not required to send bucket options for
   * optimization.
   * </pre>
   *
   * <code>.opencensus.proto.metrics.v1.DistributionValue.BucketOptions bucket_options = 4;</code>
   * @return Whether the bucketOptions field is set.
   */
  boolean hasBucketOptions();
  /**
   * <pre>
   * Don't change bucket boundaries within a TimeSeries if your backend doesn't
   * support this.
   * TODO(issue #152): consider not required to send bucket options for
   * optimization.
   * </pre>
   *
   * <code>.opencensus.proto.metrics.v1.DistributionValue.BucketOptions bucket_options = 4;</code>
   * @return The bucketOptions.
   */
  io.opencensus.proto.metrics.v1.DistributionValue.BucketOptions getBucketOptions();
  /**
   * <pre>
   * Don't change bucket boundaries within a TimeSeries if your backend doesn't
   * support this.
   * TODO(issue #152): consider not required to send bucket options for
   * optimization.
   * </pre>
   *
   * <code>.opencensus.proto.metrics.v1.DistributionValue.BucketOptions bucket_options = 4;</code>
   */
  io.opencensus.proto.metrics.v1.DistributionValue.BucketOptionsOrBuilder getBucketOptionsOrBuilder();

  /**
   * <pre>
   * If the distribution does not have a histogram, then omit this field.
   * If there is a histogram, then the sum of the values in the Bucket counts
   * must equal the value in the count field of the distribution.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.DistributionValue.Bucket buckets = 5;</code>
   */
  java.util.List<io.opencensus.proto.metrics.v1.DistributionValue.Bucket> 
      getBucketsList();
  /**
   * <pre>
   * If the distribution does not have a histogram, then omit this field.
   * If there is a histogram, then the sum of the values in the Bucket counts
   * must equal the value in the count field of the distribution.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.DistributionValue.Bucket buckets = 5;</code>
   */
  io.opencensus.proto.metrics.v1.DistributionValue.Bucket getBuckets(int index);
  /**
   * <pre>
   * If the distribution does not have a histogram, then omit this field.
   * If there is a histogram, then the sum of the values in the Bucket counts
   * must equal the value in the count field of the distribution.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.DistributionValue.Bucket buckets = 5;</code>
   */
  int getBucketsCount();
  /**
   * <pre>
   * If the distribution does not have a histogram, then omit this field.
   * If there is a histogram, then the sum of the values in the Bucket counts
   * must equal the value in the count field of the distribution.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.DistributionValue.Bucket buckets = 5;</code>
   */
  java.util.List<? extends io.opencensus.proto.metrics.v1.DistributionValue.BucketOrBuilder> 
      getBucketsOrBuilderList();
  /**
   * <pre>
   * If the distribution does not have a histogram, then omit this field.
   * If there is a histogram, then the sum of the values in the Bucket counts
   * must equal the value in the count field of the distribution.
   * </pre>
   *
   * <code>repeated .opencensus.proto.metrics.v1.DistributionValue.Bucket buckets = 5;</code>
   */
  io.opencensus.proto.metrics.v1.DistributionValue.BucketOrBuilder getBucketsOrBuilder(
      int index);
}
