// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/tap/v3/common.proto

package io.envoyproxy.envoy.config.tap.v3;

public interface OutputConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.tap.v3.OutputConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
   * sink types are supported this constraint will be relaxed.
   * </pre>
   *
   * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
   */
  java.util.List<io.envoyproxy.envoy.config.tap.v3.OutputSink> 
      getSinksList();
  /**
   * <pre>
   * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
   * sink types are supported this constraint will be relaxed.
   * </pre>
   *
   * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.tap.v3.OutputSink getSinks(int index);
  /**
   * <pre>
   * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
   * sink types are supported this constraint will be relaxed.
   * </pre>
   *
   * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
   */
  int getSinksCount();
  /**
   * <pre>
   * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
   * sink types are supported this constraint will be relaxed.
   * </pre>
   *
   * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.tap.v3.OutputSinkOrBuilder> 
      getSinksOrBuilderList();
  /**
   * <pre>
   * Output sinks for tap data. Currently a single sink is allowed in the list. Once multiple
   * sink types are supported this constraint will be relaxed.
   * </pre>
   *
   * <code>repeated .envoy.config.tap.v3.OutputSink sinks = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.tap.v3.OutputSinkOrBuilder getSinksOrBuilder(
      int index);

  /**
   * <pre>
   * For buffered tapping, the maximum amount of received body that will be buffered prior to
   * truncation. If truncation occurs, the :ref:`truncated
   * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
   * default is 1KiB.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
   * @return Whether the maxBufferedRxBytes field is set.
   */
  boolean hasMaxBufferedRxBytes();
  /**
   * <pre>
   * For buffered tapping, the maximum amount of received body that will be buffered prior to
   * truncation. If truncation occurs, the :ref:`truncated
   * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
   * default is 1KiB.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
   * @return The maxBufferedRxBytes.
   */
  com.google.protobuf.UInt32Value getMaxBufferedRxBytes();
  /**
   * <pre>
   * For buffered tapping, the maximum amount of received body that will be buffered prior to
   * truncation. If truncation occurs, the :ref:`truncated
   * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
   * default is 1KiB.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_buffered_rx_bytes = 2;</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getMaxBufferedRxBytesOrBuilder();

  /**
   * <pre>
   * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
   * truncation. If truncation occurs, the :ref:`truncated
   * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
   * default is 1KiB.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
   * @return Whether the maxBufferedTxBytes field is set.
   */
  boolean hasMaxBufferedTxBytes();
  /**
   * <pre>
   * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
   * truncation. If truncation occurs, the :ref:`truncated
   * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
   * default is 1KiB.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
   * @return The maxBufferedTxBytes.
   */
  com.google.protobuf.UInt32Value getMaxBufferedTxBytes();
  /**
   * <pre>
   * For buffered tapping, the maximum amount of transmitted body that will be buffered prior to
   * truncation. If truncation occurs, the :ref:`truncated
   * &lt;envoy_api_field_data.tap.v3.Body.truncated&gt;` field will be set. If not specified, the
   * default is 1KiB.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_buffered_tx_bytes = 3;</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getMaxBufferedTxBytesOrBuilder();

  /**
   * <pre>
   * Indicates whether taps produce a single buffered message per tap, or multiple streamed
   * messages per tap in the emitted :ref:`TraceWrapper
   * &lt;envoy_api_msg_data.tap.v3.TraceWrapper&gt;` messages. Note that streamed tapping does not
   * mean that no buffering takes place. Buffering may be required if data is processed before a
   * match can be determined. See the HTTP tap filter :ref:`streaming
   * &lt;config_http_filters_tap_streaming&gt;` documentation for more information.
   * </pre>
   *
   * <code>bool streaming = 4;</code>
   * @return The streaming.
   */
  boolean getStreaming();
}
