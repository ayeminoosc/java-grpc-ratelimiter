// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/listener/v3/api_listener.proto

package io.envoyproxy.envoy.config.listener.v3;

public interface ApiListenerOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.listener.v3.ApiListener)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The type in this field determines the type of API listener. At present, the following
   * types are supported:
   * envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager (HTTP)
   * [#next-major-version: In the v3 API, replace this Any field with a oneof containing the
   * specific config message for each type of API listener. We could not do this in v2 because
   * it would have caused circular dependencies for go protos: lds.proto depends on this file,
   * and http_connection_manager.proto depends on rds.proto, which is in the same directory as
   * lds.proto, so lds.proto cannot depend on this file.]
   * </pre>
   *
   * <code>.google.protobuf.Any api_listener = 1;</code>
   * @return Whether the apiListener field is set.
   */
  boolean hasApiListener();
  /**
   * <pre>
   * The type in this field determines the type of API listener. At present, the following
   * types are supported:
   * envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager (HTTP)
   * [#next-major-version: In the v3 API, replace this Any field with a oneof containing the
   * specific config message for each type of API listener. We could not do this in v2 because
   * it would have caused circular dependencies for go protos: lds.proto depends on this file,
   * and http_connection_manager.proto depends on rds.proto, which is in the same directory as
   * lds.proto, so lds.proto cannot depend on this file.]
   * </pre>
   *
   * <code>.google.protobuf.Any api_listener = 1;</code>
   * @return The apiListener.
   */
  com.google.protobuf.Any getApiListener();
  /**
   * <pre>
   * The type in this field determines the type of API listener. At present, the following
   * types are supported:
   * envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager (HTTP)
   * [#next-major-version: In the v3 API, replace this Any field with a oneof containing the
   * specific config message for each type of API listener. We could not do this in v2 because
   * it would have caused circular dependencies for go protos: lds.proto depends on this file,
   * and http_connection_manager.proto depends on rds.proto, which is in the same directory as
   * lds.proto, so lds.proto cannot depend on this file.]
   * </pre>
   *
   * <code>.google.protobuf.Any api_listener = 1;</code>
   */
  com.google.protobuf.AnyOrBuilder getApiListenerOrBuilder();
}
