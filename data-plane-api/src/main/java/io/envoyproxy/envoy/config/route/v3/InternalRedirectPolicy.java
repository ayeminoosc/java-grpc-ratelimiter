// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/route/v3/route_components.proto

package io.envoyproxy.envoy.config.route.v3;

/**
 * <pre>
 * HTTP Internal Redirect :ref:`architecture overview &lt;arch_overview_internal_redirects&gt;`.
 * </pre>
 *
 * Protobuf type {@code envoy.config.route.v3.InternalRedirectPolicy}
 */
public final class InternalRedirectPolicy extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.route.v3.InternalRedirectPolicy)
    InternalRedirectPolicyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use InternalRedirectPolicy.newBuilder() to construct.
  private InternalRedirectPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private InternalRedirectPolicy() {
    redirectResponseCodes_ = emptyIntList();
    predicates_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new InternalRedirectPolicy();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private InternalRedirectPolicy(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (maxInternalRedirects_ != null) {
              subBuilder = maxInternalRedirects_.toBuilder();
            }
            maxInternalRedirects_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maxInternalRedirects_);
              maxInternalRedirects_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              redirectResponseCodes_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            redirectResponseCodes_.addInt(input.readUInt32());
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              redirectResponseCodes_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              redirectResponseCodes_.addInt(input.readUInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              predicates_ = new java.util.ArrayList<io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig>();
              mutable_bitField0_ |= 0x00000002;
            }
            predicates_.add(
                input.readMessage(io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.parser(), extensionRegistry));
            break;
          }
          case 32: {

            allowCrossSchemeRedirect_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        redirectResponseCodes_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        predicates_ = java.util.Collections.unmodifiableList(predicates_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_InternalRedirectPolicy_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_InternalRedirectPolicy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.class, io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.Builder.class);
  }

  public static final int MAX_INTERNAL_REDIRECTS_FIELD_NUMBER = 1;
  private com.google.protobuf.UInt32Value maxInternalRedirects_;
  /**
   * <pre>
   * An internal redirect is not handled, unless the number of previous internal redirects that a
   * downstream request has encountered is lower than this value.
   * In the case where a downstream request is bounced among multiple routes by internal redirect,
   * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
   * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
   * will pass the redirect back to downstream.
   * If not specified, at most one redirect will be followed.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
   * @return Whether the maxInternalRedirects field is set.
   */
  @java.lang.Override
  public boolean hasMaxInternalRedirects() {
    return maxInternalRedirects_ != null;
  }
  /**
   * <pre>
   * An internal redirect is not handled, unless the number of previous internal redirects that a
   * downstream request has encountered is lower than this value.
   * In the case where a downstream request is bounced among multiple routes by internal redirect,
   * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
   * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
   * will pass the redirect back to downstream.
   * If not specified, at most one redirect will be followed.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
   * @return The maxInternalRedirects.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getMaxInternalRedirects() {
    return maxInternalRedirects_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxInternalRedirects_;
  }
  /**
   * <pre>
   * An internal redirect is not handled, unless the number of previous internal redirects that a
   * downstream request has encountered is lower than this value.
   * In the case where a downstream request is bounced among multiple routes by internal redirect,
   * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
   * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
   * will pass the redirect back to downstream.
   * If not specified, at most one redirect will be followed.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getMaxInternalRedirectsOrBuilder() {
    return getMaxInternalRedirects();
  }

  public static final int REDIRECT_RESPONSE_CODES_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.IntList redirectResponseCodes_;
  /**
   * <pre>
   * Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,
   * only 302 will be treated as internal redirect.
   * Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.
   * </pre>
   *
   * <code>repeated uint32 redirect_response_codes = 2 [(.validate.rules) = { ... }</code>
   * @return A list containing the redirectResponseCodes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getRedirectResponseCodesList() {
    return redirectResponseCodes_;
  }
  /**
   * <pre>
   * Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,
   * only 302 will be treated as internal redirect.
   * Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.
   * </pre>
   *
   * <code>repeated uint32 redirect_response_codes = 2 [(.validate.rules) = { ... }</code>
   * @return The count of redirectResponseCodes.
   */
  public int getRedirectResponseCodesCount() {
    return redirectResponseCodes_.size();
  }
  /**
   * <pre>
   * Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,
   * only 302 will be treated as internal redirect.
   * Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.
   * </pre>
   *
   * <code>repeated uint32 redirect_response_codes = 2 [(.validate.rules) = { ... }</code>
   * @param index The index of the element to return.
   * @return The redirectResponseCodes at the given index.
   */
  public int getRedirectResponseCodes(int index) {
    return redirectResponseCodes_.getInt(index);
  }
  private int redirectResponseCodesMemoizedSerializedSize = -1;

  public static final int PREDICATES_FIELD_NUMBER = 3;
  private java.util.List<io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig> predicates_;
  /**
   * <pre>
   * Specifies a list of predicates that are queried when an upstream response is deemed
   * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
   * the redirect, causing the response to be proxied to downstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig> getPredicatesList() {
    return predicates_;
  }
  /**
   * <pre>
   * Specifies a list of predicates that are queried when an upstream response is deemed
   * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
   * the redirect, causing the response to be proxied to downstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder> 
      getPredicatesOrBuilderList() {
    return predicates_;
  }
  /**
   * <pre>
   * Specifies a list of predicates that are queried when an upstream response is deemed
   * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
   * the redirect, causing the response to be proxied to downstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
   */
  @java.lang.Override
  public int getPredicatesCount() {
    return predicates_.size();
  }
  /**
   * <pre>
   * Specifies a list of predicates that are queried when an upstream response is deemed
   * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
   * the redirect, causing the response to be proxied to downstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getPredicates(int index) {
    return predicates_.get(index);
  }
  /**
   * <pre>
   * Specifies a list of predicates that are queried when an upstream response is deemed
   * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
   * the redirect, causing the response to be proxied to downstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getPredicatesOrBuilder(
      int index) {
    return predicates_.get(index);
  }

  public static final int ALLOW_CROSS_SCHEME_REDIRECT_FIELD_NUMBER = 4;
  private boolean allowCrossSchemeRedirect_;
  /**
   * <pre>
   * Allow internal redirect to follow a target URI with a different scheme than the value of
   * x-forwarded-proto. The default is false.
   * </pre>
   *
   * <code>bool allow_cross_scheme_redirect = 4;</code>
   * @return The allowCrossSchemeRedirect.
   */
  @java.lang.Override
  public boolean getAllowCrossSchemeRedirect() {
    return allowCrossSchemeRedirect_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (maxInternalRedirects_ != null) {
      output.writeMessage(1, getMaxInternalRedirects());
    }
    if (getRedirectResponseCodesList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(redirectResponseCodesMemoizedSerializedSize);
    }
    for (int i = 0; i < redirectResponseCodes_.size(); i++) {
      output.writeUInt32NoTag(redirectResponseCodes_.getInt(i));
    }
    for (int i = 0; i < predicates_.size(); i++) {
      output.writeMessage(3, predicates_.get(i));
    }
    if (allowCrossSchemeRedirect_ != false) {
      output.writeBool(4, allowCrossSchemeRedirect_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (maxInternalRedirects_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getMaxInternalRedirects());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < redirectResponseCodes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(redirectResponseCodes_.getInt(i));
      }
      size += dataSize;
      if (!getRedirectResponseCodesList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      redirectResponseCodesMemoizedSerializedSize = dataSize;
    }
    for (int i = 0; i < predicates_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, predicates_.get(i));
    }
    if (allowCrossSchemeRedirect_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, allowCrossSchemeRedirect_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy other = (io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy) obj;

    if (hasMaxInternalRedirects() != other.hasMaxInternalRedirects()) return false;
    if (hasMaxInternalRedirects()) {
      if (!getMaxInternalRedirects()
          .equals(other.getMaxInternalRedirects())) return false;
    }
    if (!getRedirectResponseCodesList()
        .equals(other.getRedirectResponseCodesList())) return false;
    if (!getPredicatesList()
        .equals(other.getPredicatesList())) return false;
    if (getAllowCrossSchemeRedirect()
        != other.getAllowCrossSchemeRedirect()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasMaxInternalRedirects()) {
      hash = (37 * hash) + MAX_INTERNAL_REDIRECTS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxInternalRedirects().hashCode();
    }
    if (getRedirectResponseCodesCount() > 0) {
      hash = (37 * hash) + REDIRECT_RESPONSE_CODES_FIELD_NUMBER;
      hash = (53 * hash) + getRedirectResponseCodesList().hashCode();
    }
    if (getPredicatesCount() > 0) {
      hash = (37 * hash) + PREDICATES_FIELD_NUMBER;
      hash = (53 * hash) + getPredicatesList().hashCode();
    }
    hash = (37 * hash) + ALLOW_CROSS_SCHEME_REDIRECT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAllowCrossSchemeRedirect());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * HTTP Internal Redirect :ref:`architecture overview &lt;arch_overview_internal_redirects&gt;`.
   * </pre>
   *
   * Protobuf type {@code envoy.config.route.v3.InternalRedirectPolicy}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.route.v3.InternalRedirectPolicy)
      io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_InternalRedirectPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_InternalRedirectPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.class, io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPredicatesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (maxInternalRedirectsBuilder_ == null) {
        maxInternalRedirects_ = null;
      } else {
        maxInternalRedirects_ = null;
        maxInternalRedirectsBuilder_ = null;
      }
      redirectResponseCodes_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      if (predicatesBuilder_ == null) {
        predicates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        predicatesBuilder_.clear();
      }
      allowCrossSchemeRedirect_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_InternalRedirectPolicy_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy build() {
      io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy buildPartial() {
      io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy result = new io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy(this);
      int from_bitField0_ = bitField0_;
      if (maxInternalRedirectsBuilder_ == null) {
        result.maxInternalRedirects_ = maxInternalRedirects_;
      } else {
        result.maxInternalRedirects_ = maxInternalRedirectsBuilder_.build();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        redirectResponseCodes_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.redirectResponseCodes_ = redirectResponseCodes_;
      if (predicatesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          predicates_ = java.util.Collections.unmodifiableList(predicates_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.predicates_ = predicates_;
      } else {
        result.predicates_ = predicatesBuilder_.build();
      }
      result.allowCrossSchemeRedirect_ = allowCrossSchemeRedirect_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy) {
        return mergeFrom((io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy other) {
      if (other == io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.getDefaultInstance()) return this;
      if (other.hasMaxInternalRedirects()) {
        mergeMaxInternalRedirects(other.getMaxInternalRedirects());
      }
      if (!other.redirectResponseCodes_.isEmpty()) {
        if (redirectResponseCodes_.isEmpty()) {
          redirectResponseCodes_ = other.redirectResponseCodes_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureRedirectResponseCodesIsMutable();
          redirectResponseCodes_.addAll(other.redirectResponseCodes_);
        }
        onChanged();
      }
      if (predicatesBuilder_ == null) {
        if (!other.predicates_.isEmpty()) {
          if (predicates_.isEmpty()) {
            predicates_ = other.predicates_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePredicatesIsMutable();
            predicates_.addAll(other.predicates_);
          }
          onChanged();
        }
      } else {
        if (!other.predicates_.isEmpty()) {
          if (predicatesBuilder_.isEmpty()) {
            predicatesBuilder_.dispose();
            predicatesBuilder_ = null;
            predicates_ = other.predicates_;
            bitField0_ = (bitField0_ & ~0x00000002);
            predicatesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getPredicatesFieldBuilder() : null;
          } else {
            predicatesBuilder_.addAllMessages(other.predicates_);
          }
        }
      }
      if (other.getAllowCrossSchemeRedirect() != false) {
        setAllowCrossSchemeRedirect(other.getAllowCrossSchemeRedirect());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.UInt32Value maxInternalRedirects_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> maxInternalRedirectsBuilder_;
    /**
     * <pre>
     * An internal redirect is not handled, unless the number of previous internal redirects that a
     * downstream request has encountered is lower than this value.
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
     * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
     * @return Whether the maxInternalRedirects field is set.
     */
    public boolean hasMaxInternalRedirects() {
      return maxInternalRedirectsBuilder_ != null || maxInternalRedirects_ != null;
    }
    /**
     * <pre>
     * An internal redirect is not handled, unless the number of previous internal redirects that a
     * downstream request has encountered is lower than this value.
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
     * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
     * @return The maxInternalRedirects.
     */
    public com.google.protobuf.UInt32Value getMaxInternalRedirects() {
      if (maxInternalRedirectsBuilder_ == null) {
        return maxInternalRedirects_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxInternalRedirects_;
      } else {
        return maxInternalRedirectsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * An internal redirect is not handled, unless the number of previous internal redirects that a
     * downstream request has encountered is lower than this value.
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
     * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
     */
    public Builder setMaxInternalRedirects(com.google.protobuf.UInt32Value value) {
      if (maxInternalRedirectsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxInternalRedirects_ = value;
        onChanged();
      } else {
        maxInternalRedirectsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * An internal redirect is not handled, unless the number of previous internal redirects that a
     * downstream request has encountered is lower than this value.
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
     * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
     */
    public Builder setMaxInternalRedirects(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (maxInternalRedirectsBuilder_ == null) {
        maxInternalRedirects_ = builderForValue.build();
        onChanged();
      } else {
        maxInternalRedirectsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * An internal redirect is not handled, unless the number of previous internal redirects that a
     * downstream request has encountered is lower than this value.
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
     * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
     */
    public Builder mergeMaxInternalRedirects(com.google.protobuf.UInt32Value value) {
      if (maxInternalRedirectsBuilder_ == null) {
        if (maxInternalRedirects_ != null) {
          maxInternalRedirects_ =
            com.google.protobuf.UInt32Value.newBuilder(maxInternalRedirects_).mergeFrom(value).buildPartial();
        } else {
          maxInternalRedirects_ = value;
        }
        onChanged();
      } else {
        maxInternalRedirectsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * An internal redirect is not handled, unless the number of previous internal redirects that a
     * downstream request has encountered is lower than this value.
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
     * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
     */
    public Builder clearMaxInternalRedirects() {
      if (maxInternalRedirectsBuilder_ == null) {
        maxInternalRedirects_ = null;
        onChanged();
      } else {
        maxInternalRedirects_ = null;
        maxInternalRedirectsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * An internal redirect is not handled, unless the number of previous internal redirects that a
     * downstream request has encountered is lower than this value.
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
     * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getMaxInternalRedirectsBuilder() {
      
      onChanged();
      return getMaxInternalRedirectsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An internal redirect is not handled, unless the number of previous internal redirects that a
     * downstream request has encountered is lower than this value.
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
     * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getMaxInternalRedirectsOrBuilder() {
      if (maxInternalRedirectsBuilder_ != null) {
        return maxInternalRedirectsBuilder_.getMessageOrBuilder();
      } else {
        return maxInternalRedirects_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : maxInternalRedirects_;
      }
    }
    /**
     * <pre>
     * An internal redirect is not handled, unless the number of previous internal redirects that a
     * downstream request has encountered is lower than this value.
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
     * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getMaxInternalRedirectsFieldBuilder() {
      if (maxInternalRedirectsBuilder_ == null) {
        maxInternalRedirectsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getMaxInternalRedirects(),
                getParentForChildren(),
                isClean());
        maxInternalRedirects_ = null;
      }
      return maxInternalRedirectsBuilder_;
    }

    private com.google.protobuf.Internal.IntList redirectResponseCodes_ = emptyIntList();
    private void ensureRedirectResponseCodesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        redirectResponseCodes_ = mutableCopy(redirectResponseCodes_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,
     * only 302 will be treated as internal redirect.
     * Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.
     * </pre>
     *
     * <code>repeated uint32 redirect_response_codes = 2 [(.validate.rules) = { ... }</code>
     * @return A list containing the redirectResponseCodes.
     */
    public java.util.List<java.lang.Integer>
        getRedirectResponseCodesList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(redirectResponseCodes_) : redirectResponseCodes_;
    }
    /**
     * <pre>
     * Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,
     * only 302 will be treated as internal redirect.
     * Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.
     * </pre>
     *
     * <code>repeated uint32 redirect_response_codes = 2 [(.validate.rules) = { ... }</code>
     * @return The count of redirectResponseCodes.
     */
    public int getRedirectResponseCodesCount() {
      return redirectResponseCodes_.size();
    }
    /**
     * <pre>
     * Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,
     * only 302 will be treated as internal redirect.
     * Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.
     * </pre>
     *
     * <code>repeated uint32 redirect_response_codes = 2 [(.validate.rules) = { ... }</code>
     * @param index The index of the element to return.
     * @return The redirectResponseCodes at the given index.
     */
    public int getRedirectResponseCodes(int index) {
      return redirectResponseCodes_.getInt(index);
    }
    /**
     * <pre>
     * Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,
     * only 302 will be treated as internal redirect.
     * Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.
     * </pre>
     *
     * <code>repeated uint32 redirect_response_codes = 2 [(.validate.rules) = { ... }</code>
     * @param index The index to set the value at.
     * @param value The redirectResponseCodes to set.
     * @return This builder for chaining.
     */
    public Builder setRedirectResponseCodes(
        int index, int value) {
      ensureRedirectResponseCodesIsMutable();
      redirectResponseCodes_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,
     * only 302 will be treated as internal redirect.
     * Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.
     * </pre>
     *
     * <code>repeated uint32 redirect_response_codes = 2 [(.validate.rules) = { ... }</code>
     * @param value The redirectResponseCodes to add.
     * @return This builder for chaining.
     */
    public Builder addRedirectResponseCodes(int value) {
      ensureRedirectResponseCodesIsMutable();
      redirectResponseCodes_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,
     * only 302 will be treated as internal redirect.
     * Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.
     * </pre>
     *
     * <code>repeated uint32 redirect_response_codes = 2 [(.validate.rules) = { ... }</code>
     * @param values The redirectResponseCodes to add.
     * @return This builder for chaining.
     */
    public Builder addAllRedirectResponseCodes(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureRedirectResponseCodesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, redirectResponseCodes_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,
     * only 302 will be treated as internal redirect.
     * Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.
     * </pre>
     *
     * <code>repeated uint32 redirect_response_codes = 2 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearRedirectResponseCodes() {
      redirectResponseCodes_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private java.util.List<io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig> predicates_ =
      java.util.Collections.emptyList();
    private void ensurePredicatesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        predicates_ = new java.util.ArrayList<io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig>(predicates_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder> predicatesBuilder_;

    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig> getPredicatesList() {
      if (predicatesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(predicates_);
      } else {
        return predicatesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public int getPredicatesCount() {
      if (predicatesBuilder_ == null) {
        return predicates_.size();
      } else {
        return predicatesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getPredicates(int index) {
      if (predicatesBuilder_ == null) {
        return predicates_.get(index);
      } else {
        return predicatesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public Builder setPredicates(
        int index, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig value) {
      if (predicatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePredicatesIsMutable();
        predicates_.set(index, value);
        onChanged();
      } else {
        predicatesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public Builder setPredicates(
        int index, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder builderForValue) {
      if (predicatesBuilder_ == null) {
        ensurePredicatesIsMutable();
        predicates_.set(index, builderForValue.build());
        onChanged();
      } else {
        predicatesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public Builder addPredicates(io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig value) {
      if (predicatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePredicatesIsMutable();
        predicates_.add(value);
        onChanged();
      } else {
        predicatesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public Builder addPredicates(
        int index, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig value) {
      if (predicatesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePredicatesIsMutable();
        predicates_.add(index, value);
        onChanged();
      } else {
        predicatesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public Builder addPredicates(
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder builderForValue) {
      if (predicatesBuilder_ == null) {
        ensurePredicatesIsMutable();
        predicates_.add(builderForValue.build());
        onChanged();
      } else {
        predicatesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public Builder addPredicates(
        int index, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder builderForValue) {
      if (predicatesBuilder_ == null) {
        ensurePredicatesIsMutable();
        predicates_.add(index, builderForValue.build());
        onChanged();
      } else {
        predicatesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public Builder addAllPredicates(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig> values) {
      if (predicatesBuilder_ == null) {
        ensurePredicatesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, predicates_);
        onChanged();
      } else {
        predicatesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public Builder clearPredicates() {
      if (predicatesBuilder_ == null) {
        predicates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        predicatesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public Builder removePredicates(int index) {
      if (predicatesBuilder_ == null) {
        ensurePredicatesIsMutable();
        predicates_.remove(index);
        onChanged();
      } else {
        predicatesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder getPredicatesBuilder(
        int index) {
      return getPredicatesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getPredicatesOrBuilder(
        int index) {
      if (predicatesBuilder_ == null) {
        return predicates_.get(index);  } else {
        return predicatesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder> 
         getPredicatesOrBuilderList() {
      if (predicatesBuilder_ != null) {
        return predicatesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(predicates_);
      }
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder addPredicatesBuilder() {
      return getPredicatesFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance());
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder addPredicatesBuilder(
        int index) {
      return getPredicatesFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance());
    }
    /**
     * <pre>
     * Specifies a list of predicates that are queried when an upstream response is deemed
     * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
     * the redirect, causing the response to be proxied to downstream.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder> 
         getPredicatesBuilderList() {
      return getPredicatesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder> 
        getPredicatesFieldBuilder() {
      if (predicatesBuilder_ == null) {
        predicatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder>(
                predicates_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        predicates_ = null;
      }
      return predicatesBuilder_;
    }

    private boolean allowCrossSchemeRedirect_ ;
    /**
     * <pre>
     * Allow internal redirect to follow a target URI with a different scheme than the value of
     * x-forwarded-proto. The default is false.
     * </pre>
     *
     * <code>bool allow_cross_scheme_redirect = 4;</code>
     * @return The allowCrossSchemeRedirect.
     */
    @java.lang.Override
    public boolean getAllowCrossSchemeRedirect() {
      return allowCrossSchemeRedirect_;
    }
    /**
     * <pre>
     * Allow internal redirect to follow a target URI with a different scheme than the value of
     * x-forwarded-proto. The default is false.
     * </pre>
     *
     * <code>bool allow_cross_scheme_redirect = 4;</code>
     * @param value The allowCrossSchemeRedirect to set.
     * @return This builder for chaining.
     */
    public Builder setAllowCrossSchemeRedirect(boolean value) {
      
      allowCrossSchemeRedirect_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Allow internal redirect to follow a target URI with a different scheme than the value of
     * x-forwarded-proto. The default is false.
     * </pre>
     *
     * <code>bool allow_cross_scheme_redirect = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllowCrossSchemeRedirect() {
      
      allowCrossSchemeRedirect_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.route.v3.InternalRedirectPolicy)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.route.v3.InternalRedirectPolicy)
  private static final io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy();
  }

  public static io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<InternalRedirectPolicy>
      PARSER = new com.google.protobuf.AbstractParser<InternalRedirectPolicy>() {
    @java.lang.Override
    public InternalRedirectPolicy parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new InternalRedirectPolicy(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<InternalRedirectPolicy> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<InternalRedirectPolicy> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

