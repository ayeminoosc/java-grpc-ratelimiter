// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/route/v3/route_components.proto

package io.envoyproxy.envoy.config.route.v3;

public interface VirtualHostOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.VirtualHost)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The logical name of the virtual host. This is used when emitting certain
   * statistics but is not relevant for routing.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The logical name of the virtual host. This is used when emitting certain
   * statistics but is not relevant for routing.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * A list of domains (host/authority header) that will be matched to this
   * virtual host. Wildcard hosts are supported in the suffix or prefix form.
   * Domain search order:
   *  1. Exact domain names: ``www.foo.com``.
   *  2. Suffix domain wildcards: ``*.foo.com`` or ``*-bar.foo.com``.
   *  3. Prefix domain wildcards: ``foo.*`` or ``foo-*``.
   *  4. Special wildcard ``*`` matching any domain.
   * .. note::
   *   The wildcard will not match the empty string.
   *   e.g. ``*-bar.foo.com`` will match ``baz-bar.foo.com`` but not ``-bar.foo.com``.
   *   The longest wildcards match first.
   *   Only a single virtual host in the entire route configuration can match on ``*``. A domain
   *   must be unique across all virtual hosts or the config will fail to load.
   * Domains cannot contain control characters. This is validated by the well_known_regex HTTP_HEADER_VALUE.
   * </pre>
   *
   * <code>repeated string domains = 2 [(.validate.rules) = { ... }</code>
   * @return A list containing the domains.
   */
  java.util.List<java.lang.String>
      getDomainsList();
  /**
   * <pre>
   * A list of domains (host/authority header) that will be matched to this
   * virtual host. Wildcard hosts are supported in the suffix or prefix form.
   * Domain search order:
   *  1. Exact domain names: ``www.foo.com``.
   *  2. Suffix domain wildcards: ``*.foo.com`` or ``*-bar.foo.com``.
   *  3. Prefix domain wildcards: ``foo.*`` or ``foo-*``.
   *  4. Special wildcard ``*`` matching any domain.
   * .. note::
   *   The wildcard will not match the empty string.
   *   e.g. ``*-bar.foo.com`` will match ``baz-bar.foo.com`` but not ``-bar.foo.com``.
   *   The longest wildcards match first.
   *   Only a single virtual host in the entire route configuration can match on ``*``. A domain
   *   must be unique across all virtual hosts or the config will fail to load.
   * Domains cannot contain control characters. This is validated by the well_known_regex HTTP_HEADER_VALUE.
   * </pre>
   *
   * <code>repeated string domains = 2 [(.validate.rules) = { ... }</code>
   * @return The count of domains.
   */
  int getDomainsCount();
  /**
   * <pre>
   * A list of domains (host/authority header) that will be matched to this
   * virtual host. Wildcard hosts are supported in the suffix or prefix form.
   * Domain search order:
   *  1. Exact domain names: ``www.foo.com``.
   *  2. Suffix domain wildcards: ``*.foo.com`` or ``*-bar.foo.com``.
   *  3. Prefix domain wildcards: ``foo.*`` or ``foo-*``.
   *  4. Special wildcard ``*`` matching any domain.
   * .. note::
   *   The wildcard will not match the empty string.
   *   e.g. ``*-bar.foo.com`` will match ``baz-bar.foo.com`` but not ``-bar.foo.com``.
   *   The longest wildcards match first.
   *   Only a single virtual host in the entire route configuration can match on ``*``. A domain
   *   must be unique across all virtual hosts or the config will fail to load.
   * Domains cannot contain control characters. This is validated by the well_known_regex HTTP_HEADER_VALUE.
   * </pre>
   *
   * <code>repeated string domains = 2 [(.validate.rules) = { ... }</code>
   * @param index The index of the element to return.
   * @return The domains at the given index.
   */
  java.lang.String getDomains(int index);
  /**
   * <pre>
   * A list of domains (host/authority header) that will be matched to this
   * virtual host. Wildcard hosts are supported in the suffix or prefix form.
   * Domain search order:
   *  1. Exact domain names: ``www.foo.com``.
   *  2. Suffix domain wildcards: ``*.foo.com`` or ``*-bar.foo.com``.
   *  3. Prefix domain wildcards: ``foo.*`` or ``foo-*``.
   *  4. Special wildcard ``*`` matching any domain.
   * .. note::
   *   The wildcard will not match the empty string.
   *   e.g. ``*-bar.foo.com`` will match ``baz-bar.foo.com`` but not ``-bar.foo.com``.
   *   The longest wildcards match first.
   *   Only a single virtual host in the entire route configuration can match on ``*``. A domain
   *   must be unique across all virtual hosts or the config will fail to load.
   * Domains cannot contain control characters. This is validated by the well_known_regex HTTP_HEADER_VALUE.
   * </pre>
   *
   * <code>repeated string domains = 2 [(.validate.rules) = { ... }</code>
   * @param index The index of the value to return.
   * @return The bytes of the domains at the given index.
   */
  com.google.protobuf.ByteString
      getDomainsBytes(int index);

  /**
   * <pre>
   * The list of routes that will be matched, in order, for incoming requests.
   * The first route that matches will be used.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.Route routes = 3;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.route.v3.Route> 
      getRoutesList();
  /**
   * <pre>
   * The list of routes that will be matched, in order, for incoming requests.
   * The first route that matches will be used.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.Route routes = 3;</code>
   */
  io.envoyproxy.envoy.config.route.v3.Route getRoutes(int index);
  /**
   * <pre>
   * The list of routes that will be matched, in order, for incoming requests.
   * The first route that matches will be used.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.Route routes = 3;</code>
   */
  int getRoutesCount();
  /**
   * <pre>
   * The list of routes that will be matched, in order, for incoming requests.
   * The first route that matches will be used.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.Route routes = 3;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.route.v3.RouteOrBuilder> 
      getRoutesOrBuilderList();
  /**
   * <pre>
   * The list of routes that will be matched, in order, for incoming requests.
   * The first route that matches will be used.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.Route routes = 3;</code>
   */
  io.envoyproxy.envoy.config.route.v3.RouteOrBuilder getRoutesOrBuilder(
      int index);

  /**
   * <pre>
   * Specifies the type of TLS enforcement the virtual host expects. If this option is not
   * specified, there is no TLS requirement for the virtual host.
   * </pre>
   *
   * <code>.envoy.config.route.v3.VirtualHost.TlsRequirementType require_tls = 4 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for requireTls.
   */
  int getRequireTlsValue();
  /**
   * <pre>
   * Specifies the type of TLS enforcement the virtual host expects. If this option is not
   * specified, there is no TLS requirement for the virtual host.
   * </pre>
   *
   * <code>.envoy.config.route.v3.VirtualHost.TlsRequirementType require_tls = 4 [(.validate.rules) = { ... }</code>
   * @return The requireTls.
   */
  io.envoyproxy.envoy.config.route.v3.VirtualHost.TlsRequirementType getRequireTls();

  /**
   * <pre>
   * A list of virtual clusters defined for this virtual host. Virtual clusters
   * are used for additional statistics gathering.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.VirtualCluster virtual_clusters = 5;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.route.v3.VirtualCluster> 
      getVirtualClustersList();
  /**
   * <pre>
   * A list of virtual clusters defined for this virtual host. Virtual clusters
   * are used for additional statistics gathering.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.VirtualCluster virtual_clusters = 5;</code>
   */
  io.envoyproxy.envoy.config.route.v3.VirtualCluster getVirtualClusters(int index);
  /**
   * <pre>
   * A list of virtual clusters defined for this virtual host. Virtual clusters
   * are used for additional statistics gathering.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.VirtualCluster virtual_clusters = 5;</code>
   */
  int getVirtualClustersCount();
  /**
   * <pre>
   * A list of virtual clusters defined for this virtual host. Virtual clusters
   * are used for additional statistics gathering.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.VirtualCluster virtual_clusters = 5;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.route.v3.VirtualClusterOrBuilder> 
      getVirtualClustersOrBuilderList();
  /**
   * <pre>
   * A list of virtual clusters defined for this virtual host. Virtual clusters
   * are used for additional statistics gathering.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.VirtualCluster virtual_clusters = 5;</code>
   */
  io.envoyproxy.envoy.config.route.v3.VirtualClusterOrBuilder getVirtualClustersOrBuilder(
      int index);

  /**
   * <pre>
   * Specifies a set of rate limit configurations that will be applied to the
   * virtual host.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 6;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.route.v3.RateLimit> 
      getRateLimitsList();
  /**
   * <pre>
   * Specifies a set of rate limit configurations that will be applied to the
   * virtual host.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 6;</code>
   */
  io.envoyproxy.envoy.config.route.v3.RateLimit getRateLimits(int index);
  /**
   * <pre>
   * Specifies a set of rate limit configurations that will be applied to the
   * virtual host.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 6;</code>
   */
  int getRateLimitsCount();
  /**
   * <pre>
   * Specifies a set of rate limit configurations that will be applied to the
   * virtual host.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 6;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.route.v3.RateLimitOrBuilder> 
      getRateLimitsOrBuilderList();
  /**
   * <pre>
   * Specifies a set of rate limit configurations that will be applied to the
   * virtual host.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 6;</code>
   */
  io.envoyproxy.envoy.config.route.v3.RateLimitOrBuilder getRateLimitsOrBuilder(
      int index);

  /**
   * <pre>
   * Specifies a list of HTTP headers that should be added to each request
   * handled by this virtual host. Headers specified at this level are applied
   * after headers from enclosed :ref:`envoy_api_msg_config.route.v3.Route` and before headers from the
   * enclosing :ref:`envoy_api_msg_config.route.v3.RouteConfiguration`. For more information, including
   * details on header value syntax, see the documentation on :ref:`custom request headers
   * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption request_headers_to_add = 7 [(.validate.rules) = { ... }</code>
   */
  java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> 
      getRequestHeadersToAddList();
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be added to each request
   * handled by this virtual host. Headers specified at this level are applied
   * after headers from enclosed :ref:`envoy_api_msg_config.route.v3.Route` and before headers from the
   * enclosing :ref:`envoy_api_msg_config.route.v3.RouteConfiguration`. For more information, including
   * details on header value syntax, see the documentation on :ref:`custom request headers
   * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption request_headers_to_add = 7 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValueOption getRequestHeadersToAdd(int index);
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be added to each request
   * handled by this virtual host. Headers specified at this level are applied
   * after headers from enclosed :ref:`envoy_api_msg_config.route.v3.Route` and before headers from the
   * enclosing :ref:`envoy_api_msg_config.route.v3.RouteConfiguration`. For more information, including
   * details on header value syntax, see the documentation on :ref:`custom request headers
   * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption request_headers_to_add = 7 [(.validate.rules) = { ... }</code>
   */
  int getRequestHeadersToAddCount();
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be added to each request
   * handled by this virtual host. Headers specified at this level are applied
   * after headers from enclosed :ref:`envoy_api_msg_config.route.v3.Route` and before headers from the
   * enclosing :ref:`envoy_api_msg_config.route.v3.RouteConfiguration`. For more information, including
   * details on header value syntax, see the documentation on :ref:`custom request headers
   * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption request_headers_to_add = 7 [(.validate.rules) = { ... }</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> 
      getRequestHeadersToAddOrBuilderList();
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be added to each request
   * handled by this virtual host. Headers specified at this level are applied
   * after headers from enclosed :ref:`envoy_api_msg_config.route.v3.Route` and before headers from the
   * enclosing :ref:`envoy_api_msg_config.route.v3.RouteConfiguration`. For more information, including
   * details on header value syntax, see the documentation on :ref:`custom request headers
   * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption request_headers_to_add = 7 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder getRequestHeadersToAddOrBuilder(
      int index);

  /**
   * <pre>
   * Specifies a list of HTTP headers that should be removed from each request
   * handled by this virtual host.
   * </pre>
   *
   * <code>repeated string request_headers_to_remove = 13 [(.validate.rules) = { ... }</code>
   * @return A list containing the requestHeadersToRemove.
   */
  java.util.List<java.lang.String>
      getRequestHeadersToRemoveList();
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be removed from each request
   * handled by this virtual host.
   * </pre>
   *
   * <code>repeated string request_headers_to_remove = 13 [(.validate.rules) = { ... }</code>
   * @return The count of requestHeadersToRemove.
   */
  int getRequestHeadersToRemoveCount();
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be removed from each request
   * handled by this virtual host.
   * </pre>
   *
   * <code>repeated string request_headers_to_remove = 13 [(.validate.rules) = { ... }</code>
   * @param index The index of the element to return.
   * @return The requestHeadersToRemove at the given index.
   */
  java.lang.String getRequestHeadersToRemove(int index);
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be removed from each request
   * handled by this virtual host.
   * </pre>
   *
   * <code>repeated string request_headers_to_remove = 13 [(.validate.rules) = { ... }</code>
   * @param index The index of the value to return.
   * @return The bytes of the requestHeadersToRemove at the given index.
   */
  com.google.protobuf.ByteString
      getRequestHeadersToRemoveBytes(int index);

  /**
   * <pre>
   * Specifies a list of HTTP headers that should be added to each response
   * handled by this virtual host. Headers specified at this level are applied
   * after headers from enclosed :ref:`envoy_api_msg_config.route.v3.Route` and before headers from the
   * enclosing :ref:`envoy_api_msg_config.route.v3.RouteConfiguration`. For more information, including
   * details on header value syntax, see the documentation on :ref:`custom request headers
   * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 10 [(.validate.rules) = { ... }</code>
   */
  java.util.List<io.envoyproxy.envoy.config.core.v3.HeaderValueOption> 
      getResponseHeadersToAddList();
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be added to each response
   * handled by this virtual host. Headers specified at this level are applied
   * after headers from enclosed :ref:`envoy_api_msg_config.route.v3.Route` and before headers from the
   * enclosing :ref:`envoy_api_msg_config.route.v3.RouteConfiguration`. For more information, including
   * details on header value syntax, see the documentation on :ref:`custom request headers
   * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 10 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValueOption getResponseHeadersToAdd(int index);
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be added to each response
   * handled by this virtual host. Headers specified at this level are applied
   * after headers from enclosed :ref:`envoy_api_msg_config.route.v3.Route` and before headers from the
   * enclosing :ref:`envoy_api_msg_config.route.v3.RouteConfiguration`. For more information, including
   * details on header value syntax, see the documentation on :ref:`custom request headers
   * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 10 [(.validate.rules) = { ... }</code>
   */
  int getResponseHeadersToAddCount();
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be added to each response
   * handled by this virtual host. Headers specified at this level are applied
   * after headers from enclosed :ref:`envoy_api_msg_config.route.v3.Route` and before headers from the
   * enclosing :ref:`envoy_api_msg_config.route.v3.RouteConfiguration`. For more information, including
   * details on header value syntax, see the documentation on :ref:`custom request headers
   * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 10 [(.validate.rules) = { ... }</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder> 
      getResponseHeadersToAddOrBuilderList();
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be added to each response
   * handled by this virtual host. Headers specified at this level are applied
   * after headers from enclosed :ref:`envoy_api_msg_config.route.v3.Route` and before headers from the
   * enclosing :ref:`envoy_api_msg_config.route.v3.RouteConfiguration`. For more information, including
   * details on header value syntax, see the documentation on :ref:`custom request headers
   * &lt;config_http_conn_man_headers_custom_request_headers&gt;`.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.HeaderValueOption response_headers_to_add = 10 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.HeaderValueOptionOrBuilder getResponseHeadersToAddOrBuilder(
      int index);

  /**
   * <pre>
   * Specifies a list of HTTP headers that should be removed from each response
   * handled by this virtual host.
   * </pre>
   *
   * <code>repeated string response_headers_to_remove = 11 [(.validate.rules) = { ... }</code>
   * @return A list containing the responseHeadersToRemove.
   */
  java.util.List<java.lang.String>
      getResponseHeadersToRemoveList();
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be removed from each response
   * handled by this virtual host.
   * </pre>
   *
   * <code>repeated string response_headers_to_remove = 11 [(.validate.rules) = { ... }</code>
   * @return The count of responseHeadersToRemove.
   */
  int getResponseHeadersToRemoveCount();
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be removed from each response
   * handled by this virtual host.
   * </pre>
   *
   * <code>repeated string response_headers_to_remove = 11 [(.validate.rules) = { ... }</code>
   * @param index The index of the element to return.
   * @return The responseHeadersToRemove at the given index.
   */
  java.lang.String getResponseHeadersToRemove(int index);
  /**
   * <pre>
   * Specifies a list of HTTP headers that should be removed from each response
   * handled by this virtual host.
   * </pre>
   *
   * <code>repeated string response_headers_to_remove = 11 [(.validate.rules) = { ... }</code>
   * @param index The index of the value to return.
   * @return The bytes of the responseHeadersToRemove at the given index.
   */
  com.google.protobuf.ByteString
      getResponseHeadersToRemoveBytes(int index);

  /**
   * <pre>
   * Indicates that the virtual host has a CORS policy.
   * </pre>
   *
   * <code>.envoy.config.route.v3.CorsPolicy cors = 8;</code>
   * @return Whether the cors field is set.
   */
  boolean hasCors();
  /**
   * <pre>
   * Indicates that the virtual host has a CORS policy.
   * </pre>
   *
   * <code>.envoy.config.route.v3.CorsPolicy cors = 8;</code>
   * @return The cors.
   */
  io.envoyproxy.envoy.config.route.v3.CorsPolicy getCors();
  /**
   * <pre>
   * Indicates that the virtual host has a CORS policy.
   * </pre>
   *
   * <code>.envoy.config.route.v3.CorsPolicy cors = 8;</code>
   */
  io.envoyproxy.envoy.config.route.v3.CorsPolicyOrBuilder getCorsOrBuilder();

  /**
   * <pre>
   * The per_filter_config field can be used to provide virtual host-specific
   * configurations for filters. The key should match the filter name, such as
   * *envoy.filters.http.buffer* for the HTTP buffer filter. Use of this field is filter
   * specific; see the :ref:`HTTP filter documentation &lt;config_http_filters&gt;`
   * for if and how it is utilized.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_per_filter_config = 15;</code>
   */
  int getTypedPerFilterConfigCount();
  /**
   * <pre>
   * The per_filter_config field can be used to provide virtual host-specific
   * configurations for filters. The key should match the filter name, such as
   * *envoy.filters.http.buffer* for the HTTP buffer filter. Use of this field is filter
   * specific; see the :ref:`HTTP filter documentation &lt;config_http_filters&gt;`
   * for if and how it is utilized.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_per_filter_config = 15;</code>
   */
  boolean containsTypedPerFilterConfig(
      java.lang.String key);
  /**
   * Use {@link #getTypedPerFilterConfigMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.protobuf.Any>
  getTypedPerFilterConfig();
  /**
   * <pre>
   * The per_filter_config field can be used to provide virtual host-specific
   * configurations for filters. The key should match the filter name, such as
   * *envoy.filters.http.buffer* for the HTTP buffer filter. Use of this field is filter
   * specific; see the :ref:`HTTP filter documentation &lt;config_http_filters&gt;`
   * for if and how it is utilized.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_per_filter_config = 15;</code>
   */
  java.util.Map<java.lang.String, com.google.protobuf.Any>
  getTypedPerFilterConfigMap();
  /**
   * <pre>
   * The per_filter_config field can be used to provide virtual host-specific
   * configurations for filters. The key should match the filter name, such as
   * *envoy.filters.http.buffer* for the HTTP buffer filter. Use of this field is filter
   * specific; see the :ref:`HTTP filter documentation &lt;config_http_filters&gt;`
   * for if and how it is utilized.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_per_filter_config = 15;</code>
   */

  com.google.protobuf.Any getTypedPerFilterConfigOrDefault(
      java.lang.String key,
      com.google.protobuf.Any defaultValue);
  /**
   * <pre>
   * The per_filter_config field can be used to provide virtual host-specific
   * configurations for filters. The key should match the filter name, such as
   * *envoy.filters.http.buffer* for the HTTP buffer filter. Use of this field is filter
   * specific; see the :ref:`HTTP filter documentation &lt;config_http_filters&gt;`
   * for if and how it is utilized.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Any&gt; typed_per_filter_config = 15;</code>
   */

  com.google.protobuf.Any getTypedPerFilterConfigOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Decides whether the :ref:`x-envoy-attempt-count
   * &lt;config_http_filters_router_x-envoy-attempt-count&gt;` header should be included
   * in the upstream request. Setting this option will cause it to override any existing header
   * value, so in the case of two Envoys on the request path with this option enabled, the upstream
   * will see the attempt count as perceived by the second Envoy. Defaults to false.
   * This header is unaffected by the
   * :ref:`suppress_envoy_headers
   * &lt;envoy_api_field_extensions.filters.http.router.v3.Router.suppress_envoy_headers&gt;` flag.
   * [#next-major-version: rename to include_attempt_count_in_request.]
   * </pre>
   *
   * <code>bool include_request_attempt_count = 14;</code>
   * @return The includeRequestAttemptCount.
   */
  boolean getIncludeRequestAttemptCount();

  /**
   * <pre>
   * Decides whether the :ref:`x-envoy-attempt-count
   * &lt;config_http_filters_router_x-envoy-attempt-count&gt;` header should be included
   * in the downstream response. Setting this option will cause the router to override any existing header
   * value, so in the case of two Envoys on the request path with this option enabled, the downstream
   * will see the attempt count as perceived by the Envoy closest upstream from itself. Defaults to false.
   * This header is unaffected by the
   * :ref:`suppress_envoy_headers
   * &lt;envoy_api_field_extensions.filters.http.router.v3.Router.suppress_envoy_headers&gt;` flag.
   * </pre>
   *
   * <code>bool include_attempt_count_in_response = 19;</code>
   * @return The includeAttemptCountInResponse.
   */
  boolean getIncludeAttemptCountInResponse();

  /**
   * <pre>
   * Indicates the retry policy for all routes in this virtual host. Note that setting a
   * route level entry will take precedence over this config and it'll be treated
   * independently (e.g.: values are not inherited).
   * </pre>
   *
   * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 16;</code>
   * @return Whether the retryPolicy field is set.
   */
  boolean hasRetryPolicy();
  /**
   * <pre>
   * Indicates the retry policy for all routes in this virtual host. Note that setting a
   * route level entry will take precedence over this config and it'll be treated
   * independently (e.g.: values are not inherited).
   * </pre>
   *
   * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 16;</code>
   * @return The retryPolicy.
   */
  io.envoyproxy.envoy.config.route.v3.RetryPolicy getRetryPolicy();
  /**
   * <pre>
   * Indicates the retry policy for all routes in this virtual host. Note that setting a
   * route level entry will take precedence over this config and it'll be treated
   * independently (e.g.: values are not inherited).
   * </pre>
   *
   * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 16;</code>
   */
  io.envoyproxy.envoy.config.route.v3.RetryPolicyOrBuilder getRetryPolicyOrBuilder();

  /**
   * <pre>
   * [#not-implemented-hide:]
   * Specifies the configuration for retry policy extension. Note that setting a route level entry
   * will take precedence over this config and it'll be treated independently (e.g.: values are not
   * inherited). :ref:`Retry policy &lt;envoy_api_field_config.route.v3.VirtualHost.retry_policy&gt;` should not be
   * set if this field is used.
   * </pre>
   *
   * <code>.google.protobuf.Any retry_policy_typed_config = 20;</code>
   * @return Whether the retryPolicyTypedConfig field is set.
   */
  boolean hasRetryPolicyTypedConfig();
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Specifies the configuration for retry policy extension. Note that setting a route level entry
   * will take precedence over this config and it'll be treated independently (e.g.: values are not
   * inherited). :ref:`Retry policy &lt;envoy_api_field_config.route.v3.VirtualHost.retry_policy&gt;` should not be
   * set if this field is used.
   * </pre>
   *
   * <code>.google.protobuf.Any retry_policy_typed_config = 20;</code>
   * @return The retryPolicyTypedConfig.
   */
  com.google.protobuf.Any getRetryPolicyTypedConfig();
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Specifies the configuration for retry policy extension. Note that setting a route level entry
   * will take precedence over this config and it'll be treated independently (e.g.: values are not
   * inherited). :ref:`Retry policy &lt;envoy_api_field_config.route.v3.VirtualHost.retry_policy&gt;` should not be
   * set if this field is used.
   * </pre>
   *
   * <code>.google.protobuf.Any retry_policy_typed_config = 20;</code>
   */
  com.google.protobuf.AnyOrBuilder getRetryPolicyTypedConfigOrBuilder();

  /**
   * <pre>
   * Indicates the hedge policy for all routes in this virtual host. Note that setting a
   * route level entry will take precedence over this config and it'll be treated
   * independently (e.g.: values are not inherited).
   * </pre>
   *
   * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 17;</code>
   * @return Whether the hedgePolicy field is set.
   */
  boolean hasHedgePolicy();
  /**
   * <pre>
   * Indicates the hedge policy for all routes in this virtual host. Note that setting a
   * route level entry will take precedence over this config and it'll be treated
   * independently (e.g.: values are not inherited).
   * </pre>
   *
   * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 17;</code>
   * @return The hedgePolicy.
   */
  io.envoyproxy.envoy.config.route.v3.HedgePolicy getHedgePolicy();
  /**
   * <pre>
   * Indicates the hedge policy for all routes in this virtual host. Note that setting a
   * route level entry will take precedence over this config and it'll be treated
   * independently (e.g.: values are not inherited).
   * </pre>
   *
   * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 17;</code>
   */
  io.envoyproxy.envoy.config.route.v3.HedgePolicyOrBuilder getHedgePolicyOrBuilder();

  /**
   * <pre>
   * The maximum bytes which will be buffered for retries and shadowing.
   * If set and a route-specific limit is not set, the bytes actually buffered will be the minimum
   * value of this and the listener per_connection_buffer_limit_bytes.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value per_request_buffer_limit_bytes = 18;</code>
   * @return Whether the perRequestBufferLimitBytes field is set.
   */
  boolean hasPerRequestBufferLimitBytes();
  /**
   * <pre>
   * The maximum bytes which will be buffered for retries and shadowing.
   * If set and a route-specific limit is not set, the bytes actually buffered will be the minimum
   * value of this and the listener per_connection_buffer_limit_bytes.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value per_request_buffer_limit_bytes = 18;</code>
   * @return The perRequestBufferLimitBytes.
   */
  com.google.protobuf.UInt32Value getPerRequestBufferLimitBytes();
  /**
   * <pre>
   * The maximum bytes which will be buffered for retries and shadowing.
   * If set and a route-specific limit is not set, the bytes actually buffered will be the minimum
   * value of this and the listener per_connection_buffer_limit_bytes.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value per_request_buffer_limit_bytes = 18;</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getPerRequestBufferLimitBytesOrBuilder();
}
