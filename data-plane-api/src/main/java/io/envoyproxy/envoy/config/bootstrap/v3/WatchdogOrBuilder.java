// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/bootstrap/v3/bootstrap.proto

package io.envoyproxy.envoy.config.bootstrap.v3;

public interface WatchdogOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.bootstrap.v3.Watchdog)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Register actions that will fire on given WatchDog events.
   * See *WatchDogAction* for priority of events.
   * </pre>
   *
   * <code>repeated .envoy.config.bootstrap.v3.Watchdog.WatchdogAction actions = 7;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.bootstrap.v3.Watchdog.WatchdogAction> 
      getActionsList();
  /**
   * <pre>
   * Register actions that will fire on given WatchDog events.
   * See *WatchDogAction* for priority of events.
   * </pre>
   *
   * <code>repeated .envoy.config.bootstrap.v3.Watchdog.WatchdogAction actions = 7;</code>
   */
  io.envoyproxy.envoy.config.bootstrap.v3.Watchdog.WatchdogAction getActions(int index);
  /**
   * <pre>
   * Register actions that will fire on given WatchDog events.
   * See *WatchDogAction* for priority of events.
   * </pre>
   *
   * <code>repeated .envoy.config.bootstrap.v3.Watchdog.WatchdogAction actions = 7;</code>
   */
  int getActionsCount();
  /**
   * <pre>
   * Register actions that will fire on given WatchDog events.
   * See *WatchDogAction* for priority of events.
   * </pre>
   *
   * <code>repeated .envoy.config.bootstrap.v3.Watchdog.WatchdogAction actions = 7;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.bootstrap.v3.Watchdog.WatchdogActionOrBuilder> 
      getActionsOrBuilderList();
  /**
   * <pre>
   * Register actions that will fire on given WatchDog events.
   * See *WatchDogAction* for priority of events.
   * </pre>
   *
   * <code>repeated .envoy.config.bootstrap.v3.Watchdog.WatchdogAction actions = 7;</code>
   */
  io.envoyproxy.envoy.config.bootstrap.v3.Watchdog.WatchdogActionOrBuilder getActionsOrBuilder(
      int index);

  /**
   * <pre>
   * The duration after which Envoy counts a nonresponsive thread in the
   * *watchdog_miss* statistic. If not specified the default is 200ms.
   * </pre>
   *
   * <code>.google.protobuf.Duration miss_timeout = 1;</code>
   * @return Whether the missTimeout field is set.
   */
  boolean hasMissTimeout();
  /**
   * <pre>
   * The duration after which Envoy counts a nonresponsive thread in the
   * *watchdog_miss* statistic. If not specified the default is 200ms.
   * </pre>
   *
   * <code>.google.protobuf.Duration miss_timeout = 1;</code>
   * @return The missTimeout.
   */
  com.google.protobuf.Duration getMissTimeout();
  /**
   * <pre>
   * The duration after which Envoy counts a nonresponsive thread in the
   * *watchdog_miss* statistic. If not specified the default is 200ms.
   * </pre>
   *
   * <code>.google.protobuf.Duration miss_timeout = 1;</code>
   */
  com.google.protobuf.DurationOrBuilder getMissTimeoutOrBuilder();

  /**
   * <pre>
   * The duration after which Envoy counts a nonresponsive thread in the
   * *watchdog_mega_miss* statistic. If not specified the default is
   * 1000ms.
   * </pre>
   *
   * <code>.google.protobuf.Duration megamiss_timeout = 2;</code>
   * @return Whether the megamissTimeout field is set.
   */
  boolean hasMegamissTimeout();
  /**
   * <pre>
   * The duration after which Envoy counts a nonresponsive thread in the
   * *watchdog_mega_miss* statistic. If not specified the default is
   * 1000ms.
   * </pre>
   *
   * <code>.google.protobuf.Duration megamiss_timeout = 2;</code>
   * @return The megamissTimeout.
   */
  com.google.protobuf.Duration getMegamissTimeout();
  /**
   * <pre>
   * The duration after which Envoy counts a nonresponsive thread in the
   * *watchdog_mega_miss* statistic. If not specified the default is
   * 1000ms.
   * </pre>
   *
   * <code>.google.protobuf.Duration megamiss_timeout = 2;</code>
   */
  com.google.protobuf.DurationOrBuilder getMegamissTimeoutOrBuilder();

  /**
   * <pre>
   * If a watched thread has been nonresponsive for this duration, assume a
   * programming error and kill the entire Envoy process. Set to 0 to disable
   * kill behavior. If not specified the default is 0 (disabled).
   * </pre>
   *
   * <code>.google.protobuf.Duration kill_timeout = 3;</code>
   * @return Whether the killTimeout field is set.
   */
  boolean hasKillTimeout();
  /**
   * <pre>
   * If a watched thread has been nonresponsive for this duration, assume a
   * programming error and kill the entire Envoy process. Set to 0 to disable
   * kill behavior. If not specified the default is 0 (disabled).
   * </pre>
   *
   * <code>.google.protobuf.Duration kill_timeout = 3;</code>
   * @return The killTimeout.
   */
  com.google.protobuf.Duration getKillTimeout();
  /**
   * <pre>
   * If a watched thread has been nonresponsive for this duration, assume a
   * programming error and kill the entire Envoy process. Set to 0 to disable
   * kill behavior. If not specified the default is 0 (disabled).
   * </pre>
   *
   * <code>.google.protobuf.Duration kill_timeout = 3;</code>
   */
  com.google.protobuf.DurationOrBuilder getKillTimeoutOrBuilder();

  /**
   * <pre>
   * Defines the maximum jitter used to adjust the *kill_timeout* if *kill_timeout* is
   * enabled. Enabling this feature would help to reduce risk of synchronized
   * watchdog kill events across proxies due to external triggers. Set to 0 to
   * disable. If not specified the default is 0 (disabled).
   * </pre>
   *
   * <code>.google.protobuf.Duration max_kill_timeout_jitter = 6 [(.validate.rules) = { ... }</code>
   * @return Whether the maxKillTimeoutJitter field is set.
   */
  boolean hasMaxKillTimeoutJitter();
  /**
   * <pre>
   * Defines the maximum jitter used to adjust the *kill_timeout* if *kill_timeout* is
   * enabled. Enabling this feature would help to reduce risk of synchronized
   * watchdog kill events across proxies due to external triggers. Set to 0 to
   * disable. If not specified the default is 0 (disabled).
   * </pre>
   *
   * <code>.google.protobuf.Duration max_kill_timeout_jitter = 6 [(.validate.rules) = { ... }</code>
   * @return The maxKillTimeoutJitter.
   */
  com.google.protobuf.Duration getMaxKillTimeoutJitter();
  /**
   * <pre>
   * Defines the maximum jitter used to adjust the *kill_timeout* if *kill_timeout* is
   * enabled. Enabling this feature would help to reduce risk of synchronized
   * watchdog kill events across proxies due to external triggers. Set to 0 to
   * disable. If not specified the default is 0 (disabled).
   * </pre>
   *
   * <code>.google.protobuf.Duration max_kill_timeout_jitter = 6 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.DurationOrBuilder getMaxKillTimeoutJitterOrBuilder();

  /**
   * <pre>
   * If max(2, ceil(registered_threads * Fraction(*multikill_threshold*)))
   * threads have been nonresponsive for at least this duration kill the entire
   * Envoy process. Set to 0 to disable this behavior. If not specified the
   * default is 0 (disabled).
   * </pre>
   *
   * <code>.google.protobuf.Duration multikill_timeout = 4;</code>
   * @return Whether the multikillTimeout field is set.
   */
  boolean hasMultikillTimeout();
  /**
   * <pre>
   * If max(2, ceil(registered_threads * Fraction(*multikill_threshold*)))
   * threads have been nonresponsive for at least this duration kill the entire
   * Envoy process. Set to 0 to disable this behavior. If not specified the
   * default is 0 (disabled).
   * </pre>
   *
   * <code>.google.protobuf.Duration multikill_timeout = 4;</code>
   * @return The multikillTimeout.
   */
  com.google.protobuf.Duration getMultikillTimeout();
  /**
   * <pre>
   * If max(2, ceil(registered_threads * Fraction(*multikill_threshold*)))
   * threads have been nonresponsive for at least this duration kill the entire
   * Envoy process. Set to 0 to disable this behavior. If not specified the
   * default is 0 (disabled).
   * </pre>
   *
   * <code>.google.protobuf.Duration multikill_timeout = 4;</code>
   */
  com.google.protobuf.DurationOrBuilder getMultikillTimeoutOrBuilder();

  /**
   * <pre>
   * Sets the threshold for *multikill_timeout* in terms of the percentage of
   * nonresponsive threads required for the *multikill_timeout*.
   * If not specified the default is 0.
   * </pre>
   *
   * <code>.envoy.type.v3.Percent multikill_threshold = 5;</code>
   * @return Whether the multikillThreshold field is set.
   */
  boolean hasMultikillThreshold();
  /**
   * <pre>
   * Sets the threshold for *multikill_timeout* in terms of the percentage of
   * nonresponsive threads required for the *multikill_timeout*.
   * If not specified the default is 0.
   * </pre>
   *
   * <code>.envoy.type.v3.Percent multikill_threshold = 5;</code>
   * @return The multikillThreshold.
   */
  io.envoyproxy.envoy.type.v3.Percent getMultikillThreshold();
  /**
   * <pre>
   * Sets the threshold for *multikill_timeout* in terms of the percentage of
   * nonresponsive threads required for the *multikill_timeout*.
   * If not specified the default is 0.
   * </pre>
   *
   * <code>.envoy.type.v3.Percent multikill_threshold = 5;</code>
   */
  io.envoyproxy.envoy.type.v3.PercentOrBuilder getMultikillThresholdOrBuilder();
}
