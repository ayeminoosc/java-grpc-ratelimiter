// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/route/v3/route_components.proto

package io.envoyproxy.envoy.config.route.v3;

public interface VirtualClusterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.VirtualCluster)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies a list of header matchers to use for matching requests. Each specified header must
   * match. The pseudo-headers `:path` and `:method` can be used to match the request path and
   * method, respectively.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> 
      getHeadersList();
  /**
   * <pre>
   * Specifies a list of header matchers to use for matching requests. Each specified header must
   * match. The pseudo-headers `:path` and `:method` can be used to match the request path and
   * method, respectively.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
   */
  io.envoyproxy.envoy.config.route.v3.HeaderMatcher getHeaders(int index);
  /**
   * <pre>
   * Specifies a list of header matchers to use for matching requests. Each specified header must
   * match. The pseudo-headers `:path` and `:method` can be used to match the request path and
   * method, respectively.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
   */
  int getHeadersCount();
  /**
   * <pre>
   * Specifies a list of header matchers to use for matching requests. Each specified header must
   * match. The pseudo-headers `:path` and `:method` can be used to match the request path and
   * method, respectively.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> 
      getHeadersOrBuilderList();
  /**
   * <pre>
   * Specifies a list of header matchers to use for matching requests. Each specified header must
   * match. The pseudo-headers `:path` and `:method` can be used to match the request path and
   * method, respectively.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 4;</code>
   */
  io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder getHeadersOrBuilder(
      int index);

  /**
   * <pre>
   * Specifies the name of the virtual cluster. The virtual cluster name as well
   * as the virtual host name are used when emitting statistics. The statistics are emitted by the
   * router filter and are documented :ref:`here &lt;config_http_filters_router_stats&gt;`.
   * </pre>
   *
   * <code>string name = 2 [(.validate.rules) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Specifies the name of the virtual cluster. The virtual cluster name as well
   * as the virtual host name are used when emitting statistics. The statistics are emitted by the
   * router filter and are documented :ref:`here &lt;config_http_filters_router_stats&gt;`.
   * </pre>
   *
   * <code>string name = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();
}
