// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/accesslog/v3/accesslog.proto

package io.envoyproxy.envoy.config.accesslog.v3;

public interface ResponseFlagFilterOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.accesslog.v3.ResponseFlagFilter)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Only responses with the any of the flags listed in this field will be
   * logged. This field is optional. If it is not specified, then any response
   * flag will pass the filter check.
   * </pre>
   *
   * <code>repeated string flags = 1 [(.validate.rules) = { ... }</code>
   * @return A list containing the flags.
   */
  java.util.List<java.lang.String>
      getFlagsList();
  /**
   * <pre>
   * Only responses with the any of the flags listed in this field will be
   * logged. This field is optional. If it is not specified, then any response
   * flag will pass the filter check.
   * </pre>
   *
   * <code>repeated string flags = 1 [(.validate.rules) = { ... }</code>
   * @return The count of flags.
   */
  int getFlagsCount();
  /**
   * <pre>
   * Only responses with the any of the flags listed in this field will be
   * logged. This field is optional. If it is not specified, then any response
   * flag will pass the filter check.
   * </pre>
   *
   * <code>repeated string flags = 1 [(.validate.rules) = { ... }</code>
   * @param index The index of the element to return.
   * @return The flags at the given index.
   */
  java.lang.String getFlags(int index);
  /**
   * <pre>
   * Only responses with the any of the flags listed in this field will be
   * logged. This field is optional. If it is not specified, then any response
   * flag will pass the filter check.
   * </pre>
   *
   * <code>repeated string flags = 1 [(.validate.rules) = { ... }</code>
   * @param index The index of the value to return.
   * @return The bytes of the flags at the given index.
   */
  com.google.protobuf.ByteString
      getFlagsBytes(int index);
}
