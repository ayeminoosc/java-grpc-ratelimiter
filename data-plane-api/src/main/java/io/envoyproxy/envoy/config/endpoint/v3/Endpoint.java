// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/endpoint/v3/endpoint_components.proto

package io.envoyproxy.envoy.config.endpoint.v3;

/**
 * <pre>
 * Upstream host identifier.
 * </pre>
 *
 * Protobuf type {@code envoy.config.endpoint.v3.Endpoint}
 */
public final class Endpoint extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.endpoint.v3.Endpoint)
    EndpointOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Endpoint.newBuilder() to construct.
  private Endpoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Endpoint() {
    hostname_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Endpoint();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Endpoint(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.envoyproxy.envoy.config.core.v3.Address.Builder subBuilder = null;
            if (address_ != null) {
              subBuilder = address_.toBuilder();
            }
            address_ = input.readMessage(io.envoyproxy.envoy.config.core.v3.Address.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(address_);
              address_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.Builder subBuilder = null;
            if (healthCheckConfig_ != null) {
              subBuilder = healthCheckConfig_.toBuilder();
            }
            healthCheckConfig_ = input.readMessage(io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(healthCheckConfig_);
              healthCheckConfig_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            hostname_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.endpoint.v3.EndpointComponentsProto.internal_static_envoy_config_endpoint_v3_Endpoint_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.endpoint.v3.EndpointComponentsProto.internal_static_envoy_config_endpoint_v3_Endpoint_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.endpoint.v3.Endpoint.class, io.envoyproxy.envoy.config.endpoint.v3.Endpoint.Builder.class);
  }

  public interface HealthCheckConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.config.endpoint.v3.Endpoint.HealthCheckConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Optional alternative health check port value.
     * By default the health check address port of an upstream host is the same
     * as the host's serving address port. This provides an alternative health
     * check port. Setting this with a non-zero value allows an upstream host
     * to have different health check address port.
     * </pre>
     *
     * <code>uint32 port_value = 1 [(.validate.rules) = { ... }</code>
     * @return The portValue.
     */
    int getPortValue();

    /**
     * <pre>
     * By default, the host header for L7 health checks is controlled by cluster level configuration
     * (see: :ref:`host &lt;envoy_api_field_config.core.v3.HealthCheck.HttpHealthCheck.host&gt;` and
     * :ref:`authority &lt;envoy_api_field_config.core.v3.HealthCheck.GrpcHealthCheck.authority&gt;`). Setting this
     * to a non-empty value allows overriding the cluster level configuration for a specific
     * endpoint.
     * </pre>
     *
     * <code>string hostname = 2;</code>
     * @return The hostname.
     */
    java.lang.String getHostname();
    /**
     * <pre>
     * By default, the host header for L7 health checks is controlled by cluster level configuration
     * (see: :ref:`host &lt;envoy_api_field_config.core.v3.HealthCheck.HttpHealthCheck.host&gt;` and
     * :ref:`authority &lt;envoy_api_field_config.core.v3.HealthCheck.GrpcHealthCheck.authority&gt;`). Setting this
     * to a non-empty value allows overriding the cluster level configuration for a specific
     * endpoint.
     * </pre>
     *
     * <code>string hostname = 2;</code>
     * @return The bytes for hostname.
     */
    com.google.protobuf.ByteString
        getHostnameBytes();
  }
  /**
   * <pre>
   * The optional health check configuration.
   * </pre>
   *
   * Protobuf type {@code envoy.config.endpoint.v3.Endpoint.HealthCheckConfig}
   */
  public static final class HealthCheckConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.config.endpoint.v3.Endpoint.HealthCheckConfig)
      HealthCheckConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HealthCheckConfig.newBuilder() to construct.
    private HealthCheckConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HealthCheckConfig() {
      hostname_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HealthCheckConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HealthCheckConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              portValue_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              hostname_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.endpoint.v3.EndpointComponentsProto.internal_static_envoy_config_endpoint_v3_Endpoint_HealthCheckConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.endpoint.v3.EndpointComponentsProto.internal_static_envoy_config_endpoint_v3_Endpoint_HealthCheckConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.class, io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.Builder.class);
    }

    public static final int PORT_VALUE_FIELD_NUMBER = 1;
    private int portValue_;
    /**
     * <pre>
     * Optional alternative health check port value.
     * By default the health check address port of an upstream host is the same
     * as the host's serving address port. This provides an alternative health
     * check port. Setting this with a non-zero value allows an upstream host
     * to have different health check address port.
     * </pre>
     *
     * <code>uint32 port_value = 1 [(.validate.rules) = { ... }</code>
     * @return The portValue.
     */
    @java.lang.Override
    public int getPortValue() {
      return portValue_;
    }

    public static final int HOSTNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object hostname_;
    /**
     * <pre>
     * By default, the host header for L7 health checks is controlled by cluster level configuration
     * (see: :ref:`host &lt;envoy_api_field_config.core.v3.HealthCheck.HttpHealthCheck.host&gt;` and
     * :ref:`authority &lt;envoy_api_field_config.core.v3.HealthCheck.GrpcHealthCheck.authority&gt;`). Setting this
     * to a non-empty value allows overriding the cluster level configuration for a specific
     * endpoint.
     * </pre>
     *
     * <code>string hostname = 2;</code>
     * @return The hostname.
     */
    @java.lang.Override
    public java.lang.String getHostname() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hostname_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * By default, the host header for L7 health checks is controlled by cluster level configuration
     * (see: :ref:`host &lt;envoy_api_field_config.core.v3.HealthCheck.HttpHealthCheck.host&gt;` and
     * :ref:`authority &lt;envoy_api_field_config.core.v3.HealthCheck.GrpcHealthCheck.authority&gt;`). Setting this
     * to a non-empty value allows overriding the cluster level configuration for a specific
     * endpoint.
     * </pre>
     *
     * <code>string hostname = 2;</code>
     * @return The bytes for hostname.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostnameBytes() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (portValue_ != 0) {
        output.writeUInt32(1, portValue_);
      }
      if (!getHostnameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, hostname_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (portValue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, portValue_);
      }
      if (!getHostnameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, hostname_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig other = (io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig) obj;

      if (getPortValue()
          != other.getPortValue()) return false;
      if (!getHostname()
          .equals(other.getHostname())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PORT_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getPortValue();
      hash = (37 * hash) + HOSTNAME_FIELD_NUMBER;
      hash = (53 * hash) + getHostname().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The optional health check configuration.
     * </pre>
     *
     * Protobuf type {@code envoy.config.endpoint.v3.Endpoint.HealthCheckConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.config.endpoint.v3.Endpoint.HealthCheckConfig)
        io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.endpoint.v3.EndpointComponentsProto.internal_static_envoy_config_endpoint_v3_Endpoint_HealthCheckConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.endpoint.v3.EndpointComponentsProto.internal_static_envoy_config_endpoint_v3_Endpoint_HealthCheckConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.class, io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        portValue_ = 0;

        hostname_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.config.endpoint.v3.EndpointComponentsProto.internal_static_envoy_config_endpoint_v3_Endpoint_HealthCheckConfig_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig getDefaultInstanceForType() {
        return io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig build() {
        io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig buildPartial() {
        io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig result = new io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig(this);
        result.portValue_ = portValue_;
        result.hostname_ = hostname_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig) {
          return mergeFrom((io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig other) {
        if (other == io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.getDefaultInstance()) return this;
        if (other.getPortValue() != 0) {
          setPortValue(other.getPortValue());
        }
        if (!other.getHostname().isEmpty()) {
          hostname_ = other.hostname_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int portValue_ ;
      /**
       * <pre>
       * Optional alternative health check port value.
       * By default the health check address port of an upstream host is the same
       * as the host's serving address port. This provides an alternative health
       * check port. Setting this with a non-zero value allows an upstream host
       * to have different health check address port.
       * </pre>
       *
       * <code>uint32 port_value = 1 [(.validate.rules) = { ... }</code>
       * @return The portValue.
       */
      @java.lang.Override
      public int getPortValue() {
        return portValue_;
      }
      /**
       * <pre>
       * Optional alternative health check port value.
       * By default the health check address port of an upstream host is the same
       * as the host's serving address port. This provides an alternative health
       * check port. Setting this with a non-zero value allows an upstream host
       * to have different health check address port.
       * </pre>
       *
       * <code>uint32 port_value = 1 [(.validate.rules) = { ... }</code>
       * @param value The portValue to set.
       * @return This builder for chaining.
       */
      public Builder setPortValue(int value) {
        
        portValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional alternative health check port value.
       * By default the health check address port of an upstream host is the same
       * as the host's serving address port. This provides an alternative health
       * check port. Setting this with a non-zero value allows an upstream host
       * to have different health check address port.
       * </pre>
       *
       * <code>uint32 port_value = 1 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPortValue() {
        
        portValue_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object hostname_ = "";
      /**
       * <pre>
       * By default, the host header for L7 health checks is controlled by cluster level configuration
       * (see: :ref:`host &lt;envoy_api_field_config.core.v3.HealthCheck.HttpHealthCheck.host&gt;` and
       * :ref:`authority &lt;envoy_api_field_config.core.v3.HealthCheck.GrpcHealthCheck.authority&gt;`). Setting this
       * to a non-empty value allows overriding the cluster level configuration for a specific
       * endpoint.
       * </pre>
       *
       * <code>string hostname = 2;</code>
       * @return The hostname.
       */
      public java.lang.String getHostname() {
        java.lang.Object ref = hostname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          hostname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * By default, the host header for L7 health checks is controlled by cluster level configuration
       * (see: :ref:`host &lt;envoy_api_field_config.core.v3.HealthCheck.HttpHealthCheck.host&gt;` and
       * :ref:`authority &lt;envoy_api_field_config.core.v3.HealthCheck.GrpcHealthCheck.authority&gt;`). Setting this
       * to a non-empty value allows overriding the cluster level configuration for a specific
       * endpoint.
       * </pre>
       *
       * <code>string hostname = 2;</code>
       * @return The bytes for hostname.
       */
      public com.google.protobuf.ByteString
          getHostnameBytes() {
        java.lang.Object ref = hostname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hostname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * By default, the host header for L7 health checks is controlled by cluster level configuration
       * (see: :ref:`host &lt;envoy_api_field_config.core.v3.HealthCheck.HttpHealthCheck.host&gt;` and
       * :ref:`authority &lt;envoy_api_field_config.core.v3.HealthCheck.GrpcHealthCheck.authority&gt;`). Setting this
       * to a non-empty value allows overriding the cluster level configuration for a specific
       * endpoint.
       * </pre>
       *
       * <code>string hostname = 2;</code>
       * @param value The hostname to set.
       * @return This builder for chaining.
       */
      public Builder setHostname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        hostname_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * By default, the host header for L7 health checks is controlled by cluster level configuration
       * (see: :ref:`host &lt;envoy_api_field_config.core.v3.HealthCheck.HttpHealthCheck.host&gt;` and
       * :ref:`authority &lt;envoy_api_field_config.core.v3.HealthCheck.GrpcHealthCheck.authority&gt;`). Setting this
       * to a non-empty value allows overriding the cluster level configuration for a specific
       * endpoint.
       * </pre>
       *
       * <code>string hostname = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHostname() {
        
        hostname_ = getDefaultInstance().getHostname();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * By default, the host header for L7 health checks is controlled by cluster level configuration
       * (see: :ref:`host &lt;envoy_api_field_config.core.v3.HealthCheck.HttpHealthCheck.host&gt;` and
       * :ref:`authority &lt;envoy_api_field_config.core.v3.HealthCheck.GrpcHealthCheck.authority&gt;`). Setting this
       * to a non-empty value allows overriding the cluster level configuration for a specific
       * endpoint.
       * </pre>
       *
       * <code>string hostname = 2;</code>
       * @param value The bytes for hostname to set.
       * @return This builder for chaining.
       */
      public Builder setHostnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        hostname_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.config.endpoint.v3.Endpoint.HealthCheckConfig)
    }

    // @@protoc_insertion_point(class_scope:envoy.config.endpoint.v3.Endpoint.HealthCheckConfig)
    private static final io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig();
    }

    public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HealthCheckConfig>
        PARSER = new com.google.protobuf.AbstractParser<HealthCheckConfig>() {
      @java.lang.Override
      public HealthCheckConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HealthCheckConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HealthCheckConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HealthCheckConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int ADDRESS_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.config.core.v3.Address address_;
  /**
   * <pre>
   * The upstream host address.
   * .. attention::
   *   The form of host address depends on the given cluster type. For STATIC or EDS,
   *   it is expected to be a direct IP address (or something resolvable by the
   *   specified :ref:`resolver &lt;envoy_api_field_config.core.v3.SocketAddress.resolver_name&gt;`
   *   in the Address). For LOGICAL or STRICT DNS, it is expected to be hostname,
   *   and will be resolved via DNS.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Address address = 1;</code>
   * @return Whether the address field is set.
   */
  @java.lang.Override
  public boolean hasAddress() {
    return address_ != null;
  }
  /**
   * <pre>
   * The upstream host address.
   * .. attention::
   *   The form of host address depends on the given cluster type. For STATIC or EDS,
   *   it is expected to be a direct IP address (or something resolvable by the
   *   specified :ref:`resolver &lt;envoy_api_field_config.core.v3.SocketAddress.resolver_name&gt;`
   *   in the Address). For LOGICAL or STRICT DNS, it is expected to be hostname,
   *   and will be resolved via DNS.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Address address = 1;</code>
   * @return The address.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.Address getAddress() {
    return address_ == null ? io.envoyproxy.envoy.config.core.v3.Address.getDefaultInstance() : address_;
  }
  /**
   * <pre>
   * The upstream host address.
   * .. attention::
   *   The form of host address depends on the given cluster type. For STATIC or EDS,
   *   it is expected to be a direct IP address (or something resolvable by the
   *   specified :ref:`resolver &lt;envoy_api_field_config.core.v3.SocketAddress.resolver_name&gt;`
   *   in the Address). For LOGICAL or STRICT DNS, it is expected to be hostname,
   *   and will be resolved via DNS.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Address address = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.AddressOrBuilder getAddressOrBuilder() {
    return getAddress();
  }

  public static final int HEALTH_CHECK_CONFIG_FIELD_NUMBER = 2;
  private io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig healthCheckConfig_;
  /**
   * <pre>
   * The optional health check configuration is used as configuration for the
   * health checker to contact the health checked host.
   * .. attention::
   *   This takes into effect only for upstream clusters with
   *   :ref:`active health checking &lt;arch_overview_health_checking&gt;` enabled.
   * </pre>
   *
   * <code>.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig health_check_config = 2;</code>
   * @return Whether the healthCheckConfig field is set.
   */
  @java.lang.Override
  public boolean hasHealthCheckConfig() {
    return healthCheckConfig_ != null;
  }
  /**
   * <pre>
   * The optional health check configuration is used as configuration for the
   * health checker to contact the health checked host.
   * .. attention::
   *   This takes into effect only for upstream clusters with
   *   :ref:`active health checking &lt;arch_overview_health_checking&gt;` enabled.
   * </pre>
   *
   * <code>.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig health_check_config = 2;</code>
   * @return The healthCheckConfig.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig getHealthCheckConfig() {
    return healthCheckConfig_ == null ? io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.getDefaultInstance() : healthCheckConfig_;
  }
  /**
   * <pre>
   * The optional health check configuration is used as configuration for the
   * health checker to contact the health checked host.
   * .. attention::
   *   This takes into effect only for upstream clusters with
   *   :ref:`active health checking &lt;arch_overview_health_checking&gt;` enabled.
   * </pre>
   *
   * <code>.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig health_check_config = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfigOrBuilder getHealthCheckConfigOrBuilder() {
    return getHealthCheckConfig();
  }

  public static final int HOSTNAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object hostname_;
  /**
   * <pre>
   * The hostname associated with this endpoint. This hostname is not used for routing or address
   * resolution. If provided, it will be associated with the endpoint, and can be used for features
   * that require a hostname, like
   * :ref:`auto_host_rewrite &lt;envoy_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`.
   * </pre>
   *
   * <code>string hostname = 3;</code>
   * @return The hostname.
   */
  @java.lang.Override
  public java.lang.String getHostname() {
    java.lang.Object ref = hostname_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      hostname_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The hostname associated with this endpoint. This hostname is not used for routing or address
   * resolution. If provided, it will be associated with the endpoint, and can be used for features
   * that require a hostname, like
   * :ref:`auto_host_rewrite &lt;envoy_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`.
   * </pre>
   *
   * <code>string hostname = 3;</code>
   * @return The bytes for hostname.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getHostnameBytes() {
    java.lang.Object ref = hostname_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      hostname_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (address_ != null) {
      output.writeMessage(1, getAddress());
    }
    if (healthCheckConfig_ != null) {
      output.writeMessage(2, getHealthCheckConfig());
    }
    if (!getHostnameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, hostname_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (address_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getAddress());
    }
    if (healthCheckConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getHealthCheckConfig());
    }
    if (!getHostnameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, hostname_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.endpoint.v3.Endpoint)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.endpoint.v3.Endpoint other = (io.envoyproxy.envoy.config.endpoint.v3.Endpoint) obj;

    if (hasAddress() != other.hasAddress()) return false;
    if (hasAddress()) {
      if (!getAddress()
          .equals(other.getAddress())) return false;
    }
    if (hasHealthCheckConfig() != other.hasHealthCheckConfig()) return false;
    if (hasHealthCheckConfig()) {
      if (!getHealthCheckConfig()
          .equals(other.getHealthCheckConfig())) return false;
    }
    if (!getHostname()
        .equals(other.getHostname())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAddress()) {
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
    }
    if (hasHealthCheckConfig()) {
      hash = (37 * hash) + HEALTH_CHECK_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getHealthCheckConfig().hashCode();
    }
    hash = (37 * hash) + HOSTNAME_FIELD_NUMBER;
    hash = (53 * hash) + getHostname().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.endpoint.v3.Endpoint prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Upstream host identifier.
   * </pre>
   *
   * Protobuf type {@code envoy.config.endpoint.v3.Endpoint}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.endpoint.v3.Endpoint)
      io.envoyproxy.envoy.config.endpoint.v3.EndpointOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.endpoint.v3.EndpointComponentsProto.internal_static_envoy_config_endpoint_v3_Endpoint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.endpoint.v3.EndpointComponentsProto.internal_static_envoy_config_endpoint_v3_Endpoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.endpoint.v3.Endpoint.class, io.envoyproxy.envoy.config.endpoint.v3.Endpoint.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.endpoint.v3.Endpoint.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (addressBuilder_ == null) {
        address_ = null;
      } else {
        address_ = null;
        addressBuilder_ = null;
      }
      if (healthCheckConfigBuilder_ == null) {
        healthCheckConfig_ = null;
      } else {
        healthCheckConfig_ = null;
        healthCheckConfigBuilder_ = null;
      }
      hostname_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.endpoint.v3.EndpointComponentsProto.internal_static_envoy_config_endpoint_v3_Endpoint_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.endpoint.v3.Endpoint getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.endpoint.v3.Endpoint.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.endpoint.v3.Endpoint build() {
      io.envoyproxy.envoy.config.endpoint.v3.Endpoint result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.endpoint.v3.Endpoint buildPartial() {
      io.envoyproxy.envoy.config.endpoint.v3.Endpoint result = new io.envoyproxy.envoy.config.endpoint.v3.Endpoint(this);
      if (addressBuilder_ == null) {
        result.address_ = address_;
      } else {
        result.address_ = addressBuilder_.build();
      }
      if (healthCheckConfigBuilder_ == null) {
        result.healthCheckConfig_ = healthCheckConfig_;
      } else {
        result.healthCheckConfig_ = healthCheckConfigBuilder_.build();
      }
      result.hostname_ = hostname_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.endpoint.v3.Endpoint) {
        return mergeFrom((io.envoyproxy.envoy.config.endpoint.v3.Endpoint)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.endpoint.v3.Endpoint other) {
      if (other == io.envoyproxy.envoy.config.endpoint.v3.Endpoint.getDefaultInstance()) return this;
      if (other.hasAddress()) {
        mergeAddress(other.getAddress());
      }
      if (other.hasHealthCheckConfig()) {
        mergeHealthCheckConfig(other.getHealthCheckConfig());
      }
      if (!other.getHostname().isEmpty()) {
        hostname_ = other.hostname_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.config.endpoint.v3.Endpoint parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.config.endpoint.v3.Endpoint) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.envoyproxy.envoy.config.core.v3.Address address_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.Address, io.envoyproxy.envoy.config.core.v3.Address.Builder, io.envoyproxy.envoy.config.core.v3.AddressOrBuilder> addressBuilder_;
    /**
     * <pre>
     * The upstream host address.
     * .. attention::
     *   The form of host address depends on the given cluster type. For STATIC or EDS,
     *   it is expected to be a direct IP address (or something resolvable by the
     *   specified :ref:`resolver &lt;envoy_api_field_config.core.v3.SocketAddress.resolver_name&gt;`
     *   in the Address). For LOGICAL or STRICT DNS, it is expected to be hostname,
     *   and will be resolved via DNS.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 1;</code>
     * @return Whether the address field is set.
     */
    public boolean hasAddress() {
      return addressBuilder_ != null || address_ != null;
    }
    /**
     * <pre>
     * The upstream host address.
     * .. attention::
     *   The form of host address depends on the given cluster type. For STATIC or EDS,
     *   it is expected to be a direct IP address (or something resolvable by the
     *   specified :ref:`resolver &lt;envoy_api_field_config.core.v3.SocketAddress.resolver_name&gt;`
     *   in the Address). For LOGICAL or STRICT DNS, it is expected to be hostname,
     *   and will be resolved via DNS.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 1;</code>
     * @return The address.
     */
    public io.envoyproxy.envoy.config.core.v3.Address getAddress() {
      if (addressBuilder_ == null) {
        return address_ == null ? io.envoyproxy.envoy.config.core.v3.Address.getDefaultInstance() : address_;
      } else {
        return addressBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The upstream host address.
     * .. attention::
     *   The form of host address depends on the given cluster type. For STATIC or EDS,
     *   it is expected to be a direct IP address (or something resolvable by the
     *   specified :ref:`resolver &lt;envoy_api_field_config.core.v3.SocketAddress.resolver_name&gt;`
     *   in the Address). For LOGICAL or STRICT DNS, it is expected to be hostname,
     *   and will be resolved via DNS.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 1;</code>
     */
    public Builder setAddress(io.envoyproxy.envoy.config.core.v3.Address value) {
      if (addressBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        address_ = value;
        onChanged();
      } else {
        addressBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The upstream host address.
     * .. attention::
     *   The form of host address depends on the given cluster type. For STATIC or EDS,
     *   it is expected to be a direct IP address (or something resolvable by the
     *   specified :ref:`resolver &lt;envoy_api_field_config.core.v3.SocketAddress.resolver_name&gt;`
     *   in the Address). For LOGICAL or STRICT DNS, it is expected to be hostname,
     *   and will be resolved via DNS.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 1;</code>
     */
    public Builder setAddress(
        io.envoyproxy.envoy.config.core.v3.Address.Builder builderForValue) {
      if (addressBuilder_ == null) {
        address_ = builderForValue.build();
        onChanged();
      } else {
        addressBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The upstream host address.
     * .. attention::
     *   The form of host address depends on the given cluster type. For STATIC or EDS,
     *   it is expected to be a direct IP address (or something resolvable by the
     *   specified :ref:`resolver &lt;envoy_api_field_config.core.v3.SocketAddress.resolver_name&gt;`
     *   in the Address). For LOGICAL or STRICT DNS, it is expected to be hostname,
     *   and will be resolved via DNS.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 1;</code>
     */
    public Builder mergeAddress(io.envoyproxy.envoy.config.core.v3.Address value) {
      if (addressBuilder_ == null) {
        if (address_ != null) {
          address_ =
            io.envoyproxy.envoy.config.core.v3.Address.newBuilder(address_).mergeFrom(value).buildPartial();
        } else {
          address_ = value;
        }
        onChanged();
      } else {
        addressBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The upstream host address.
     * .. attention::
     *   The form of host address depends on the given cluster type. For STATIC or EDS,
     *   it is expected to be a direct IP address (or something resolvable by the
     *   specified :ref:`resolver &lt;envoy_api_field_config.core.v3.SocketAddress.resolver_name&gt;`
     *   in the Address). For LOGICAL or STRICT DNS, it is expected to be hostname,
     *   and will be resolved via DNS.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 1;</code>
     */
    public Builder clearAddress() {
      if (addressBuilder_ == null) {
        address_ = null;
        onChanged();
      } else {
        address_ = null;
        addressBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The upstream host address.
     * .. attention::
     *   The form of host address depends on the given cluster type. For STATIC or EDS,
     *   it is expected to be a direct IP address (or something resolvable by the
     *   specified :ref:`resolver &lt;envoy_api_field_config.core.v3.SocketAddress.resolver_name&gt;`
     *   in the Address). For LOGICAL or STRICT DNS, it is expected to be hostname,
     *   and will be resolved via DNS.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 1;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.Address.Builder getAddressBuilder() {
      
      onChanged();
      return getAddressFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The upstream host address.
     * .. attention::
     *   The form of host address depends on the given cluster type. For STATIC or EDS,
     *   it is expected to be a direct IP address (or something resolvable by the
     *   specified :ref:`resolver &lt;envoy_api_field_config.core.v3.SocketAddress.resolver_name&gt;`
     *   in the Address). For LOGICAL or STRICT DNS, it is expected to be hostname,
     *   and will be resolved via DNS.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 1;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.AddressOrBuilder getAddressOrBuilder() {
      if (addressBuilder_ != null) {
        return addressBuilder_.getMessageOrBuilder();
      } else {
        return address_ == null ?
            io.envoyproxy.envoy.config.core.v3.Address.getDefaultInstance() : address_;
      }
    }
    /**
     * <pre>
     * The upstream host address.
     * .. attention::
     *   The form of host address depends on the given cluster type. For STATIC or EDS,
     *   it is expected to be a direct IP address (or something resolvable by the
     *   specified :ref:`resolver &lt;envoy_api_field_config.core.v3.SocketAddress.resolver_name&gt;`
     *   in the Address). For LOGICAL or STRICT DNS, it is expected to be hostname,
     *   and will be resolved via DNS.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.Address, io.envoyproxy.envoy.config.core.v3.Address.Builder, io.envoyproxy.envoy.config.core.v3.AddressOrBuilder> 
        getAddressFieldBuilder() {
      if (addressBuilder_ == null) {
        addressBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.Address, io.envoyproxy.envoy.config.core.v3.Address.Builder, io.envoyproxy.envoy.config.core.v3.AddressOrBuilder>(
                getAddress(),
                getParentForChildren(),
                isClean());
        address_ = null;
      }
      return addressBuilder_;
    }

    private io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig healthCheckConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig, io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.Builder, io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfigOrBuilder> healthCheckConfigBuilder_;
    /**
     * <pre>
     * The optional health check configuration is used as configuration for the
     * health checker to contact the health checked host.
     * .. attention::
     *   This takes into effect only for upstream clusters with
     *   :ref:`active health checking &lt;arch_overview_health_checking&gt;` enabled.
     * </pre>
     *
     * <code>.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig health_check_config = 2;</code>
     * @return Whether the healthCheckConfig field is set.
     */
    public boolean hasHealthCheckConfig() {
      return healthCheckConfigBuilder_ != null || healthCheckConfig_ != null;
    }
    /**
     * <pre>
     * The optional health check configuration is used as configuration for the
     * health checker to contact the health checked host.
     * .. attention::
     *   This takes into effect only for upstream clusters with
     *   :ref:`active health checking &lt;arch_overview_health_checking&gt;` enabled.
     * </pre>
     *
     * <code>.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig health_check_config = 2;</code>
     * @return The healthCheckConfig.
     */
    public io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig getHealthCheckConfig() {
      if (healthCheckConfigBuilder_ == null) {
        return healthCheckConfig_ == null ? io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.getDefaultInstance() : healthCheckConfig_;
      } else {
        return healthCheckConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The optional health check configuration is used as configuration for the
     * health checker to contact the health checked host.
     * .. attention::
     *   This takes into effect only for upstream clusters with
     *   :ref:`active health checking &lt;arch_overview_health_checking&gt;` enabled.
     * </pre>
     *
     * <code>.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig health_check_config = 2;</code>
     */
    public Builder setHealthCheckConfig(io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig value) {
      if (healthCheckConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        healthCheckConfig_ = value;
        onChanged();
      } else {
        healthCheckConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The optional health check configuration is used as configuration for the
     * health checker to contact the health checked host.
     * .. attention::
     *   This takes into effect only for upstream clusters with
     *   :ref:`active health checking &lt;arch_overview_health_checking&gt;` enabled.
     * </pre>
     *
     * <code>.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig health_check_config = 2;</code>
     */
    public Builder setHealthCheckConfig(
        io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.Builder builderForValue) {
      if (healthCheckConfigBuilder_ == null) {
        healthCheckConfig_ = builderForValue.build();
        onChanged();
      } else {
        healthCheckConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The optional health check configuration is used as configuration for the
     * health checker to contact the health checked host.
     * .. attention::
     *   This takes into effect only for upstream clusters with
     *   :ref:`active health checking &lt;arch_overview_health_checking&gt;` enabled.
     * </pre>
     *
     * <code>.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig health_check_config = 2;</code>
     */
    public Builder mergeHealthCheckConfig(io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig value) {
      if (healthCheckConfigBuilder_ == null) {
        if (healthCheckConfig_ != null) {
          healthCheckConfig_ =
            io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.newBuilder(healthCheckConfig_).mergeFrom(value).buildPartial();
        } else {
          healthCheckConfig_ = value;
        }
        onChanged();
      } else {
        healthCheckConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The optional health check configuration is used as configuration for the
     * health checker to contact the health checked host.
     * .. attention::
     *   This takes into effect only for upstream clusters with
     *   :ref:`active health checking &lt;arch_overview_health_checking&gt;` enabled.
     * </pre>
     *
     * <code>.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig health_check_config = 2;</code>
     */
    public Builder clearHealthCheckConfig() {
      if (healthCheckConfigBuilder_ == null) {
        healthCheckConfig_ = null;
        onChanged();
      } else {
        healthCheckConfig_ = null;
        healthCheckConfigBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The optional health check configuration is used as configuration for the
     * health checker to contact the health checked host.
     * .. attention::
     *   This takes into effect only for upstream clusters with
     *   :ref:`active health checking &lt;arch_overview_health_checking&gt;` enabled.
     * </pre>
     *
     * <code>.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig health_check_config = 2;</code>
     */
    public io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.Builder getHealthCheckConfigBuilder() {
      
      onChanged();
      return getHealthCheckConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The optional health check configuration is used as configuration for the
     * health checker to contact the health checked host.
     * .. attention::
     *   This takes into effect only for upstream clusters with
     *   :ref:`active health checking &lt;arch_overview_health_checking&gt;` enabled.
     * </pre>
     *
     * <code>.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig health_check_config = 2;</code>
     */
    public io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfigOrBuilder getHealthCheckConfigOrBuilder() {
      if (healthCheckConfigBuilder_ != null) {
        return healthCheckConfigBuilder_.getMessageOrBuilder();
      } else {
        return healthCheckConfig_ == null ?
            io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.getDefaultInstance() : healthCheckConfig_;
      }
    }
    /**
     * <pre>
     * The optional health check configuration is used as configuration for the
     * health checker to contact the health checked host.
     * .. attention::
     *   This takes into effect only for upstream clusters with
     *   :ref:`active health checking &lt;arch_overview_health_checking&gt;` enabled.
     * </pre>
     *
     * <code>.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig health_check_config = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig, io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.Builder, io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfigOrBuilder> 
        getHealthCheckConfigFieldBuilder() {
      if (healthCheckConfigBuilder_ == null) {
        healthCheckConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig, io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfig.Builder, io.envoyproxy.envoy.config.endpoint.v3.Endpoint.HealthCheckConfigOrBuilder>(
                getHealthCheckConfig(),
                getParentForChildren(),
                isClean());
        healthCheckConfig_ = null;
      }
      return healthCheckConfigBuilder_;
    }

    private java.lang.Object hostname_ = "";
    /**
     * <pre>
     * The hostname associated with this endpoint. This hostname is not used for routing or address
     * resolution. If provided, it will be associated with the endpoint, and can be used for features
     * that require a hostname, like
     * :ref:`auto_host_rewrite &lt;envoy_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`.
     * </pre>
     *
     * <code>string hostname = 3;</code>
     * @return The hostname.
     */
    public java.lang.String getHostname() {
      java.lang.Object ref = hostname_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        hostname_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The hostname associated with this endpoint. This hostname is not used for routing or address
     * resolution. If provided, it will be associated with the endpoint, and can be used for features
     * that require a hostname, like
     * :ref:`auto_host_rewrite &lt;envoy_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`.
     * </pre>
     *
     * <code>string hostname = 3;</code>
     * @return The bytes for hostname.
     */
    public com.google.protobuf.ByteString
        getHostnameBytes() {
      java.lang.Object ref = hostname_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The hostname associated with this endpoint. This hostname is not used for routing or address
     * resolution. If provided, it will be associated with the endpoint, and can be used for features
     * that require a hostname, like
     * :ref:`auto_host_rewrite &lt;envoy_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`.
     * </pre>
     *
     * <code>string hostname = 3;</code>
     * @param value The hostname to set.
     * @return This builder for chaining.
     */
    public Builder setHostname(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hostname_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The hostname associated with this endpoint. This hostname is not used for routing or address
     * resolution. If provided, it will be associated with the endpoint, and can be used for features
     * that require a hostname, like
     * :ref:`auto_host_rewrite &lt;envoy_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`.
     * </pre>
     *
     * <code>string hostname = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearHostname() {
      
      hostname_ = getDefaultInstance().getHostname();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The hostname associated with this endpoint. This hostname is not used for routing or address
     * resolution. If provided, it will be associated with the endpoint, and can be used for features
     * that require a hostname, like
     * :ref:`auto_host_rewrite &lt;envoy_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`.
     * </pre>
     *
     * <code>string hostname = 3;</code>
     * @param value The bytes for hostname to set.
     * @return This builder for chaining.
     */
    public Builder setHostnameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      hostname_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.endpoint.v3.Endpoint)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.endpoint.v3.Endpoint)
  private static final io.envoyproxy.envoy.config.endpoint.v3.Endpoint DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.endpoint.v3.Endpoint();
  }

  public static io.envoyproxy.envoy.config.endpoint.v3.Endpoint getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Endpoint>
      PARSER = new com.google.protobuf.AbstractParser<Endpoint>() {
    @java.lang.Override
    public Endpoint parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Endpoint(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Endpoint> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Endpoint> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.endpoint.v3.Endpoint getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

