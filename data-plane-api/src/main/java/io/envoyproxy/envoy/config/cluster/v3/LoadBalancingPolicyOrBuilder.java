// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/cluster/v3/cluster.proto

package io.envoyproxy.envoy.config.cluster.v3;

public interface LoadBalancingPolicyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.cluster.v3.LoadBalancingPolicy)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Each client will iterate over the list in order and stop at the first policy that it
   * supports. This provides a mechanism for starting to use new LB policies that are not yet
   * supported by all clients.
   * </pre>
   *
   * <code>repeated .envoy.config.cluster.v3.LoadBalancingPolicy.Policy policies = 1;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.cluster.v3.LoadBalancingPolicy.Policy> 
      getPoliciesList();
  /**
   * <pre>
   * Each client will iterate over the list in order and stop at the first policy that it
   * supports. This provides a mechanism for starting to use new LB policies that are not yet
   * supported by all clients.
   * </pre>
   *
   * <code>repeated .envoy.config.cluster.v3.LoadBalancingPolicy.Policy policies = 1;</code>
   */
  io.envoyproxy.envoy.config.cluster.v3.LoadBalancingPolicy.Policy getPolicies(int index);
  /**
   * <pre>
   * Each client will iterate over the list in order and stop at the first policy that it
   * supports. This provides a mechanism for starting to use new LB policies that are not yet
   * supported by all clients.
   * </pre>
   *
   * <code>repeated .envoy.config.cluster.v3.LoadBalancingPolicy.Policy policies = 1;</code>
   */
  int getPoliciesCount();
  /**
   * <pre>
   * Each client will iterate over the list in order and stop at the first policy that it
   * supports. This provides a mechanism for starting to use new LB policies that are not yet
   * supported by all clients.
   * </pre>
   *
   * <code>repeated .envoy.config.cluster.v3.LoadBalancingPolicy.Policy policies = 1;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.cluster.v3.LoadBalancingPolicy.PolicyOrBuilder> 
      getPoliciesOrBuilderList();
  /**
   * <pre>
   * Each client will iterate over the list in order and stop at the first policy that it
   * supports. This provides a mechanism for starting to use new LB policies that are not yet
   * supported by all clients.
   * </pre>
   *
   * <code>repeated .envoy.config.cluster.v3.LoadBalancingPolicy.Policy policies = 1;</code>
   */
  io.envoyproxy.envoy.config.cluster.v3.LoadBalancingPolicy.PolicyOrBuilder getPoliciesOrBuilder(
      int index);
}
