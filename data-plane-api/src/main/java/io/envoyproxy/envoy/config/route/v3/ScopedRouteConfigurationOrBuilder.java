// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/route/v3/scoped_route.proto

package io.envoyproxy.envoy.config.route.v3;

public interface ScopedRouteConfigurationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.ScopedRouteConfiguration)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Whether the RouteConfiguration should be loaded on demand.
   * </pre>
   *
   * <code>bool on_demand = 4;</code>
   * @return The onDemand.
   */
  boolean getOnDemand();

  /**
   * <pre>
   * The name assigned to the routing scope.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The name assigned to the routing scope.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The resource name to use for a :ref:`envoy_api_msg_service.discovery.v3.DiscoveryRequest` to an
   * RDS server to fetch the :ref:`envoy_api_msg_config.route.v3.RouteConfiguration` associated
   * with this scope.
   * </pre>
   *
   * <code>string route_configuration_name = 2 [(.validate.rules) = { ... }</code>
   * @return The routeConfigurationName.
   */
  java.lang.String getRouteConfigurationName();
  /**
   * <pre>
   * The resource name to use for a :ref:`envoy_api_msg_service.discovery.v3.DiscoveryRequest` to an
   * RDS server to fetch the :ref:`envoy_api_msg_config.route.v3.RouteConfiguration` associated
   * with this scope.
   * </pre>
   *
   * <code>string route_configuration_name = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for routeConfigurationName.
   */
  com.google.protobuf.ByteString
      getRouteConfigurationNameBytes();

  /**
   * <pre>
   * The key to match against.
   * </pre>
   *
   * <code>.envoy.config.route.v3.ScopedRouteConfiguration.Key key = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the key field is set.
   */
  boolean hasKey();
  /**
   * <pre>
   * The key to match against.
   * </pre>
   *
   * <code>.envoy.config.route.v3.ScopedRouteConfiguration.Key key = 3 [(.validate.rules) = { ... }</code>
   * @return The key.
   */
  io.envoyproxy.envoy.config.route.v3.ScopedRouteConfiguration.Key getKey();
  /**
   * <pre>
   * The key to match against.
   * </pre>
   *
   * <code>.envoy.config.route.v3.ScopedRouteConfiguration.Key key = 3 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.route.v3.ScopedRouteConfiguration.KeyOrBuilder getKeyOrBuilder();
}
