// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/route/v3/route_components.proto

package io.envoyproxy.envoy.config.route.v3;

public interface InternalRedirectPolicyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.InternalRedirectPolicy)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * An internal redirect is not handled, unless the number of previous internal redirects that a
   * downstream request has encountered is lower than this value.
   * In the case where a downstream request is bounced among multiple routes by internal redirect,
   * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
   * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
   * will pass the redirect back to downstream.
   * If not specified, at most one redirect will be followed.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
   * @return Whether the maxInternalRedirects field is set.
   */
  boolean hasMaxInternalRedirects();
  /**
   * <pre>
   * An internal redirect is not handled, unless the number of previous internal redirects that a
   * downstream request has encountered is lower than this value.
   * In the case where a downstream request is bounced among multiple routes by internal redirect,
   * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
   * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
   * will pass the redirect back to downstream.
   * If not specified, at most one redirect will be followed.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
   * @return The maxInternalRedirects.
   */
  com.google.protobuf.UInt32Value getMaxInternalRedirects();
  /**
   * <pre>
   * An internal redirect is not handled, unless the number of previous internal redirects that a
   * downstream request has encountered is lower than this value.
   * In the case where a downstream request is bounced among multiple routes by internal redirect,
   * the first route that hits this threshold, or does not set :ref:`internal_redirect_policy
   * &lt;envoy_api_field_config.route.v3.RouteAction.internal_redirect_policy&gt;`
   * will pass the redirect back to downstream.
   * If not specified, at most one redirect will be followed.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_internal_redirects = 1;</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getMaxInternalRedirectsOrBuilder();

  /**
   * <pre>
   * Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,
   * only 302 will be treated as internal redirect.
   * Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.
   * </pre>
   *
   * <code>repeated uint32 redirect_response_codes = 2 [(.validate.rules) = { ... }</code>
   * @return A list containing the redirectResponseCodes.
   */
  java.util.List<java.lang.Integer> getRedirectResponseCodesList();
  /**
   * <pre>
   * Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,
   * only 302 will be treated as internal redirect.
   * Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.
   * </pre>
   *
   * <code>repeated uint32 redirect_response_codes = 2 [(.validate.rules) = { ... }</code>
   * @return The count of redirectResponseCodes.
   */
  int getRedirectResponseCodesCount();
  /**
   * <pre>
   * Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,
   * only 302 will be treated as internal redirect.
   * Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.
   * </pre>
   *
   * <code>repeated uint32 redirect_response_codes = 2 [(.validate.rules) = { ... }</code>
   * @param index The index of the element to return.
   * @return The redirectResponseCodes at the given index.
   */
  int getRedirectResponseCodes(int index);

  /**
   * <pre>
   * Specifies a list of predicates that are queried when an upstream response is deemed
   * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
   * the redirect, causing the response to be proxied to downstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig> 
      getPredicatesList();
  /**
   * <pre>
   * Specifies a list of predicates that are queried when an upstream response is deemed
   * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
   * the redirect, causing the response to be proxied to downstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getPredicates(int index);
  /**
   * <pre>
   * Specifies a list of predicates that are queried when an upstream response is deemed
   * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
   * the redirect, causing the response to be proxied to downstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
   */
  int getPredicatesCount();
  /**
   * <pre>
   * Specifies a list of predicates that are queried when an upstream response is deemed
   * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
   * the redirect, causing the response to be proxied to downstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder> 
      getPredicatesOrBuilderList();
  /**
   * <pre>
   * Specifies a list of predicates that are queried when an upstream response is deemed
   * to trigger an internal redirect by all other criteria. Any predicate in the list can reject
   * the redirect, causing the response to be proxied to downstream.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.TypedExtensionConfig predicates = 3;</code>
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getPredicatesOrBuilder(
      int index);

  /**
   * <pre>
   * Allow internal redirect to follow a target URI with a different scheme than the value of
   * x-forwarded-proto. The default is false.
   * </pre>
   *
   * <code>bool allow_cross_scheme_redirect = 4;</code>
   * @return The allowCrossSchemeRedirect.
   */
  boolean getAllowCrossSchemeRedirect();
}
