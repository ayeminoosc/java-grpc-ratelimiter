// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/network/rocketmq_proxy/v3/route.proto

package io.envoyproxy.envoy.extensions.filters.network.rocketmq_proxy.v3;

public interface RouteActionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.network.rocketmq_proxy.v3.RouteAction)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Indicates the upstream cluster to which the request should be routed.
   * </pre>
   *
   * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
   * @return The cluster.
   */
  java.lang.String getCluster();
  /**
   * <pre>
   * Indicates the upstream cluster to which the request should be routed.
   * </pre>
   *
   * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for cluster.
   */
  com.google.protobuf.ByteString
      getClusterBytes();

  /**
   * <pre>
   * Optional endpoint metadata match criteria used by the subset load balancer.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Metadata metadata_match = 2;</code>
   * @return Whether the metadataMatch field is set.
   */
  boolean hasMetadataMatch();
  /**
   * <pre>
   * Optional endpoint metadata match criteria used by the subset load balancer.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Metadata metadata_match = 2;</code>
   * @return The metadataMatch.
   */
  io.envoyproxy.envoy.config.core.v3.Metadata getMetadataMatch();
  /**
   * <pre>
   * Optional endpoint metadata match criteria used by the subset load balancer.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Metadata metadata_match = 2;</code>
   */
  io.envoyproxy.envoy.config.core.v3.MetadataOrBuilder getMetadataMatchOrBuilder();
}
