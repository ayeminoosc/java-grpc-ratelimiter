// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/transport_sockets/tls/v3/secret.proto

package io.envoyproxy.envoy.extensions.transport_sockets.tls.v3;

public interface SdsSecretConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.transport_sockets.tls.v3.SdsSecretConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Name by which the secret can be uniquely referred to. When both name and config are specified,
   * then secret can be fetched and/or reloaded via SDS. When only name is specified, then secret
   * will be loaded from static resources.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name by which the secret can be uniquely referred to. When both name and config are specified,
   * then secret can be fetched and/or reloaded via SDS. When only name is specified, then secret
   * will be loaded from static resources.
   * </pre>
   *
   * <code>string name = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>.envoy.config.core.v3.ConfigSource sds_config = 2;</code>
   * @return Whether the sdsConfig field is set.
   */
  boolean hasSdsConfig();
  /**
   * <code>.envoy.config.core.v3.ConfigSource sds_config = 2;</code>
   * @return The sdsConfig.
   */
  io.envoyproxy.envoy.config.core.v3.ConfigSource getSdsConfig();
  /**
   * <code>.envoy.config.core.v3.ConfigSource sds_config = 2;</code>
   */
  io.envoyproxy.envoy.config.core.v3.ConfigSourceOrBuilder getSdsConfigOrBuilder();
}
