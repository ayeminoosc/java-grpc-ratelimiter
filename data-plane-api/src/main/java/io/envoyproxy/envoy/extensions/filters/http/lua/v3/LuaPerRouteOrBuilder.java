// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/lua/v3/lua.proto

package io.envoyproxy.envoy.extensions.filters.http.lua.v3;

public interface LuaPerRouteOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.lua.v3.LuaPerRoute)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Disable the Lua filter for this particular vhost or route. If disabled is specified in
   * multiple per-filter-configs, the most specific one will be used.
   * </pre>
   *
   * <code>bool disabled = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the disabled field is set.
   */
  boolean hasDisabled();
  /**
   * <pre>
   * Disable the Lua filter for this particular vhost or route. If disabled is specified in
   * multiple per-filter-configs, the most specific one will be used.
   * </pre>
   *
   * <code>bool disabled = 1 [(.validate.rules) = { ... }</code>
   * @return The disabled.
   */
  boolean getDisabled();

  /**
   * <pre>
   * A name of a Lua source code stored in
   * :ref:`Lua.source_codes &lt;envoy_v3_api_field_extensions.filters.http.lua.v3.Lua.source_codes&gt;`.
   * </pre>
   *
   * <code>string name = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the name field is set.
   */
  boolean hasName();
  /**
   * <pre>
   * A name of a Lua source code stored in
   * :ref:`Lua.source_codes &lt;envoy_v3_api_field_extensions.filters.http.lua.v3.Lua.source_codes&gt;`.
   * </pre>
   *
   * <code>string name = 2 [(.validate.rules) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * A name of a Lua source code stored in
   * :ref:`Lua.source_codes &lt;envoy_v3_api_field_extensions.filters.http.lua.v3.Lua.source_codes&gt;`.
   * </pre>
   *
   * <code>string name = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * A configured per-route Lua source code that can be served by RDS or provided inline.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DataSource source_code = 3;</code>
   * @return Whether the sourceCode field is set.
   */
  boolean hasSourceCode();
  /**
   * <pre>
   * A configured per-route Lua source code that can be served by RDS or provided inline.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DataSource source_code = 3;</code>
   * @return The sourceCode.
   */
  io.envoyproxy.envoy.config.core.v3.DataSource getSourceCode();
  /**
   * <pre>
   * A configured per-route Lua source code that can be served by RDS or provided inline.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DataSource source_code = 3;</code>
   */
  io.envoyproxy.envoy.config.core.v3.DataSourceOrBuilder getSourceCodeOrBuilder();

  public io.envoyproxy.envoy.extensions.filters.http.lua.v3.LuaPerRoute.OverrideCase getOverrideCase();
}
