// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/rbac/v3/rbac.proto

package io.envoyproxy.envoy.extensions.filters.http.rbac.v3;

/**
 * <pre>
 * RBAC filter config.
 * </pre>
 *
 * Protobuf type {@code envoy.extensions.filters.http.rbac.v3.RBAC}
 */
public final class RBAC extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.rbac.v3.RBAC)
    RBACOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RBAC.newBuilder() to construct.
  private RBAC(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RBAC() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RBAC();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RBAC(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.envoyproxy.envoy.config.rbac.v3.RBAC.Builder subBuilder = null;
            if (rules_ != null) {
              subBuilder = rules_.toBuilder();
            }
            rules_ = input.readMessage(io.envoyproxy.envoy.config.rbac.v3.RBAC.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(rules_);
              rules_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.envoyproxy.envoy.config.rbac.v3.RBAC.Builder subBuilder = null;
            if (shadowRules_ != null) {
              subBuilder = shadowRules_.toBuilder();
            }
            shadowRules_ = input.readMessage(io.envoyproxy.envoy.config.rbac.v3.RBAC.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(shadowRules_);
              shadowRules_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RbacProto.internal_static_envoy_extensions_filters_http_rbac_v3_RBAC_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RbacProto.internal_static_envoy_extensions_filters_http_rbac_v3_RBAC_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC.class, io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC.Builder.class);
  }

  public static final int RULES_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.config.rbac.v3.RBAC rules_;
  /**
   * <pre>
   * Specify the RBAC rules to be applied globally.
   * If absent, no enforcing RBAC policy will be applied.
   * </pre>
   *
   * <code>.envoy.config.rbac.v3.RBAC rules = 1;</code>
   * @return Whether the rules field is set.
   */
  @java.lang.Override
  public boolean hasRules() {
    return rules_ != null;
  }
  /**
   * <pre>
   * Specify the RBAC rules to be applied globally.
   * If absent, no enforcing RBAC policy will be applied.
   * </pre>
   *
   * <code>.envoy.config.rbac.v3.RBAC rules = 1;</code>
   * @return The rules.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.rbac.v3.RBAC getRules() {
    return rules_ == null ? io.envoyproxy.envoy.config.rbac.v3.RBAC.getDefaultInstance() : rules_;
  }
  /**
   * <pre>
   * Specify the RBAC rules to be applied globally.
   * If absent, no enforcing RBAC policy will be applied.
   * </pre>
   *
   * <code>.envoy.config.rbac.v3.RBAC rules = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.rbac.v3.RBACOrBuilder getRulesOrBuilder() {
    return getRules();
  }

  public static final int SHADOW_RULES_FIELD_NUMBER = 2;
  private io.envoyproxy.envoy.config.rbac.v3.RBAC shadowRules_;
  /**
   * <pre>
   * Shadow rules are not enforced by the filter (i.e., returning a 403)
   * but will emit stats and logs and can be used for rule testing.
   * If absent, no shadow RBAC policy will be applied.
   * </pre>
   *
   * <code>.envoy.config.rbac.v3.RBAC shadow_rules = 2;</code>
   * @return Whether the shadowRules field is set.
   */
  @java.lang.Override
  public boolean hasShadowRules() {
    return shadowRules_ != null;
  }
  /**
   * <pre>
   * Shadow rules are not enforced by the filter (i.e., returning a 403)
   * but will emit stats and logs and can be used for rule testing.
   * If absent, no shadow RBAC policy will be applied.
   * </pre>
   *
   * <code>.envoy.config.rbac.v3.RBAC shadow_rules = 2;</code>
   * @return The shadowRules.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.rbac.v3.RBAC getShadowRules() {
    return shadowRules_ == null ? io.envoyproxy.envoy.config.rbac.v3.RBAC.getDefaultInstance() : shadowRules_;
  }
  /**
   * <pre>
   * Shadow rules are not enforced by the filter (i.e., returning a 403)
   * but will emit stats and logs and can be used for rule testing.
   * If absent, no shadow RBAC policy will be applied.
   * </pre>
   *
   * <code>.envoy.config.rbac.v3.RBAC shadow_rules = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.rbac.v3.RBACOrBuilder getShadowRulesOrBuilder() {
    return getShadowRules();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (rules_ != null) {
      output.writeMessage(1, getRules());
    }
    if (shadowRules_ != null) {
      output.writeMessage(2, getShadowRules());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (rules_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getRules());
    }
    if (shadowRules_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getShadowRules());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC other = (io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC) obj;

    if (hasRules() != other.hasRules()) return false;
    if (hasRules()) {
      if (!getRules()
          .equals(other.getRules())) return false;
    }
    if (hasShadowRules() != other.hasShadowRules()) return false;
    if (hasShadowRules()) {
      if (!getShadowRules()
          .equals(other.getShadowRules())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasRules()) {
      hash = (37 * hash) + RULES_FIELD_NUMBER;
      hash = (53 * hash) + getRules().hashCode();
    }
    if (hasShadowRules()) {
      hash = (37 * hash) + SHADOW_RULES_FIELD_NUMBER;
      hash = (53 * hash) + getShadowRules().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * RBAC filter config.
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.http.rbac.v3.RBAC}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.rbac.v3.RBAC)
      io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBACOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RbacProto.internal_static_envoy_extensions_filters_http_rbac_v3_RBAC_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RbacProto.internal_static_envoy_extensions_filters_http_rbac_v3_RBAC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC.class, io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (rulesBuilder_ == null) {
        rules_ = null;
      } else {
        rules_ = null;
        rulesBuilder_ = null;
      }
      if (shadowRulesBuilder_ == null) {
        shadowRules_ = null;
      } else {
        shadowRules_ = null;
        shadowRulesBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RbacProto.internal_static_envoy_extensions_filters_http_rbac_v3_RBAC_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC build() {
      io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC buildPartial() {
      io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC result = new io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC(this);
      if (rulesBuilder_ == null) {
        result.rules_ = rules_;
      } else {
        result.rules_ = rulesBuilder_.build();
      }
      if (shadowRulesBuilder_ == null) {
        result.shadowRules_ = shadowRules_;
      } else {
        result.shadowRules_ = shadowRulesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC other) {
      if (other == io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC.getDefaultInstance()) return this;
      if (other.hasRules()) {
        mergeRules(other.getRules());
      }
      if (other.hasShadowRules()) {
        mergeShadowRules(other.getShadowRules());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.envoyproxy.envoy.config.rbac.v3.RBAC rules_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.rbac.v3.RBAC, io.envoyproxy.envoy.config.rbac.v3.RBAC.Builder, io.envoyproxy.envoy.config.rbac.v3.RBACOrBuilder> rulesBuilder_;
    /**
     * <pre>
     * Specify the RBAC rules to be applied globally.
     * If absent, no enforcing RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC rules = 1;</code>
     * @return Whether the rules field is set.
     */
    public boolean hasRules() {
      return rulesBuilder_ != null || rules_ != null;
    }
    /**
     * <pre>
     * Specify the RBAC rules to be applied globally.
     * If absent, no enforcing RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC rules = 1;</code>
     * @return The rules.
     */
    public io.envoyproxy.envoy.config.rbac.v3.RBAC getRules() {
      if (rulesBuilder_ == null) {
        return rules_ == null ? io.envoyproxy.envoy.config.rbac.v3.RBAC.getDefaultInstance() : rules_;
      } else {
        return rulesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specify the RBAC rules to be applied globally.
     * If absent, no enforcing RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC rules = 1;</code>
     */
    public Builder setRules(io.envoyproxy.envoy.config.rbac.v3.RBAC value) {
      if (rulesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rules_ = value;
        onChanged();
      } else {
        rulesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specify the RBAC rules to be applied globally.
     * If absent, no enforcing RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC rules = 1;</code>
     */
    public Builder setRules(
        io.envoyproxy.envoy.config.rbac.v3.RBAC.Builder builderForValue) {
      if (rulesBuilder_ == null) {
        rules_ = builderForValue.build();
        onChanged();
      } else {
        rulesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Specify the RBAC rules to be applied globally.
     * If absent, no enforcing RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC rules = 1;</code>
     */
    public Builder mergeRules(io.envoyproxy.envoy.config.rbac.v3.RBAC value) {
      if (rulesBuilder_ == null) {
        if (rules_ != null) {
          rules_ =
            io.envoyproxy.envoy.config.rbac.v3.RBAC.newBuilder(rules_).mergeFrom(value).buildPartial();
        } else {
          rules_ = value;
        }
        onChanged();
      } else {
        rulesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specify the RBAC rules to be applied globally.
     * If absent, no enforcing RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC rules = 1;</code>
     */
    public Builder clearRules() {
      if (rulesBuilder_ == null) {
        rules_ = null;
        onChanged();
      } else {
        rules_ = null;
        rulesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Specify the RBAC rules to be applied globally.
     * If absent, no enforcing RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC rules = 1;</code>
     */
    public io.envoyproxy.envoy.config.rbac.v3.RBAC.Builder getRulesBuilder() {
      
      onChanged();
      return getRulesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specify the RBAC rules to be applied globally.
     * If absent, no enforcing RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC rules = 1;</code>
     */
    public io.envoyproxy.envoy.config.rbac.v3.RBACOrBuilder getRulesOrBuilder() {
      if (rulesBuilder_ != null) {
        return rulesBuilder_.getMessageOrBuilder();
      } else {
        return rules_ == null ?
            io.envoyproxy.envoy.config.rbac.v3.RBAC.getDefaultInstance() : rules_;
      }
    }
    /**
     * <pre>
     * Specify the RBAC rules to be applied globally.
     * If absent, no enforcing RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC rules = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.rbac.v3.RBAC, io.envoyproxy.envoy.config.rbac.v3.RBAC.Builder, io.envoyproxy.envoy.config.rbac.v3.RBACOrBuilder> 
        getRulesFieldBuilder() {
      if (rulesBuilder_ == null) {
        rulesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.rbac.v3.RBAC, io.envoyproxy.envoy.config.rbac.v3.RBAC.Builder, io.envoyproxy.envoy.config.rbac.v3.RBACOrBuilder>(
                getRules(),
                getParentForChildren(),
                isClean());
        rules_ = null;
      }
      return rulesBuilder_;
    }

    private io.envoyproxy.envoy.config.rbac.v3.RBAC shadowRules_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.rbac.v3.RBAC, io.envoyproxy.envoy.config.rbac.v3.RBAC.Builder, io.envoyproxy.envoy.config.rbac.v3.RBACOrBuilder> shadowRulesBuilder_;
    /**
     * <pre>
     * Shadow rules are not enforced by the filter (i.e., returning a 403)
     * but will emit stats and logs and can be used for rule testing.
     * If absent, no shadow RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC shadow_rules = 2;</code>
     * @return Whether the shadowRules field is set.
     */
    public boolean hasShadowRules() {
      return shadowRulesBuilder_ != null || shadowRules_ != null;
    }
    /**
     * <pre>
     * Shadow rules are not enforced by the filter (i.e., returning a 403)
     * but will emit stats and logs and can be used for rule testing.
     * If absent, no shadow RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC shadow_rules = 2;</code>
     * @return The shadowRules.
     */
    public io.envoyproxy.envoy.config.rbac.v3.RBAC getShadowRules() {
      if (shadowRulesBuilder_ == null) {
        return shadowRules_ == null ? io.envoyproxy.envoy.config.rbac.v3.RBAC.getDefaultInstance() : shadowRules_;
      } else {
        return shadowRulesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Shadow rules are not enforced by the filter (i.e., returning a 403)
     * but will emit stats and logs and can be used for rule testing.
     * If absent, no shadow RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC shadow_rules = 2;</code>
     */
    public Builder setShadowRules(io.envoyproxy.envoy.config.rbac.v3.RBAC value) {
      if (shadowRulesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        shadowRules_ = value;
        onChanged();
      } else {
        shadowRulesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Shadow rules are not enforced by the filter (i.e., returning a 403)
     * but will emit stats and logs and can be used for rule testing.
     * If absent, no shadow RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC shadow_rules = 2;</code>
     */
    public Builder setShadowRules(
        io.envoyproxy.envoy.config.rbac.v3.RBAC.Builder builderForValue) {
      if (shadowRulesBuilder_ == null) {
        shadowRules_ = builderForValue.build();
        onChanged();
      } else {
        shadowRulesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Shadow rules are not enforced by the filter (i.e., returning a 403)
     * but will emit stats and logs and can be used for rule testing.
     * If absent, no shadow RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC shadow_rules = 2;</code>
     */
    public Builder mergeShadowRules(io.envoyproxy.envoy.config.rbac.v3.RBAC value) {
      if (shadowRulesBuilder_ == null) {
        if (shadowRules_ != null) {
          shadowRules_ =
            io.envoyproxy.envoy.config.rbac.v3.RBAC.newBuilder(shadowRules_).mergeFrom(value).buildPartial();
        } else {
          shadowRules_ = value;
        }
        onChanged();
      } else {
        shadowRulesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Shadow rules are not enforced by the filter (i.e., returning a 403)
     * but will emit stats and logs and can be used for rule testing.
     * If absent, no shadow RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC shadow_rules = 2;</code>
     */
    public Builder clearShadowRules() {
      if (shadowRulesBuilder_ == null) {
        shadowRules_ = null;
        onChanged();
      } else {
        shadowRules_ = null;
        shadowRulesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Shadow rules are not enforced by the filter (i.e., returning a 403)
     * but will emit stats and logs and can be used for rule testing.
     * If absent, no shadow RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC shadow_rules = 2;</code>
     */
    public io.envoyproxy.envoy.config.rbac.v3.RBAC.Builder getShadowRulesBuilder() {
      
      onChanged();
      return getShadowRulesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Shadow rules are not enforced by the filter (i.e., returning a 403)
     * but will emit stats and logs and can be used for rule testing.
     * If absent, no shadow RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC shadow_rules = 2;</code>
     */
    public io.envoyproxy.envoy.config.rbac.v3.RBACOrBuilder getShadowRulesOrBuilder() {
      if (shadowRulesBuilder_ != null) {
        return shadowRulesBuilder_.getMessageOrBuilder();
      } else {
        return shadowRules_ == null ?
            io.envoyproxy.envoy.config.rbac.v3.RBAC.getDefaultInstance() : shadowRules_;
      }
    }
    /**
     * <pre>
     * Shadow rules are not enforced by the filter (i.e., returning a 403)
     * but will emit stats and logs and can be used for rule testing.
     * If absent, no shadow RBAC policy will be applied.
     * </pre>
     *
     * <code>.envoy.config.rbac.v3.RBAC shadow_rules = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.rbac.v3.RBAC, io.envoyproxy.envoy.config.rbac.v3.RBAC.Builder, io.envoyproxy.envoy.config.rbac.v3.RBACOrBuilder> 
        getShadowRulesFieldBuilder() {
      if (shadowRulesBuilder_ == null) {
        shadowRulesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.rbac.v3.RBAC, io.envoyproxy.envoy.config.rbac.v3.RBAC.Builder, io.envoyproxy.envoy.config.rbac.v3.RBACOrBuilder>(
                getShadowRules(),
                getParentForChildren(),
                isClean());
        shadowRules_ = null;
      }
      return shadowRulesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.rbac.v3.RBAC)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.rbac.v3.RBAC)
  private static final io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC();
  }

  public static io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RBAC>
      PARSER = new com.google.protobuf.AbstractParser<RBAC>() {
    @java.lang.Override
    public RBAC parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RBAC(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RBAC> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RBAC> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.rbac.v3.RBAC getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

