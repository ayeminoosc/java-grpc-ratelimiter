// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/network/rbac/v3/rbac.proto

package io.envoyproxy.envoy.extensions.filters.network.rbac.v3;

public final class RbacProto {
  private RbacProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_filters_network_rbac_v3_RBAC_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_filters_network_rbac_v3_RBAC_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n3envoy/extensions/filters/network/rbac/" +
      "v3/rbac.proto\022(envoy.extensions.filters." +
      "network.rbac.v3\032\037envoy/config/rbac/v3/rb" +
      "ac.proto\032\035udpa/annotations/status.proto\032" +
      "!udpa/annotations/versioning.proto\032\027vali" +
      "date/validate.proto\"\313\002\n\004RBAC\022)\n\005rules\030\001 " +
      "\001(\0132\032.envoy.config.rbac.v3.RBAC\0220\n\014shado" +
      "w_rules\030\002 \001(\0132\032.envoy.config.rbac.v3.RBA" +
      "C\022\034\n\013stat_prefix\030\003 \001(\tB\007\372B\004r\002\020\001\022X\n\020enfor" +
      "cement_type\030\004 \001(\0162>.envoy.extensions.fil" +
      "ters.network.rbac.v3.RBAC.EnforcementTyp" +
      "e\"=\n\017EnforcementType\022\032\n\026ONE_TIME_ON_FIRS" +
      "T_BYTE\020\000\022\016\n\nCONTINUOUS\020\001:/\232\305\210\036*\n(envoy.c" +
      "onfig.filter.network.rbac.v2.RBACBM\n6io." +
      "envoyproxy.envoy.extensions.filters.netw" +
      "ork.rbac.v3B\tRbacProtoP\001\272\200\310\321\006\002\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.envoyproxy.envoy.config.rbac.v3.RbacProto.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
          udpa.annotations.Versioning.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_envoy_extensions_filters_network_rbac_v3_RBAC_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_extensions_filters_network_rbac_v3_RBAC_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_filters_network_rbac_v3_RBAC_descriptor,
        new java.lang.String[] { "Rules", "ShadowRules", "StatPrefix", "EnforcementType", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(udpa.annotations.Versioning.versioning);
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.envoyproxy.envoy.config.rbac.v3.RbacProto.getDescriptor();
    udpa.annotations.Status.getDescriptor();
    udpa.annotations.Versioning.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
