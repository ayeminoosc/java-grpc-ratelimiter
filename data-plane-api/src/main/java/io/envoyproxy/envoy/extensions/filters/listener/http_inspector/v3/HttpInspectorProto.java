// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/listener/http_inspector/v3/http_inspector.proto

package io.envoyproxy.envoy.extensions.filters.listener.http_inspector.v3;

public final class HttpInspectorProto {
  private HttpInspectorProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_filters_listener_http_inspector_v3_HttpInspector_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_filters_listener_http_inspector_v3_HttpInspector_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nHenvoy/extensions/filters/listener/http" +
      "_inspector/v3/http_inspector.proto\0223envo" +
      "y.extensions.filters.listener.http_inspe" +
      "ctor.v3\032\035udpa/annotations/status.proto\032!" +
      "udpa/annotations/versioning.proto\"T\n\rHtt" +
      "pInspector:C\232\305\210\036>\n<envoy.config.filter.l" +
      "istener.http_inspector.v2.HttpInspectorB" +
      "a\nAio.envoyproxy.envoy.extensions.filter" +
      "s.listener.http_inspector.v3B\022HttpInspec" +
      "torProtoP\001\272\200\310\321\006\002\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          udpa.annotations.Status.getDescriptor(),
          udpa.annotations.Versioning.getDescriptor(),
        });
    internal_static_envoy_extensions_filters_listener_http_inspector_v3_HttpInspector_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_extensions_filters_listener_http_inspector_v3_HttpInspector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_filters_listener_http_inspector_v3_HttpInspector_descriptor,
        new java.lang.String[] { });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(udpa.annotations.Versioning.versioning);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    udpa.annotations.Status.getDescriptor();
    udpa.annotations.Versioning.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
