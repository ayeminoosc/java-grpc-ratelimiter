// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/ratelimit/v3/rate_limit.proto

package io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3;

/**
 * <pre>
 * [#next-free-field: 10]
 * </pre>
 *
 * Protobuf type {@code envoy.extensions.filters.http.ratelimit.v3.RateLimit}
 */
public final class RateLimit extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.ratelimit.v3.RateLimit)
    RateLimitOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RateLimit.newBuilder() to construct.
  private RateLimit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RateLimit() {
    domain_ = "";
    requestType_ = "";
    enableXRatelimitHeaders_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RateLimit();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RateLimit(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            domain_ = s;
            break;
          }
          case 16: {

            stage_ = input.readUInt32();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            requestType_ = s;
            break;
          }
          case 34: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (timeout_ != null) {
              subBuilder = timeout_.toBuilder();
            }
            timeout_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(timeout_);
              timeout_ = subBuilder.buildPartial();
            }

            break;
          }
          case 40: {

            failureModeDeny_ = input.readBool();
            break;
          }
          case 48: {

            rateLimitedAsResourceExhausted_ = input.readBool();
            break;
          }
          case 58: {
            io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig.Builder subBuilder = null;
            if (rateLimitService_ != null) {
              subBuilder = rateLimitService_.toBuilder();
            }
            rateLimitService_ = input.readMessage(io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(rateLimitService_);
              rateLimitService_ = subBuilder.buildPartial();
            }

            break;
          }
          case 64: {
            int rawValue = input.readEnum();

            enableXRatelimitHeaders_ = rawValue;
            break;
          }
          case 72: {

            disableXEnvoyRatelimitedHeader_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitProto.internal_static_envoy_extensions_filters_http_ratelimit_v3_RateLimit_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitProto.internal_static_envoy_extensions_filters_http_ratelimit_v3_RateLimit_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.class, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.Builder.class);
  }

  /**
   * <pre>
   * Defines the version of the standard to use for X-RateLimit headers.
   * </pre>
   *
   * Protobuf enum {@code envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion}
   */
  public enum XRateLimitHeadersRFCVersion
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * X-RateLimit headers disabled.
     * </pre>
     *
     * <code>OFF = 0;</code>
     */
    OFF(0),
    /**
     * <pre>
     * Use `draft RFC Version 03 &lt;https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html&gt;`_.
     * </pre>
     *
     * <code>DRAFT_VERSION_03 = 1;</code>
     */
    DRAFT_VERSION_03(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * X-RateLimit headers disabled.
     * </pre>
     *
     * <code>OFF = 0;</code>
     */
    public static final int OFF_VALUE = 0;
    /**
     * <pre>
     * Use `draft RFC Version 03 &lt;https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html&gt;`_.
     * </pre>
     *
     * <code>DRAFT_VERSION_03 = 1;</code>
     */
    public static final int DRAFT_VERSION_03_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static XRateLimitHeadersRFCVersion valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static XRateLimitHeadersRFCVersion forNumber(int value) {
      switch (value) {
        case 0: return OFF;
        case 1: return DRAFT_VERSION_03;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<XRateLimitHeadersRFCVersion>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        XRateLimitHeadersRFCVersion> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<XRateLimitHeadersRFCVersion>() {
            public XRateLimitHeadersRFCVersion findValueByNumber(int number) {
              return XRateLimitHeadersRFCVersion.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.getDescriptor().getEnumTypes().get(0);
    }

    private static final XRateLimitHeadersRFCVersion[] VALUES = values();

    public static XRateLimitHeadersRFCVersion valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private XRateLimitHeadersRFCVersion(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion)
  }

  public static final int DOMAIN_FIELD_NUMBER = 1;
  private volatile java.lang.Object domain_;
  /**
   * <pre>
   * The rate limit domain to use when calling the rate limit service.
   * </pre>
   *
   * <code>string domain = 1 [(.validate.rules) = { ... }</code>
   * @return The domain.
   */
  @java.lang.Override
  public java.lang.String getDomain() {
    java.lang.Object ref = domain_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      domain_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The rate limit domain to use when calling the rate limit service.
   * </pre>
   *
   * <code>string domain = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for domain.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDomainBytes() {
    java.lang.Object ref = domain_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      domain_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STAGE_FIELD_NUMBER = 2;
  private int stage_;
  /**
   * <pre>
   * Specifies the rate limit configurations to be applied with the same
   * stage number. If not set, the default stage number is 0.
   * .. note::
   *  The filter supports a range of 0 - 10 inclusively for stage numbers.
   * </pre>
   *
   * <code>uint32 stage = 2 [(.validate.rules) = { ... }</code>
   * @return The stage.
   */
  @java.lang.Override
  public int getStage() {
    return stage_;
  }

  public static final int REQUEST_TYPE_FIELD_NUMBER = 3;
  private volatile java.lang.Object requestType_;
  /**
   * <pre>
   * The type of requests the filter should apply to. The supported
   * types are *internal*, *external* or *both*. A request is considered internal if
   * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is set to true. If
   * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is not set or false, a
   * request is considered external. The filter defaults to *both*, and it will apply to all request
   * types.
   * </pre>
   *
   * <code>string request_type = 3 [(.validate.rules) = { ... }</code>
   * @return The requestType.
   */
  @java.lang.Override
  public java.lang.String getRequestType() {
    java.lang.Object ref = requestType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      requestType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The type of requests the filter should apply to. The supported
   * types are *internal*, *external* or *both*. A request is considered internal if
   * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is set to true. If
   * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is not set or false, a
   * request is considered external. The filter defaults to *both*, and it will apply to all request
   * types.
   * </pre>
   *
   * <code>string request_type = 3 [(.validate.rules) = { ... }</code>
   * @return The bytes for requestType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRequestTypeBytes() {
    java.lang.Object ref = requestType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      requestType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TIMEOUT_FIELD_NUMBER = 4;
  private com.google.protobuf.Duration timeout_;
  /**
   * <pre>
   * The timeout in milliseconds for the rate limit service RPC. If not
   * set, this defaults to 20ms.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 4;</code>
   * @return Whether the timeout field is set.
   */
  @java.lang.Override
  public boolean hasTimeout() {
    return timeout_ != null;
  }
  /**
   * <pre>
   * The timeout in milliseconds for the rate limit service RPC. If not
   * set, this defaults to 20ms.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 4;</code>
   * @return The timeout.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getTimeout() {
    return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
  }
  /**
   * <pre>
   * The timeout in milliseconds for the rate limit service RPC. If not
   * set, this defaults to 20ms.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder() {
    return getTimeout();
  }

  public static final int FAILURE_MODE_DENY_FIELD_NUMBER = 5;
  private boolean failureModeDeny_;
  /**
   * <pre>
   * The filter's behaviour in case the rate limiting service does
   * not respond back. When it is set to true, Envoy will not allow traffic in case of
   * communication failure between rate limiting service and the proxy.
   * </pre>
   *
   * <code>bool failure_mode_deny = 5;</code>
   * @return The failureModeDeny.
   */
  @java.lang.Override
  public boolean getFailureModeDeny() {
    return failureModeDeny_;
  }

  public static final int RATE_LIMITED_AS_RESOURCE_EXHAUSTED_FIELD_NUMBER = 6;
  private boolean rateLimitedAsResourceExhausted_;
  /**
   * <pre>
   * Specifies whether a `RESOURCE_EXHAUSTED` gRPC code must be returned instead
   * of the default `UNAVAILABLE` gRPC code for a rate limited gRPC call. The
   * HTTP code will be 200 for a gRPC response.
   * </pre>
   *
   * <code>bool rate_limited_as_resource_exhausted = 6;</code>
   * @return The rateLimitedAsResourceExhausted.
   */
  @java.lang.Override
  public boolean getRateLimitedAsResourceExhausted() {
    return rateLimitedAsResourceExhausted_;
  }

  public static final int RATE_LIMIT_SERVICE_FIELD_NUMBER = 7;
  private io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig rateLimitService_;
  /**
   * <pre>
   * Configuration for an external rate limit service provider. If not
   * specified, any calls to the rate limit service will immediately return
   * success.
   * </pre>
   *
   * <code>.envoy.config.ratelimit.v3.RateLimitServiceConfig rate_limit_service = 7 [(.validate.rules) = { ... }</code>
   * @return Whether the rateLimitService field is set.
   */
  @java.lang.Override
  public boolean hasRateLimitService() {
    return rateLimitService_ != null;
  }
  /**
   * <pre>
   * Configuration for an external rate limit service provider. If not
   * specified, any calls to the rate limit service will immediately return
   * success.
   * </pre>
   *
   * <code>.envoy.config.ratelimit.v3.RateLimitServiceConfig rate_limit_service = 7 [(.validate.rules) = { ... }</code>
   * @return The rateLimitService.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig getRateLimitService() {
    return rateLimitService_ == null ? io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig.getDefaultInstance() : rateLimitService_;
  }
  /**
   * <pre>
   * Configuration for an external rate limit service provider. If not
   * specified, any calls to the rate limit service will immediately return
   * success.
   * </pre>
   *
   * <code>.envoy.config.ratelimit.v3.RateLimitServiceConfig rate_limit_service = 7 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfigOrBuilder getRateLimitServiceOrBuilder() {
    return getRateLimitService();
  }

  public static final int ENABLE_X_RATELIMIT_HEADERS_FIELD_NUMBER = 8;
  private int enableXRatelimitHeaders_;
  /**
   * <pre>
   * Defines the standard version to use for X-RateLimit headers emitted by the filter:
   * * ``X-RateLimit-Limit`` - indicates the request-quota associated to the
   *   client in the current time-window followed by the description of the
   *   quota policy. The values are returned by the rate limiting service in
   *   :ref:`current_limit&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.current_limit&gt;`
   *   field. Example: `10, 10;w=1;name="per-ip", 1000;w=3600`.
   * * ``X-RateLimit-Remaining`` - indicates the remaining requests in the
   *   current time-window. The values are returned by the rate limiting service
   *   in :ref:`limit_remaining&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.limit_remaining&gt;`
   *   field.
   * * ``X-RateLimit-Reset`` - indicates the number of seconds until reset of
   *   the current time-window. The values are returned by the rate limiting service
   *   in :ref:`duration_until_reset&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.duration_until_reset&gt;`
   *   field.
   * In case rate limiting policy specifies more then one time window, the values
   * above represent the window that is closest to reaching its limit.
   * For more information about the headers specification see selected version of
   * the `draft RFC &lt;https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html&gt;`_.
   * Disabled by default.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion enable_x_ratelimit_headers = 8 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for enableXRatelimitHeaders.
   */
  @java.lang.Override public int getEnableXRatelimitHeadersValue() {
    return enableXRatelimitHeaders_;
  }
  /**
   * <pre>
   * Defines the standard version to use for X-RateLimit headers emitted by the filter:
   * * ``X-RateLimit-Limit`` - indicates the request-quota associated to the
   *   client in the current time-window followed by the description of the
   *   quota policy. The values are returned by the rate limiting service in
   *   :ref:`current_limit&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.current_limit&gt;`
   *   field. Example: `10, 10;w=1;name="per-ip", 1000;w=3600`.
   * * ``X-RateLimit-Remaining`` - indicates the remaining requests in the
   *   current time-window. The values are returned by the rate limiting service
   *   in :ref:`limit_remaining&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.limit_remaining&gt;`
   *   field.
   * * ``X-RateLimit-Reset`` - indicates the number of seconds until reset of
   *   the current time-window. The values are returned by the rate limiting service
   *   in :ref:`duration_until_reset&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.duration_until_reset&gt;`
   *   field.
   * In case rate limiting policy specifies more then one time window, the values
   * above represent the window that is closest to reaching its limit.
   * For more information about the headers specification see selected version of
   * the `draft RFC &lt;https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html&gt;`_.
   * Disabled by default.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion enable_x_ratelimit_headers = 8 [(.validate.rules) = { ... }</code>
   * @return The enableXRatelimitHeaders.
   */
  @java.lang.Override public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion getEnableXRatelimitHeaders() {
    @SuppressWarnings("deprecation")
    io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion result = io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion.valueOf(enableXRatelimitHeaders_);
    return result == null ? io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion.UNRECOGNIZED : result;
  }

  public static final int DISABLE_X_ENVOY_RATELIMITED_HEADER_FIELD_NUMBER = 9;
  private boolean disableXEnvoyRatelimitedHeader_;
  /**
   * <pre>
   * Disables emitting the :ref:`x-envoy-ratelimited&lt;config_http_filters_router_x-envoy-ratelimited&gt;` header
   * in case of rate limiting (i.e. 429 responses).
   * Having this header not present potentially makes the request retriable.
   * </pre>
   *
   * <code>bool disable_x_envoy_ratelimited_header = 9;</code>
   * @return The disableXEnvoyRatelimitedHeader.
   */
  @java.lang.Override
  public boolean getDisableXEnvoyRatelimitedHeader() {
    return disableXEnvoyRatelimitedHeader_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getDomainBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, domain_);
    }
    if (stage_ != 0) {
      output.writeUInt32(2, stage_);
    }
    if (!getRequestTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, requestType_);
    }
    if (timeout_ != null) {
      output.writeMessage(4, getTimeout());
    }
    if (failureModeDeny_ != false) {
      output.writeBool(5, failureModeDeny_);
    }
    if (rateLimitedAsResourceExhausted_ != false) {
      output.writeBool(6, rateLimitedAsResourceExhausted_);
    }
    if (rateLimitService_ != null) {
      output.writeMessage(7, getRateLimitService());
    }
    if (enableXRatelimitHeaders_ != io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion.OFF.getNumber()) {
      output.writeEnum(8, enableXRatelimitHeaders_);
    }
    if (disableXEnvoyRatelimitedHeader_ != false) {
      output.writeBool(9, disableXEnvoyRatelimitedHeader_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getDomainBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, domain_);
    }
    if (stage_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, stage_);
    }
    if (!getRequestTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, requestType_);
    }
    if (timeout_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getTimeout());
    }
    if (failureModeDeny_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, failureModeDeny_);
    }
    if (rateLimitedAsResourceExhausted_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, rateLimitedAsResourceExhausted_);
    }
    if (rateLimitService_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getRateLimitService());
    }
    if (enableXRatelimitHeaders_ != io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion.OFF.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(8, enableXRatelimitHeaders_);
    }
    if (disableXEnvoyRatelimitedHeader_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, disableXEnvoyRatelimitedHeader_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit other = (io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit) obj;

    if (!getDomain()
        .equals(other.getDomain())) return false;
    if (getStage()
        != other.getStage()) return false;
    if (!getRequestType()
        .equals(other.getRequestType())) return false;
    if (hasTimeout() != other.hasTimeout()) return false;
    if (hasTimeout()) {
      if (!getTimeout()
          .equals(other.getTimeout())) return false;
    }
    if (getFailureModeDeny()
        != other.getFailureModeDeny()) return false;
    if (getRateLimitedAsResourceExhausted()
        != other.getRateLimitedAsResourceExhausted()) return false;
    if (hasRateLimitService() != other.hasRateLimitService()) return false;
    if (hasRateLimitService()) {
      if (!getRateLimitService()
          .equals(other.getRateLimitService())) return false;
    }
    if (enableXRatelimitHeaders_ != other.enableXRatelimitHeaders_) return false;
    if (getDisableXEnvoyRatelimitedHeader()
        != other.getDisableXEnvoyRatelimitedHeader()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DOMAIN_FIELD_NUMBER;
    hash = (53 * hash) + getDomain().hashCode();
    hash = (37 * hash) + STAGE_FIELD_NUMBER;
    hash = (53 * hash) + getStage();
    hash = (37 * hash) + REQUEST_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getRequestType().hashCode();
    if (hasTimeout()) {
      hash = (37 * hash) + TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getTimeout().hashCode();
    }
    hash = (37 * hash) + FAILURE_MODE_DENY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFailureModeDeny());
    hash = (37 * hash) + RATE_LIMITED_AS_RESOURCE_EXHAUSTED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRateLimitedAsResourceExhausted());
    if (hasRateLimitService()) {
      hash = (37 * hash) + RATE_LIMIT_SERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getRateLimitService().hashCode();
    }
    hash = (37 * hash) + ENABLE_X_RATELIMIT_HEADERS_FIELD_NUMBER;
    hash = (53 * hash) + enableXRatelimitHeaders_;
    hash = (37 * hash) + DISABLE_X_ENVOY_RATELIMITED_HEADER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDisableXEnvoyRatelimitedHeader());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * [#next-free-field: 10]
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.http.ratelimit.v3.RateLimit}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.ratelimit.v3.RateLimit)
      io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitProto.internal_static_envoy_extensions_filters_http_ratelimit_v3_RateLimit_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitProto.internal_static_envoy_extensions_filters_http_ratelimit_v3_RateLimit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.class, io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      domain_ = "";

      stage_ = 0;

      requestType_ = "";

      if (timeoutBuilder_ == null) {
        timeout_ = null;
      } else {
        timeout_ = null;
        timeoutBuilder_ = null;
      }
      failureModeDeny_ = false;

      rateLimitedAsResourceExhausted_ = false;

      if (rateLimitServiceBuilder_ == null) {
        rateLimitService_ = null;
      } else {
        rateLimitService_ = null;
        rateLimitServiceBuilder_ = null;
      }
      enableXRatelimitHeaders_ = 0;

      disableXEnvoyRatelimitedHeader_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimitProto.internal_static_envoy_extensions_filters_http_ratelimit_v3_RateLimit_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit build() {
      io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit buildPartial() {
      io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit result = new io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit(this);
      result.domain_ = domain_;
      result.stage_ = stage_;
      result.requestType_ = requestType_;
      if (timeoutBuilder_ == null) {
        result.timeout_ = timeout_;
      } else {
        result.timeout_ = timeoutBuilder_.build();
      }
      result.failureModeDeny_ = failureModeDeny_;
      result.rateLimitedAsResourceExhausted_ = rateLimitedAsResourceExhausted_;
      if (rateLimitServiceBuilder_ == null) {
        result.rateLimitService_ = rateLimitService_;
      } else {
        result.rateLimitService_ = rateLimitServiceBuilder_.build();
      }
      result.enableXRatelimitHeaders_ = enableXRatelimitHeaders_;
      result.disableXEnvoyRatelimitedHeader_ = disableXEnvoyRatelimitedHeader_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit other) {
      if (other == io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.getDefaultInstance()) return this;
      if (!other.getDomain().isEmpty()) {
        domain_ = other.domain_;
        onChanged();
      }
      if (other.getStage() != 0) {
        setStage(other.getStage());
      }
      if (!other.getRequestType().isEmpty()) {
        requestType_ = other.requestType_;
        onChanged();
      }
      if (other.hasTimeout()) {
        mergeTimeout(other.getTimeout());
      }
      if (other.getFailureModeDeny() != false) {
        setFailureModeDeny(other.getFailureModeDeny());
      }
      if (other.getRateLimitedAsResourceExhausted() != false) {
        setRateLimitedAsResourceExhausted(other.getRateLimitedAsResourceExhausted());
      }
      if (other.hasRateLimitService()) {
        mergeRateLimitService(other.getRateLimitService());
      }
      if (other.enableXRatelimitHeaders_ != 0) {
        setEnableXRatelimitHeadersValue(other.getEnableXRatelimitHeadersValue());
      }
      if (other.getDisableXEnvoyRatelimitedHeader() != false) {
        setDisableXEnvoyRatelimitedHeader(other.getDisableXEnvoyRatelimitedHeader());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object domain_ = "";
    /**
     * <pre>
     * The rate limit domain to use when calling the rate limit service.
     * </pre>
     *
     * <code>string domain = 1 [(.validate.rules) = { ... }</code>
     * @return The domain.
     */
    public java.lang.String getDomain() {
      java.lang.Object ref = domain_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        domain_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The rate limit domain to use when calling the rate limit service.
     * </pre>
     *
     * <code>string domain = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for domain.
     */
    public com.google.protobuf.ByteString
        getDomainBytes() {
      java.lang.Object ref = domain_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        domain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The rate limit domain to use when calling the rate limit service.
     * </pre>
     *
     * <code>string domain = 1 [(.validate.rules) = { ... }</code>
     * @param value The domain to set.
     * @return This builder for chaining.
     */
    public Builder setDomain(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      domain_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The rate limit domain to use when calling the rate limit service.
     * </pre>
     *
     * <code>string domain = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearDomain() {
      
      domain_ = getDefaultInstance().getDomain();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The rate limit domain to use when calling the rate limit service.
     * </pre>
     *
     * <code>string domain = 1 [(.validate.rules) = { ... }</code>
     * @param value The bytes for domain to set.
     * @return This builder for chaining.
     */
    public Builder setDomainBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      domain_ = value;
      onChanged();
      return this;
    }

    private int stage_ ;
    /**
     * <pre>
     * Specifies the rate limit configurations to be applied with the same
     * stage number. If not set, the default stage number is 0.
     * .. note::
     *  The filter supports a range of 0 - 10 inclusively for stage numbers.
     * </pre>
     *
     * <code>uint32 stage = 2 [(.validate.rules) = { ... }</code>
     * @return The stage.
     */
    @java.lang.Override
    public int getStage() {
      return stage_;
    }
    /**
     * <pre>
     * Specifies the rate limit configurations to be applied with the same
     * stage number. If not set, the default stage number is 0.
     * .. note::
     *  The filter supports a range of 0 - 10 inclusively for stage numbers.
     * </pre>
     *
     * <code>uint32 stage = 2 [(.validate.rules) = { ... }</code>
     * @param value The stage to set.
     * @return This builder for chaining.
     */
    public Builder setStage(int value) {
      
      stage_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the rate limit configurations to be applied with the same
     * stage number. If not set, the default stage number is 0.
     * .. note::
     *  The filter supports a range of 0 - 10 inclusively for stage numbers.
     * </pre>
     *
     * <code>uint32 stage = 2 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearStage() {
      
      stage_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object requestType_ = "";
    /**
     * <pre>
     * The type of requests the filter should apply to. The supported
     * types are *internal*, *external* or *both*. A request is considered internal if
     * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is set to true. If
     * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is not set or false, a
     * request is considered external. The filter defaults to *both*, and it will apply to all request
     * types.
     * </pre>
     *
     * <code>string request_type = 3 [(.validate.rules) = { ... }</code>
     * @return The requestType.
     */
    public java.lang.String getRequestType() {
      java.lang.Object ref = requestType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        requestType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The type of requests the filter should apply to. The supported
     * types are *internal*, *external* or *both*. A request is considered internal if
     * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is set to true. If
     * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is not set or false, a
     * request is considered external. The filter defaults to *both*, and it will apply to all request
     * types.
     * </pre>
     *
     * <code>string request_type = 3 [(.validate.rules) = { ... }</code>
     * @return The bytes for requestType.
     */
    public com.google.protobuf.ByteString
        getRequestTypeBytes() {
      java.lang.Object ref = requestType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        requestType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The type of requests the filter should apply to. The supported
     * types are *internal*, *external* or *both*. A request is considered internal if
     * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is set to true. If
     * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is not set or false, a
     * request is considered external. The filter defaults to *both*, and it will apply to all request
     * types.
     * </pre>
     *
     * <code>string request_type = 3 [(.validate.rules) = { ... }</code>
     * @param value The requestType to set.
     * @return This builder for chaining.
     */
    public Builder setRequestType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      requestType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of requests the filter should apply to. The supported
     * types are *internal*, *external* or *both*. A request is considered internal if
     * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is set to true. If
     * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is not set or false, a
     * request is considered external. The filter defaults to *both*, and it will apply to all request
     * types.
     * </pre>
     *
     * <code>string request_type = 3 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearRequestType() {
      
      requestType_ = getDefaultInstance().getRequestType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of requests the filter should apply to. The supported
     * types are *internal*, *external* or *both*. A request is considered internal if
     * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is set to true. If
     * :ref:`x-envoy-internal&lt;config_http_conn_man_headers_x-envoy-internal&gt;` is not set or false, a
     * request is considered external. The filter defaults to *both*, and it will apply to all request
     * types.
     * </pre>
     *
     * <code>string request_type = 3 [(.validate.rules) = { ... }</code>
     * @param value The bytes for requestType to set.
     * @return This builder for chaining.
     */
    public Builder setRequestTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      requestType_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Duration timeout_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> timeoutBuilder_;
    /**
     * <pre>
     * The timeout in milliseconds for the rate limit service RPC. If not
     * set, this defaults to 20ms.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     * @return Whether the timeout field is set.
     */
    public boolean hasTimeout() {
      return timeoutBuilder_ != null || timeout_ != null;
    }
    /**
     * <pre>
     * The timeout in milliseconds for the rate limit service RPC. If not
     * set, this defaults to 20ms.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     * @return The timeout.
     */
    public com.google.protobuf.Duration getTimeout() {
      if (timeoutBuilder_ == null) {
        return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
      } else {
        return timeoutBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The timeout in milliseconds for the rate limit service RPC. If not
     * set, this defaults to 20ms.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     */
    public Builder setTimeout(com.google.protobuf.Duration value) {
      if (timeoutBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timeout_ = value;
        onChanged();
      } else {
        timeoutBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timeout in milliseconds for the rate limit service RPC. If not
     * set, this defaults to 20ms.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     */
    public Builder setTimeout(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (timeoutBuilder_ == null) {
        timeout_ = builderForValue.build();
        onChanged();
      } else {
        timeoutBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The timeout in milliseconds for the rate limit service RPC. If not
     * set, this defaults to 20ms.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     */
    public Builder mergeTimeout(com.google.protobuf.Duration value) {
      if (timeoutBuilder_ == null) {
        if (timeout_ != null) {
          timeout_ =
            com.google.protobuf.Duration.newBuilder(timeout_).mergeFrom(value).buildPartial();
        } else {
          timeout_ = value;
        }
        onChanged();
      } else {
        timeoutBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The timeout in milliseconds for the rate limit service RPC. If not
     * set, this defaults to 20ms.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     */
    public Builder clearTimeout() {
      if (timeoutBuilder_ == null) {
        timeout_ = null;
        onChanged();
      } else {
        timeout_ = null;
        timeoutBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The timeout in milliseconds for the rate limit service RPC. If not
     * set, this defaults to 20ms.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     */
    public com.google.protobuf.Duration.Builder getTimeoutBuilder() {
      
      onChanged();
      return getTimeoutFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The timeout in milliseconds for the rate limit service RPC. If not
     * set, this defaults to 20ms.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     */
    public com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder() {
      if (timeoutBuilder_ != null) {
        return timeoutBuilder_.getMessageOrBuilder();
      } else {
        return timeout_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : timeout_;
      }
    }
    /**
     * <pre>
     * The timeout in milliseconds for the rate limit service RPC. If not
     * set, this defaults to 20ms.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getTimeoutFieldBuilder() {
      if (timeoutBuilder_ == null) {
        timeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getTimeout(),
                getParentForChildren(),
                isClean());
        timeout_ = null;
      }
      return timeoutBuilder_;
    }

    private boolean failureModeDeny_ ;
    /**
     * <pre>
     * The filter's behaviour in case the rate limiting service does
     * not respond back. When it is set to true, Envoy will not allow traffic in case of
     * communication failure between rate limiting service and the proxy.
     * </pre>
     *
     * <code>bool failure_mode_deny = 5;</code>
     * @return The failureModeDeny.
     */
    @java.lang.Override
    public boolean getFailureModeDeny() {
      return failureModeDeny_;
    }
    /**
     * <pre>
     * The filter's behaviour in case the rate limiting service does
     * not respond back. When it is set to true, Envoy will not allow traffic in case of
     * communication failure between rate limiting service and the proxy.
     * </pre>
     *
     * <code>bool failure_mode_deny = 5;</code>
     * @param value The failureModeDeny to set.
     * @return This builder for chaining.
     */
    public Builder setFailureModeDeny(boolean value) {
      
      failureModeDeny_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The filter's behaviour in case the rate limiting service does
     * not respond back. When it is set to true, Envoy will not allow traffic in case of
     * communication failure between rate limiting service and the proxy.
     * </pre>
     *
     * <code>bool failure_mode_deny = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearFailureModeDeny() {
      
      failureModeDeny_ = false;
      onChanged();
      return this;
    }

    private boolean rateLimitedAsResourceExhausted_ ;
    /**
     * <pre>
     * Specifies whether a `RESOURCE_EXHAUSTED` gRPC code must be returned instead
     * of the default `UNAVAILABLE` gRPC code for a rate limited gRPC call. The
     * HTTP code will be 200 for a gRPC response.
     * </pre>
     *
     * <code>bool rate_limited_as_resource_exhausted = 6;</code>
     * @return The rateLimitedAsResourceExhausted.
     */
    @java.lang.Override
    public boolean getRateLimitedAsResourceExhausted() {
      return rateLimitedAsResourceExhausted_;
    }
    /**
     * <pre>
     * Specifies whether a `RESOURCE_EXHAUSTED` gRPC code must be returned instead
     * of the default `UNAVAILABLE` gRPC code for a rate limited gRPC call. The
     * HTTP code will be 200 for a gRPC response.
     * </pre>
     *
     * <code>bool rate_limited_as_resource_exhausted = 6;</code>
     * @param value The rateLimitedAsResourceExhausted to set.
     * @return This builder for chaining.
     */
    public Builder setRateLimitedAsResourceExhausted(boolean value) {
      
      rateLimitedAsResourceExhausted_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies whether a `RESOURCE_EXHAUSTED` gRPC code must be returned instead
     * of the default `UNAVAILABLE` gRPC code for a rate limited gRPC call. The
     * HTTP code will be 200 for a gRPC response.
     * </pre>
     *
     * <code>bool rate_limited_as_resource_exhausted = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearRateLimitedAsResourceExhausted() {
      
      rateLimitedAsResourceExhausted_ = false;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig rateLimitService_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig, io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig.Builder, io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfigOrBuilder> rateLimitServiceBuilder_;
    /**
     * <pre>
     * Configuration for an external rate limit service provider. If not
     * specified, any calls to the rate limit service will immediately return
     * success.
     * </pre>
     *
     * <code>.envoy.config.ratelimit.v3.RateLimitServiceConfig rate_limit_service = 7 [(.validate.rules) = { ... }</code>
     * @return Whether the rateLimitService field is set.
     */
    public boolean hasRateLimitService() {
      return rateLimitServiceBuilder_ != null || rateLimitService_ != null;
    }
    /**
     * <pre>
     * Configuration for an external rate limit service provider. If not
     * specified, any calls to the rate limit service will immediately return
     * success.
     * </pre>
     *
     * <code>.envoy.config.ratelimit.v3.RateLimitServiceConfig rate_limit_service = 7 [(.validate.rules) = { ... }</code>
     * @return The rateLimitService.
     */
    public io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig getRateLimitService() {
      if (rateLimitServiceBuilder_ == null) {
        return rateLimitService_ == null ? io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig.getDefaultInstance() : rateLimitService_;
      } else {
        return rateLimitServiceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Configuration for an external rate limit service provider. If not
     * specified, any calls to the rate limit service will immediately return
     * success.
     * </pre>
     *
     * <code>.envoy.config.ratelimit.v3.RateLimitServiceConfig rate_limit_service = 7 [(.validate.rules) = { ... }</code>
     */
    public Builder setRateLimitService(io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig value) {
      if (rateLimitServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rateLimitService_ = value;
        onChanged();
      } else {
        rateLimitServiceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for an external rate limit service provider. If not
     * specified, any calls to the rate limit service will immediately return
     * success.
     * </pre>
     *
     * <code>.envoy.config.ratelimit.v3.RateLimitServiceConfig rate_limit_service = 7 [(.validate.rules) = { ... }</code>
     */
    public Builder setRateLimitService(
        io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig.Builder builderForValue) {
      if (rateLimitServiceBuilder_ == null) {
        rateLimitService_ = builderForValue.build();
        onChanged();
      } else {
        rateLimitServiceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for an external rate limit service provider. If not
     * specified, any calls to the rate limit service will immediately return
     * success.
     * </pre>
     *
     * <code>.envoy.config.ratelimit.v3.RateLimitServiceConfig rate_limit_service = 7 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeRateLimitService(io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig value) {
      if (rateLimitServiceBuilder_ == null) {
        if (rateLimitService_ != null) {
          rateLimitService_ =
            io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig.newBuilder(rateLimitService_).mergeFrom(value).buildPartial();
        } else {
          rateLimitService_ = value;
        }
        onChanged();
      } else {
        rateLimitServiceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for an external rate limit service provider. If not
     * specified, any calls to the rate limit service will immediately return
     * success.
     * </pre>
     *
     * <code>.envoy.config.ratelimit.v3.RateLimitServiceConfig rate_limit_service = 7 [(.validate.rules) = { ... }</code>
     */
    public Builder clearRateLimitService() {
      if (rateLimitServiceBuilder_ == null) {
        rateLimitService_ = null;
        onChanged();
      } else {
        rateLimitService_ = null;
        rateLimitServiceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Configuration for an external rate limit service provider. If not
     * specified, any calls to the rate limit service will immediately return
     * success.
     * </pre>
     *
     * <code>.envoy.config.ratelimit.v3.RateLimitServiceConfig rate_limit_service = 7 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig.Builder getRateLimitServiceBuilder() {
      
      onChanged();
      return getRateLimitServiceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Configuration for an external rate limit service provider. If not
     * specified, any calls to the rate limit service will immediately return
     * success.
     * </pre>
     *
     * <code>.envoy.config.ratelimit.v3.RateLimitServiceConfig rate_limit_service = 7 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfigOrBuilder getRateLimitServiceOrBuilder() {
      if (rateLimitServiceBuilder_ != null) {
        return rateLimitServiceBuilder_.getMessageOrBuilder();
      } else {
        return rateLimitService_ == null ?
            io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig.getDefaultInstance() : rateLimitService_;
      }
    }
    /**
     * <pre>
     * Configuration for an external rate limit service provider. If not
     * specified, any calls to the rate limit service will immediately return
     * success.
     * </pre>
     *
     * <code>.envoy.config.ratelimit.v3.RateLimitServiceConfig rate_limit_service = 7 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig, io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig.Builder, io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfigOrBuilder> 
        getRateLimitServiceFieldBuilder() {
      if (rateLimitServiceBuilder_ == null) {
        rateLimitServiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig, io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfig.Builder, io.envoyproxy.envoy.config.ratelimit.v3.RateLimitServiceConfigOrBuilder>(
                getRateLimitService(),
                getParentForChildren(),
                isClean());
        rateLimitService_ = null;
      }
      return rateLimitServiceBuilder_;
    }

    private int enableXRatelimitHeaders_ = 0;
    /**
     * <pre>
     * Defines the standard version to use for X-RateLimit headers emitted by the filter:
     * * ``X-RateLimit-Limit`` - indicates the request-quota associated to the
     *   client in the current time-window followed by the description of the
     *   quota policy. The values are returned by the rate limiting service in
     *   :ref:`current_limit&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.current_limit&gt;`
     *   field. Example: `10, 10;w=1;name="per-ip", 1000;w=3600`.
     * * ``X-RateLimit-Remaining`` - indicates the remaining requests in the
     *   current time-window. The values are returned by the rate limiting service
     *   in :ref:`limit_remaining&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.limit_remaining&gt;`
     *   field.
     * * ``X-RateLimit-Reset`` - indicates the number of seconds until reset of
     *   the current time-window. The values are returned by the rate limiting service
     *   in :ref:`duration_until_reset&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.duration_until_reset&gt;`
     *   field.
     * In case rate limiting policy specifies more then one time window, the values
     * above represent the window that is closest to reaching its limit.
     * For more information about the headers specification see selected version of
     * the `draft RFC &lt;https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html&gt;`_.
     * Disabled by default.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion enable_x_ratelimit_headers = 8 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for enableXRatelimitHeaders.
     */
    @java.lang.Override public int getEnableXRatelimitHeadersValue() {
      return enableXRatelimitHeaders_;
    }
    /**
     * <pre>
     * Defines the standard version to use for X-RateLimit headers emitted by the filter:
     * * ``X-RateLimit-Limit`` - indicates the request-quota associated to the
     *   client in the current time-window followed by the description of the
     *   quota policy. The values are returned by the rate limiting service in
     *   :ref:`current_limit&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.current_limit&gt;`
     *   field. Example: `10, 10;w=1;name="per-ip", 1000;w=3600`.
     * * ``X-RateLimit-Remaining`` - indicates the remaining requests in the
     *   current time-window. The values are returned by the rate limiting service
     *   in :ref:`limit_remaining&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.limit_remaining&gt;`
     *   field.
     * * ``X-RateLimit-Reset`` - indicates the number of seconds until reset of
     *   the current time-window. The values are returned by the rate limiting service
     *   in :ref:`duration_until_reset&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.duration_until_reset&gt;`
     *   field.
     * In case rate limiting policy specifies more then one time window, the values
     * above represent the window that is closest to reaching its limit.
     * For more information about the headers specification see selected version of
     * the `draft RFC &lt;https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html&gt;`_.
     * Disabled by default.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion enable_x_ratelimit_headers = 8 [(.validate.rules) = { ... }</code>
     * @param value The enum numeric value on the wire for enableXRatelimitHeaders to set.
     * @return This builder for chaining.
     */
    public Builder setEnableXRatelimitHeadersValue(int value) {
      
      enableXRatelimitHeaders_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines the standard version to use for X-RateLimit headers emitted by the filter:
     * * ``X-RateLimit-Limit`` - indicates the request-quota associated to the
     *   client in the current time-window followed by the description of the
     *   quota policy. The values are returned by the rate limiting service in
     *   :ref:`current_limit&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.current_limit&gt;`
     *   field. Example: `10, 10;w=1;name="per-ip", 1000;w=3600`.
     * * ``X-RateLimit-Remaining`` - indicates the remaining requests in the
     *   current time-window. The values are returned by the rate limiting service
     *   in :ref:`limit_remaining&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.limit_remaining&gt;`
     *   field.
     * * ``X-RateLimit-Reset`` - indicates the number of seconds until reset of
     *   the current time-window. The values are returned by the rate limiting service
     *   in :ref:`duration_until_reset&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.duration_until_reset&gt;`
     *   field.
     * In case rate limiting policy specifies more then one time window, the values
     * above represent the window that is closest to reaching its limit.
     * For more information about the headers specification see selected version of
     * the `draft RFC &lt;https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html&gt;`_.
     * Disabled by default.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion enable_x_ratelimit_headers = 8 [(.validate.rules) = { ... }</code>
     * @return The enableXRatelimitHeaders.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion getEnableXRatelimitHeaders() {
      @SuppressWarnings("deprecation")
      io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion result = io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion.valueOf(enableXRatelimitHeaders_);
      return result == null ? io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Defines the standard version to use for X-RateLimit headers emitted by the filter:
     * * ``X-RateLimit-Limit`` - indicates the request-quota associated to the
     *   client in the current time-window followed by the description of the
     *   quota policy. The values are returned by the rate limiting service in
     *   :ref:`current_limit&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.current_limit&gt;`
     *   field. Example: `10, 10;w=1;name="per-ip", 1000;w=3600`.
     * * ``X-RateLimit-Remaining`` - indicates the remaining requests in the
     *   current time-window. The values are returned by the rate limiting service
     *   in :ref:`limit_remaining&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.limit_remaining&gt;`
     *   field.
     * * ``X-RateLimit-Reset`` - indicates the number of seconds until reset of
     *   the current time-window. The values are returned by the rate limiting service
     *   in :ref:`duration_until_reset&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.duration_until_reset&gt;`
     *   field.
     * In case rate limiting policy specifies more then one time window, the values
     * above represent the window that is closest to reaching its limit.
     * For more information about the headers specification see selected version of
     * the `draft RFC &lt;https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html&gt;`_.
     * Disabled by default.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion enable_x_ratelimit_headers = 8 [(.validate.rules) = { ... }</code>
     * @param value The enableXRatelimitHeaders to set.
     * @return This builder for chaining.
     */
    public Builder setEnableXRatelimitHeaders(io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      enableXRatelimitHeaders_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Defines the standard version to use for X-RateLimit headers emitted by the filter:
     * * ``X-RateLimit-Limit`` - indicates the request-quota associated to the
     *   client in the current time-window followed by the description of the
     *   quota policy. The values are returned by the rate limiting service in
     *   :ref:`current_limit&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.current_limit&gt;`
     *   field. Example: `10, 10;w=1;name="per-ip", 1000;w=3600`.
     * * ``X-RateLimit-Remaining`` - indicates the remaining requests in the
     *   current time-window. The values are returned by the rate limiting service
     *   in :ref:`limit_remaining&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.limit_remaining&gt;`
     *   field.
     * * ``X-RateLimit-Reset`` - indicates the number of seconds until reset of
     *   the current time-window. The values are returned by the rate limiting service
     *   in :ref:`duration_until_reset&lt;envoy_v3_api_field_service.ratelimit.v3.RateLimitResponse.DescriptorStatus.duration_until_reset&gt;`
     *   field.
     * In case rate limiting policy specifies more then one time window, the values
     * above represent the window that is closest to reaching its limit.
     * For more information about the headers specification see selected version of
     * the `draft RFC &lt;https://tools.ietf.org/id/draft-polli-ratelimit-headers-03.html&gt;`_.
     * Disabled by default.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ratelimit.v3.RateLimit.XRateLimitHeadersRFCVersion enable_x_ratelimit_headers = 8 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableXRatelimitHeaders() {
      
      enableXRatelimitHeaders_ = 0;
      onChanged();
      return this;
    }

    private boolean disableXEnvoyRatelimitedHeader_ ;
    /**
     * <pre>
     * Disables emitting the :ref:`x-envoy-ratelimited&lt;config_http_filters_router_x-envoy-ratelimited&gt;` header
     * in case of rate limiting (i.e. 429 responses).
     * Having this header not present potentially makes the request retriable.
     * </pre>
     *
     * <code>bool disable_x_envoy_ratelimited_header = 9;</code>
     * @return The disableXEnvoyRatelimitedHeader.
     */
    @java.lang.Override
    public boolean getDisableXEnvoyRatelimitedHeader() {
      return disableXEnvoyRatelimitedHeader_;
    }
    /**
     * <pre>
     * Disables emitting the :ref:`x-envoy-ratelimited&lt;config_http_filters_router_x-envoy-ratelimited&gt;` header
     * in case of rate limiting (i.e. 429 responses).
     * Having this header not present potentially makes the request retriable.
     * </pre>
     *
     * <code>bool disable_x_envoy_ratelimited_header = 9;</code>
     * @param value The disableXEnvoyRatelimitedHeader to set.
     * @return This builder for chaining.
     */
    public Builder setDisableXEnvoyRatelimitedHeader(boolean value) {
      
      disableXEnvoyRatelimitedHeader_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Disables emitting the :ref:`x-envoy-ratelimited&lt;config_http_filters_router_x-envoy-ratelimited&gt;` header
     * in case of rate limiting (i.e. 429 responses).
     * Having this header not present potentially makes the request retriable.
     * </pre>
     *
     * <code>bool disable_x_envoy_ratelimited_header = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearDisableXEnvoyRatelimitedHeader() {
      
      disableXEnvoyRatelimitedHeader_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.ratelimit.v3.RateLimit)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.ratelimit.v3.RateLimit)
  private static final io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit();
  }

  public static io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RateLimit>
      PARSER = new com.google.protobuf.AbstractParser<RateLimit>() {
    @java.lang.Override
    public RateLimit parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RateLimit(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RateLimit> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RateLimit> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.ratelimit.v3.RateLimit getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

