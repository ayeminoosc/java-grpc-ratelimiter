// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/network/zookeeper_proxy/v3/zookeeper_proxy.proto

package io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3;

/**
 * Protobuf type {@code envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy}
 */
public final class ZooKeeperProxy extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy)
    ZooKeeperProxyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ZooKeeperProxy.newBuilder() to construct.
  private ZooKeeperProxy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ZooKeeperProxy() {
    statPrefix_ = "";
    accessLog_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ZooKeeperProxy();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ZooKeeperProxy(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            statPrefix_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            accessLog_ = s;
            break;
          }
          case 26: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (maxPacketBytes_ != null) {
              subBuilder = maxPacketBytes_.toBuilder();
            }
            maxPacketBytes_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maxPacketBytes_);
              maxPacketBytes_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZookeeperProxyProto.internal_static_envoy_extensions_filters_network_zookeeper_proxy_v3_ZooKeeperProxy_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZookeeperProxyProto.internal_static_envoy_extensions_filters_network_zookeeper_proxy_v3_ZooKeeperProxy_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy.class, io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy.Builder.class);
  }

  public static final int STAT_PREFIX_FIELD_NUMBER = 1;
  private volatile java.lang.Object statPrefix_;
  /**
   * <pre>
   * The human readable prefix to use when emitting :ref:`statistics
   * &lt;config_network_filters_zookeeper_proxy_stats&gt;`.
   * </pre>
   *
   * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
   * @return The statPrefix.
   */
  @java.lang.Override
  public java.lang.String getStatPrefix() {
    java.lang.Object ref = statPrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      statPrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The human readable prefix to use when emitting :ref:`statistics
   * &lt;config_network_filters_zookeeper_proxy_stats&gt;`.
   * </pre>
   *
   * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for statPrefix.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStatPrefixBytes() {
    java.lang.Object ref = statPrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      statPrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ACCESS_LOG_FIELD_NUMBER = 2;
  private volatile java.lang.Object accessLog_;
  /**
   * <pre>
   * [#not-implemented-hide:] The optional path to use for writing ZooKeeper access logs.
   * If the access log field is empty, access logs will not be written.
   * </pre>
   *
   * <code>string access_log = 2;</code>
   * @return The accessLog.
   */
  @java.lang.Override
  public java.lang.String getAccessLog() {
    java.lang.Object ref = accessLog_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      accessLog_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * [#not-implemented-hide:] The optional path to use for writing ZooKeeper access logs.
   * If the access log field is empty, access logs will not be written.
   * </pre>
   *
   * <code>string access_log = 2;</code>
   * @return The bytes for accessLog.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getAccessLogBytes() {
    java.lang.Object ref = accessLog_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      accessLog_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAX_PACKET_BYTES_FIELD_NUMBER = 3;
  private com.google.protobuf.UInt32Value maxPacketBytes_;
  /**
   * <pre>
   * Messages — requests, responses and events — that are bigger than this value will
   * be ignored. If it is not set, the default value is 1Mb.
   * The value here should match the jute.maxbuffer property in your cluster configuration:
   * https://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#Unsafe+Options
   * if that is set. If it isn't, ZooKeeper's default is also 1Mb.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_packet_bytes = 3;</code>
   * @return Whether the maxPacketBytes field is set.
   */
  @java.lang.Override
  public boolean hasMaxPacketBytes() {
    return maxPacketBytes_ != null;
  }
  /**
   * <pre>
   * Messages — requests, responses and events — that are bigger than this value will
   * be ignored. If it is not set, the default value is 1Mb.
   * The value here should match the jute.maxbuffer property in your cluster configuration:
   * https://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#Unsafe+Options
   * if that is set. If it isn't, ZooKeeper's default is also 1Mb.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_packet_bytes = 3;</code>
   * @return The maxPacketBytes.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getMaxPacketBytes() {
    return maxPacketBytes_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxPacketBytes_;
  }
  /**
   * <pre>
   * Messages — requests, responses and events — that are bigger than this value will
   * be ignored. If it is not set, the default value is 1Mb.
   * The value here should match the jute.maxbuffer property in your cluster configuration:
   * https://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#Unsafe+Options
   * if that is set. If it isn't, ZooKeeper's default is also 1Mb.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_packet_bytes = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getMaxPacketBytesOrBuilder() {
    return getMaxPacketBytes();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getStatPrefixBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, statPrefix_);
    }
    if (!getAccessLogBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, accessLog_);
    }
    if (maxPacketBytes_ != null) {
      output.writeMessage(3, getMaxPacketBytes());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getStatPrefixBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, statPrefix_);
    }
    if (!getAccessLogBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, accessLog_);
    }
    if (maxPacketBytes_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getMaxPacketBytes());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy other = (io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy) obj;

    if (!getStatPrefix()
        .equals(other.getStatPrefix())) return false;
    if (!getAccessLog()
        .equals(other.getAccessLog())) return false;
    if (hasMaxPacketBytes() != other.hasMaxPacketBytes()) return false;
    if (hasMaxPacketBytes()) {
      if (!getMaxPacketBytes()
          .equals(other.getMaxPacketBytes())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + STAT_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getStatPrefix().hashCode();
    hash = (37 * hash) + ACCESS_LOG_FIELD_NUMBER;
    hash = (53 * hash) + getAccessLog().hashCode();
    if (hasMaxPacketBytes()) {
      hash = (37 * hash) + MAX_PACKET_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getMaxPacketBytes().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy)
      io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZookeeperProxyProto.internal_static_envoy_extensions_filters_network_zookeeper_proxy_v3_ZooKeeperProxy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZookeeperProxyProto.internal_static_envoy_extensions_filters_network_zookeeper_proxy_v3_ZooKeeperProxy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy.class, io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      statPrefix_ = "";

      accessLog_ = "";

      if (maxPacketBytesBuilder_ == null) {
        maxPacketBytes_ = null;
      } else {
        maxPacketBytes_ = null;
        maxPacketBytesBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZookeeperProxyProto.internal_static_envoy_extensions_filters_network_zookeeper_proxy_v3_ZooKeeperProxy_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy build() {
      io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy buildPartial() {
      io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy result = new io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy(this);
      result.statPrefix_ = statPrefix_;
      result.accessLog_ = accessLog_;
      if (maxPacketBytesBuilder_ == null) {
        result.maxPacketBytes_ = maxPacketBytes_;
      } else {
        result.maxPacketBytes_ = maxPacketBytesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy other) {
      if (other == io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy.getDefaultInstance()) return this;
      if (!other.getStatPrefix().isEmpty()) {
        statPrefix_ = other.statPrefix_;
        onChanged();
      }
      if (!other.getAccessLog().isEmpty()) {
        accessLog_ = other.accessLog_;
        onChanged();
      }
      if (other.hasMaxPacketBytes()) {
        mergeMaxPacketBytes(other.getMaxPacketBytes());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object statPrefix_ = "";
    /**
     * <pre>
     * The human readable prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_zookeeper_proxy_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
     * @return The statPrefix.
     */
    public java.lang.String getStatPrefix() {
      java.lang.Object ref = statPrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        statPrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The human readable prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_zookeeper_proxy_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for statPrefix.
     */
    public com.google.protobuf.ByteString
        getStatPrefixBytes() {
      java.lang.Object ref = statPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        statPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The human readable prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_zookeeper_proxy_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
     * @param value The statPrefix to set.
     * @return This builder for chaining.
     */
    public Builder setStatPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      statPrefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The human readable prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_zookeeper_proxy_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearStatPrefix() {
      
      statPrefix_ = getDefaultInstance().getStatPrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The human readable prefix to use when emitting :ref:`statistics
     * &lt;config_network_filters_zookeeper_proxy_stats&gt;`.
     * </pre>
     *
     * <code>string stat_prefix = 1 [(.validate.rules) = { ... }</code>
     * @param value The bytes for statPrefix to set.
     * @return This builder for chaining.
     */
    public Builder setStatPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      statPrefix_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object accessLog_ = "";
    /**
     * <pre>
     * [#not-implemented-hide:] The optional path to use for writing ZooKeeper access logs.
     * If the access log field is empty, access logs will not be written.
     * </pre>
     *
     * <code>string access_log = 2;</code>
     * @return The accessLog.
     */
    public java.lang.String getAccessLog() {
      java.lang.Object ref = accessLog_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        accessLog_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:] The optional path to use for writing ZooKeeper access logs.
     * If the access log field is empty, access logs will not be written.
     * </pre>
     *
     * <code>string access_log = 2;</code>
     * @return The bytes for accessLog.
     */
    public com.google.protobuf.ByteString
        getAccessLogBytes() {
      java.lang.Object ref = accessLog_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accessLog_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:] The optional path to use for writing ZooKeeper access logs.
     * If the access log field is empty, access logs will not be written.
     * </pre>
     *
     * <code>string access_log = 2;</code>
     * @param value The accessLog to set.
     * @return This builder for chaining.
     */
    public Builder setAccessLog(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      accessLog_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:] The optional path to use for writing ZooKeeper access logs.
     * If the access log field is empty, access logs will not be written.
     * </pre>
     *
     * <code>string access_log = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAccessLog() {
      
      accessLog_ = getDefaultInstance().getAccessLog();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:] The optional path to use for writing ZooKeeper access logs.
     * If the access log field is empty, access logs will not be written.
     * </pre>
     *
     * <code>string access_log = 2;</code>
     * @param value The bytes for accessLog to set.
     * @return This builder for chaining.
     */
    public Builder setAccessLogBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      accessLog_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.UInt32Value maxPacketBytes_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> maxPacketBytesBuilder_;
    /**
     * <pre>
     * Messages — requests, responses and events — that are bigger than this value will
     * be ignored. If it is not set, the default value is 1Mb.
     * The value here should match the jute.maxbuffer property in your cluster configuration:
     * https://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#Unsafe+Options
     * if that is set. If it isn't, ZooKeeper's default is also 1Mb.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_packet_bytes = 3;</code>
     * @return Whether the maxPacketBytes field is set.
     */
    public boolean hasMaxPacketBytes() {
      return maxPacketBytesBuilder_ != null || maxPacketBytes_ != null;
    }
    /**
     * <pre>
     * Messages — requests, responses and events — that are bigger than this value will
     * be ignored. If it is not set, the default value is 1Mb.
     * The value here should match the jute.maxbuffer property in your cluster configuration:
     * https://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#Unsafe+Options
     * if that is set. If it isn't, ZooKeeper's default is also 1Mb.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_packet_bytes = 3;</code>
     * @return The maxPacketBytes.
     */
    public com.google.protobuf.UInt32Value getMaxPacketBytes() {
      if (maxPacketBytesBuilder_ == null) {
        return maxPacketBytes_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxPacketBytes_;
      } else {
        return maxPacketBytesBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Messages — requests, responses and events — that are bigger than this value will
     * be ignored. If it is not set, the default value is 1Mb.
     * The value here should match the jute.maxbuffer property in your cluster configuration:
     * https://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#Unsafe+Options
     * if that is set. If it isn't, ZooKeeper's default is also 1Mb.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_packet_bytes = 3;</code>
     */
    public Builder setMaxPacketBytes(com.google.protobuf.UInt32Value value) {
      if (maxPacketBytesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxPacketBytes_ = value;
        onChanged();
      } else {
        maxPacketBytesBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Messages — requests, responses and events — that are bigger than this value will
     * be ignored. If it is not set, the default value is 1Mb.
     * The value here should match the jute.maxbuffer property in your cluster configuration:
     * https://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#Unsafe+Options
     * if that is set. If it isn't, ZooKeeper's default is also 1Mb.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_packet_bytes = 3;</code>
     */
    public Builder setMaxPacketBytes(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (maxPacketBytesBuilder_ == null) {
        maxPacketBytes_ = builderForValue.build();
        onChanged();
      } else {
        maxPacketBytesBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Messages — requests, responses and events — that are bigger than this value will
     * be ignored. If it is not set, the default value is 1Mb.
     * The value here should match the jute.maxbuffer property in your cluster configuration:
     * https://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#Unsafe+Options
     * if that is set. If it isn't, ZooKeeper's default is also 1Mb.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_packet_bytes = 3;</code>
     */
    public Builder mergeMaxPacketBytes(com.google.protobuf.UInt32Value value) {
      if (maxPacketBytesBuilder_ == null) {
        if (maxPacketBytes_ != null) {
          maxPacketBytes_ =
            com.google.protobuf.UInt32Value.newBuilder(maxPacketBytes_).mergeFrom(value).buildPartial();
        } else {
          maxPacketBytes_ = value;
        }
        onChanged();
      } else {
        maxPacketBytesBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Messages — requests, responses and events — that are bigger than this value will
     * be ignored. If it is not set, the default value is 1Mb.
     * The value here should match the jute.maxbuffer property in your cluster configuration:
     * https://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#Unsafe+Options
     * if that is set. If it isn't, ZooKeeper's default is also 1Mb.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_packet_bytes = 3;</code>
     */
    public Builder clearMaxPacketBytes() {
      if (maxPacketBytesBuilder_ == null) {
        maxPacketBytes_ = null;
        onChanged();
      } else {
        maxPacketBytes_ = null;
        maxPacketBytesBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Messages — requests, responses and events — that are bigger than this value will
     * be ignored. If it is not set, the default value is 1Mb.
     * The value here should match the jute.maxbuffer property in your cluster configuration:
     * https://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#Unsafe+Options
     * if that is set. If it isn't, ZooKeeper's default is also 1Mb.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_packet_bytes = 3;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getMaxPacketBytesBuilder() {
      
      onChanged();
      return getMaxPacketBytesFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Messages — requests, responses and events — that are bigger than this value will
     * be ignored. If it is not set, the default value is 1Mb.
     * The value here should match the jute.maxbuffer property in your cluster configuration:
     * https://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#Unsafe+Options
     * if that is set. If it isn't, ZooKeeper's default is also 1Mb.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_packet_bytes = 3;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getMaxPacketBytesOrBuilder() {
      if (maxPacketBytesBuilder_ != null) {
        return maxPacketBytesBuilder_.getMessageOrBuilder();
      } else {
        return maxPacketBytes_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : maxPacketBytes_;
      }
    }
    /**
     * <pre>
     * Messages — requests, responses and events — that are bigger than this value will
     * be ignored. If it is not set, the default value is 1Mb.
     * The value here should match the jute.maxbuffer property in your cluster configuration:
     * https://zookeeper.apache.org/doc/r3.4.10/zookeeperAdmin.html#Unsafe+Options
     * if that is set. If it isn't, ZooKeeper's default is also 1Mb.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_packet_bytes = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getMaxPacketBytesFieldBuilder() {
      if (maxPacketBytesBuilder_ == null) {
        maxPacketBytesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getMaxPacketBytes(),
                getParentForChildren(),
                isClean());
        maxPacketBytes_ = null;
      }
      return maxPacketBytesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy)
  private static final io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy();
  }

  public static io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ZooKeeperProxy>
      PARSER = new com.google.protobuf.AbstractParser<ZooKeeperProxy>() {
    @java.lang.Override
    public ZooKeeperProxy parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ZooKeeperProxy(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ZooKeeperProxy> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ZooKeeperProxy> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.network.zookeeper_proxy.v3.ZooKeeperProxy getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

