// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/adaptive_concurrency/v3/adaptive_concurrency.proto

package io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3;

/**
 * <pre>
 * Configuration parameters for the gradient controller.
 * </pre>
 *
 * Protobuf type {@code envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig}
 */
public final class GradientControllerConfig extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig)
    GradientControllerConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GradientControllerConfig.newBuilder() to construct.
  private GradientControllerConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GradientControllerConfig() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GradientControllerConfig();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GradientControllerConfig(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.envoyproxy.envoy.type.v3.Percent.Builder subBuilder = null;
            if (sampleAggregatePercentile_ != null) {
              subBuilder = sampleAggregatePercentile_.toBuilder();
            }
            sampleAggregatePercentile_ = input.readMessage(io.envoyproxy.envoy.type.v3.Percent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(sampleAggregatePercentile_);
              sampleAggregatePercentile_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.Builder subBuilder = null;
            if (concurrencyLimitParams_ != null) {
              subBuilder = concurrencyLimitParams_.toBuilder();
            }
            concurrencyLimitParams_ = input.readMessage(io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(concurrencyLimitParams_);
              concurrencyLimitParams_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.Builder subBuilder = null;
            if (minRttCalcParams_ != null) {
              subBuilder = minRttCalcParams_.toBuilder();
            }
            minRttCalcParams_ = input.readMessage(io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(minRttCalcParams_);
              minRttCalcParams_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.class, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.Builder.class);
  }

  public interface ConcurrencyLimitCalculationParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the maxConcurrencyLimit field is set.
     */
    boolean hasMaxConcurrencyLimit();
    /**
     * <pre>
     * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
     * @return The maxConcurrencyLimit.
     */
    com.google.protobuf.UInt32Value getMaxConcurrencyLimit();
    /**
     * <pre>
     * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.UInt32ValueOrBuilder getMaxConcurrencyLimitOrBuilder();

    /**
     * <pre>
     * The period of time samples are taken to recalculate the concurrency limit.
     * </pre>
     *
     * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
     * @return Whether the concurrencyUpdateInterval field is set.
     */
    boolean hasConcurrencyUpdateInterval();
    /**
     * <pre>
     * The period of time samples are taken to recalculate the concurrency limit.
     * </pre>
     *
     * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
     * @return The concurrencyUpdateInterval.
     */
    com.google.protobuf.Duration getConcurrencyUpdateInterval();
    /**
     * <pre>
     * The period of time samples are taken to recalculate the concurrency limit.
     * </pre>
     *
     * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.DurationOrBuilder getConcurrencyUpdateIntervalOrBuilder();
  }
  /**
   * <pre>
   * Parameters controlling the periodic recalculation of the concurrency limit from sampled request
   * latencies.
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams}
   */
  public static final class ConcurrencyLimitCalculationParams extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams)
      ConcurrencyLimitCalculationParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConcurrencyLimitCalculationParams.newBuilder() to construct.
    private ConcurrencyLimitCalculationParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConcurrencyLimitCalculationParams() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConcurrencyLimitCalculationParams();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ConcurrencyLimitCalculationParams(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              com.google.protobuf.UInt32Value.Builder subBuilder = null;
              if (maxConcurrencyLimit_ != null) {
                subBuilder = maxConcurrencyLimit_.toBuilder();
              }
              maxConcurrencyLimit_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxConcurrencyLimit_);
                maxConcurrencyLimit_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (concurrencyUpdateInterval_ != null) {
                subBuilder = concurrencyUpdateInterval_.toBuilder();
              }
              concurrencyUpdateInterval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(concurrencyUpdateInterval_);
                concurrencyUpdateInterval_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_ConcurrencyLimitCalculationParams_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_ConcurrencyLimitCalculationParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.class, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.Builder.class);
    }

    public static final int MAX_CONCURRENCY_LIMIT_FIELD_NUMBER = 2;
    private com.google.protobuf.UInt32Value maxConcurrencyLimit_;
    /**
     * <pre>
     * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the maxConcurrencyLimit field is set.
     */
    @java.lang.Override
    public boolean hasMaxConcurrencyLimit() {
      return maxConcurrencyLimit_ != null;
    }
    /**
     * <pre>
     * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
     * @return The maxConcurrencyLimit.
     */
    @java.lang.Override
    public com.google.protobuf.UInt32Value getMaxConcurrencyLimit() {
      return maxConcurrencyLimit_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxConcurrencyLimit_;
    }
    /**
     * <pre>
     * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public com.google.protobuf.UInt32ValueOrBuilder getMaxConcurrencyLimitOrBuilder() {
      return getMaxConcurrencyLimit();
    }

    public static final int CONCURRENCY_UPDATE_INTERVAL_FIELD_NUMBER = 3;
    private com.google.protobuf.Duration concurrencyUpdateInterval_;
    /**
     * <pre>
     * The period of time samples are taken to recalculate the concurrency limit.
     * </pre>
     *
     * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
     * @return Whether the concurrencyUpdateInterval field is set.
     */
    @java.lang.Override
    public boolean hasConcurrencyUpdateInterval() {
      return concurrencyUpdateInterval_ != null;
    }
    /**
     * <pre>
     * The period of time samples are taken to recalculate the concurrency limit.
     * </pre>
     *
     * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
     * @return The concurrencyUpdateInterval.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getConcurrencyUpdateInterval() {
      return concurrencyUpdateInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : concurrencyUpdateInterval_;
    }
    /**
     * <pre>
     * The period of time samples are taken to recalculate the concurrency limit.
     * </pre>
     *
     * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getConcurrencyUpdateIntervalOrBuilder() {
      return getConcurrencyUpdateInterval();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (maxConcurrencyLimit_ != null) {
        output.writeMessage(2, getMaxConcurrencyLimit());
      }
      if (concurrencyUpdateInterval_ != null) {
        output.writeMessage(3, getConcurrencyUpdateInterval());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (maxConcurrencyLimit_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMaxConcurrencyLimit());
      }
      if (concurrencyUpdateInterval_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getConcurrencyUpdateInterval());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams other = (io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams) obj;

      if (hasMaxConcurrencyLimit() != other.hasMaxConcurrencyLimit()) return false;
      if (hasMaxConcurrencyLimit()) {
        if (!getMaxConcurrencyLimit()
            .equals(other.getMaxConcurrencyLimit())) return false;
      }
      if (hasConcurrencyUpdateInterval() != other.hasConcurrencyUpdateInterval()) return false;
      if (hasConcurrencyUpdateInterval()) {
        if (!getConcurrencyUpdateInterval()
            .equals(other.getConcurrencyUpdateInterval())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMaxConcurrencyLimit()) {
        hash = (37 * hash) + MAX_CONCURRENCY_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getMaxConcurrencyLimit().hashCode();
      }
      if (hasConcurrencyUpdateInterval()) {
        hash = (37 * hash) + CONCURRENCY_UPDATE_INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getConcurrencyUpdateInterval().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Parameters controlling the periodic recalculation of the concurrency limit from sampled request
     * latencies.
     * </pre>
     *
     * Protobuf type {@code envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams)
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_ConcurrencyLimitCalculationParams_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_ConcurrencyLimitCalculationParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.class, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (maxConcurrencyLimitBuilder_ == null) {
          maxConcurrencyLimit_ = null;
        } else {
          maxConcurrencyLimit_ = null;
          maxConcurrencyLimitBuilder_ = null;
        }
        if (concurrencyUpdateIntervalBuilder_ == null) {
          concurrencyUpdateInterval_ = null;
        } else {
          concurrencyUpdateInterval_ = null;
          concurrencyUpdateIntervalBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_ConcurrencyLimitCalculationParams_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams getDefaultInstanceForType() {
        return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams build() {
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams buildPartial() {
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams result = new io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams(this);
        if (maxConcurrencyLimitBuilder_ == null) {
          result.maxConcurrencyLimit_ = maxConcurrencyLimit_;
        } else {
          result.maxConcurrencyLimit_ = maxConcurrencyLimitBuilder_.build();
        }
        if (concurrencyUpdateIntervalBuilder_ == null) {
          result.concurrencyUpdateInterval_ = concurrencyUpdateInterval_;
        } else {
          result.concurrencyUpdateInterval_ = concurrencyUpdateIntervalBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams) {
          return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams other) {
        if (other == io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.getDefaultInstance()) return this;
        if (other.hasMaxConcurrencyLimit()) {
          mergeMaxConcurrencyLimit(other.getMaxConcurrencyLimit());
        }
        if (other.hasConcurrencyUpdateInterval()) {
          mergeConcurrencyUpdateInterval(other.getConcurrencyUpdateInterval());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.UInt32Value maxConcurrencyLimit_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> maxConcurrencyLimitBuilder_;
      /**
       * <pre>
       * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
       * @return Whether the maxConcurrencyLimit field is set.
       */
      public boolean hasMaxConcurrencyLimit() {
        return maxConcurrencyLimitBuilder_ != null || maxConcurrencyLimit_ != null;
      }
      /**
       * <pre>
       * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
       * @return The maxConcurrencyLimit.
       */
      public com.google.protobuf.UInt32Value getMaxConcurrencyLimit() {
        if (maxConcurrencyLimitBuilder_ == null) {
          return maxConcurrencyLimit_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxConcurrencyLimit_;
        } else {
          return maxConcurrencyLimitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
       */
      public Builder setMaxConcurrencyLimit(com.google.protobuf.UInt32Value value) {
        if (maxConcurrencyLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxConcurrencyLimit_ = value;
          onChanged();
        } else {
          maxConcurrencyLimitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
       */
      public Builder setMaxConcurrencyLimit(
          com.google.protobuf.UInt32Value.Builder builderForValue) {
        if (maxConcurrencyLimitBuilder_ == null) {
          maxConcurrencyLimit_ = builderForValue.build();
          onChanged();
        } else {
          maxConcurrencyLimitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
       */
      public Builder mergeMaxConcurrencyLimit(com.google.protobuf.UInt32Value value) {
        if (maxConcurrencyLimitBuilder_ == null) {
          if (maxConcurrencyLimit_ != null) {
            maxConcurrencyLimit_ =
              com.google.protobuf.UInt32Value.newBuilder(maxConcurrencyLimit_).mergeFrom(value).buildPartial();
          } else {
            maxConcurrencyLimit_ = value;
          }
          onChanged();
        } else {
          maxConcurrencyLimitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
       */
      public Builder clearMaxConcurrencyLimit() {
        if (maxConcurrencyLimitBuilder_ == null) {
          maxConcurrencyLimit_ = null;
          onChanged();
        } else {
          maxConcurrencyLimit_ = null;
          maxConcurrencyLimitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32Value.Builder getMaxConcurrencyLimitBuilder() {
        
        onChanged();
        return getMaxConcurrencyLimitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32ValueOrBuilder getMaxConcurrencyLimitOrBuilder() {
        if (maxConcurrencyLimitBuilder_ != null) {
          return maxConcurrencyLimitBuilder_.getMessageOrBuilder();
        } else {
          return maxConcurrencyLimit_ == null ?
              com.google.protobuf.UInt32Value.getDefaultInstance() : maxConcurrencyLimit_;
        }
      }
      /**
       * <pre>
       * The allowed upper-bound on the calculated concurrency limit. Defaults to 1000.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value max_concurrency_limit = 2 [(.validate.rules) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
          getMaxConcurrencyLimitFieldBuilder() {
        if (maxConcurrencyLimitBuilder_ == null) {
          maxConcurrencyLimitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                  getMaxConcurrencyLimit(),
                  getParentForChildren(),
                  isClean());
          maxConcurrencyLimit_ = null;
        }
        return maxConcurrencyLimitBuilder_;
      }

      private com.google.protobuf.Duration concurrencyUpdateInterval_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> concurrencyUpdateIntervalBuilder_;
      /**
       * <pre>
       * The period of time samples are taken to recalculate the concurrency limit.
       * </pre>
       *
       * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
       * @return Whether the concurrencyUpdateInterval field is set.
       */
      public boolean hasConcurrencyUpdateInterval() {
        return concurrencyUpdateIntervalBuilder_ != null || concurrencyUpdateInterval_ != null;
      }
      /**
       * <pre>
       * The period of time samples are taken to recalculate the concurrency limit.
       * </pre>
       *
       * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
       * @return The concurrencyUpdateInterval.
       */
      public com.google.protobuf.Duration getConcurrencyUpdateInterval() {
        if (concurrencyUpdateIntervalBuilder_ == null) {
          return concurrencyUpdateInterval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : concurrencyUpdateInterval_;
        } else {
          return concurrencyUpdateIntervalBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The period of time samples are taken to recalculate the concurrency limit.
       * </pre>
       *
       * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
       */
      public Builder setConcurrencyUpdateInterval(com.google.protobuf.Duration value) {
        if (concurrencyUpdateIntervalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          concurrencyUpdateInterval_ = value;
          onChanged();
        } else {
          concurrencyUpdateIntervalBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The period of time samples are taken to recalculate the concurrency limit.
       * </pre>
       *
       * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
       */
      public Builder setConcurrencyUpdateInterval(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (concurrencyUpdateIntervalBuilder_ == null) {
          concurrencyUpdateInterval_ = builderForValue.build();
          onChanged();
        } else {
          concurrencyUpdateIntervalBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The period of time samples are taken to recalculate the concurrency limit.
       * </pre>
       *
       * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
       */
      public Builder mergeConcurrencyUpdateInterval(com.google.protobuf.Duration value) {
        if (concurrencyUpdateIntervalBuilder_ == null) {
          if (concurrencyUpdateInterval_ != null) {
            concurrencyUpdateInterval_ =
              com.google.protobuf.Duration.newBuilder(concurrencyUpdateInterval_).mergeFrom(value).buildPartial();
          } else {
            concurrencyUpdateInterval_ = value;
          }
          onChanged();
        } else {
          concurrencyUpdateIntervalBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The period of time samples are taken to recalculate the concurrency limit.
       * </pre>
       *
       * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
       */
      public Builder clearConcurrencyUpdateInterval() {
        if (concurrencyUpdateIntervalBuilder_ == null) {
          concurrencyUpdateInterval_ = null;
          onChanged();
        } else {
          concurrencyUpdateInterval_ = null;
          concurrencyUpdateIntervalBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The period of time samples are taken to recalculate the concurrency limit.
       * </pre>
       *
       * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.Duration.Builder getConcurrencyUpdateIntervalBuilder() {
        
        onChanged();
        return getConcurrencyUpdateIntervalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The period of time samples are taken to recalculate the concurrency limit.
       * </pre>
       *
       * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.DurationOrBuilder getConcurrencyUpdateIntervalOrBuilder() {
        if (concurrencyUpdateIntervalBuilder_ != null) {
          return concurrencyUpdateIntervalBuilder_.getMessageOrBuilder();
        } else {
          return concurrencyUpdateInterval_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : concurrencyUpdateInterval_;
        }
      }
      /**
       * <pre>
       * The period of time samples are taken to recalculate the concurrency limit.
       * </pre>
       *
       * <code>.google.protobuf.Duration concurrency_update_interval = 3 [(.validate.rules) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getConcurrencyUpdateIntervalFieldBuilder() {
        if (concurrencyUpdateIntervalBuilder_ == null) {
          concurrencyUpdateIntervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getConcurrencyUpdateInterval(),
                  getParentForChildren(),
                  isClean());
          concurrencyUpdateInterval_ = null;
        }
        return concurrencyUpdateIntervalBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams)
    }

    // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams)
    private static final io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams();
    }

    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConcurrencyLimitCalculationParams>
        PARSER = new com.google.protobuf.AbstractParser<ConcurrencyLimitCalculationParams>() {
      @java.lang.Override
      public ConcurrencyLimitCalculationParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConcurrencyLimitCalculationParams(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConcurrencyLimitCalculationParams> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConcurrencyLimitCalculationParams> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MinimumRTTCalculationParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The time interval between recalculating the minimum request round-trip time. Has to be
     * positive.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
     * @return Whether the interval field is set.
     */
    boolean hasInterval();
    /**
     * <pre>
     * The time interval between recalculating the minimum request round-trip time. Has to be
     * positive.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
     * @return The interval.
     */
    com.google.protobuf.Duration getInterval();
    /**
     * <pre>
     * The time interval between recalculating the minimum request round-trip time. Has to be
     * positive.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.DurationOrBuilder getIntervalOrBuilder();

    /**
     * <pre>
     * The number of requests to aggregate/sample during the minRTT recalculation window before
     * updating. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the requestCount field is set.
     */
    boolean hasRequestCount();
    /**
     * <pre>
     * The number of requests to aggregate/sample during the minRTT recalculation window before
     * updating. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
     * @return The requestCount.
     */
    com.google.protobuf.UInt32Value getRequestCount();
    /**
     * <pre>
     * The number of requests to aggregate/sample during the minRTT recalculation window before
     * updating. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.UInt32ValueOrBuilder getRequestCountOrBuilder();

    /**
     * <pre>
     * Randomized time delta that will be introduced to the start of the minRTT calculation window.
     * This is represented as a percentage of the interval duration. Defaults to 15%.
     * Example: If the interval is 10s and the jitter is 15%, the next window will begin
     * somewhere in the range (10s - 11.5s).
     * </pre>
     *
     * <code>.envoy.type.v3.Percent jitter = 3;</code>
     * @return Whether the jitter field is set.
     */
    boolean hasJitter();
    /**
     * <pre>
     * Randomized time delta that will be introduced to the start of the minRTT calculation window.
     * This is represented as a percentage of the interval duration. Defaults to 15%.
     * Example: If the interval is 10s and the jitter is 15%, the next window will begin
     * somewhere in the range (10s - 11.5s).
     * </pre>
     *
     * <code>.envoy.type.v3.Percent jitter = 3;</code>
     * @return The jitter.
     */
    io.envoyproxy.envoy.type.v3.Percent getJitter();
    /**
     * <pre>
     * Randomized time delta that will be introduced to the start of the minRTT calculation window.
     * This is represented as a percentage of the interval duration. Defaults to 15%.
     * Example: If the interval is 10s and the jitter is 15%, the next window will begin
     * somewhere in the range (10s - 11.5s).
     * </pre>
     *
     * <code>.envoy.type.v3.Percent jitter = 3;</code>
     */
    io.envoyproxy.envoy.type.v3.PercentOrBuilder getJitterOrBuilder();

    /**
     * <pre>
     * The concurrency limit set while measuring the minRTT. Defaults to 3.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
     * @return Whether the minConcurrency field is set.
     */
    boolean hasMinConcurrency();
    /**
     * <pre>
     * The concurrency limit set while measuring the minRTT. Defaults to 3.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
     * @return The minConcurrency.
     */
    com.google.protobuf.UInt32Value getMinConcurrency();
    /**
     * <pre>
     * The concurrency limit set while measuring the minRTT. Defaults to 3.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.UInt32ValueOrBuilder getMinConcurrencyOrBuilder();

    /**
     * <pre>
     * Amount added to the measured minRTT to add stability to the concurrency limit during natural
     * variability in latency. This is expressed as a percentage of the measured value and can be
     * adjusted to allow more or less tolerance to the sampled latency values.
     * Defaults to 25%.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent buffer = 5;</code>
     * @return Whether the buffer field is set.
     */
    boolean hasBuffer();
    /**
     * <pre>
     * Amount added to the measured minRTT to add stability to the concurrency limit during natural
     * variability in latency. This is expressed as a percentage of the measured value and can be
     * adjusted to allow more or less tolerance to the sampled latency values.
     * Defaults to 25%.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent buffer = 5;</code>
     * @return The buffer.
     */
    io.envoyproxy.envoy.type.v3.Percent getBuffer();
    /**
     * <pre>
     * Amount added to the measured minRTT to add stability to the concurrency limit during natural
     * variability in latency. This is expressed as a percentage of the measured value and can be
     * adjusted to allow more or less tolerance to the sampled latency values.
     * Defaults to 25%.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent buffer = 5;</code>
     */
    io.envoyproxy.envoy.type.v3.PercentOrBuilder getBufferOrBuilder();
  }
  /**
   * <pre>
   * Parameters controlling the periodic minRTT recalculation.
   * [#next-free-field: 6]
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams}
   */
  public static final class MinimumRTTCalculationParams extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams)
      MinimumRTTCalculationParamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MinimumRTTCalculationParams.newBuilder() to construct.
    private MinimumRTTCalculationParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MinimumRTTCalculationParams() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MinimumRTTCalculationParams();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MinimumRTTCalculationParams(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (interval_ != null) {
                subBuilder = interval_.toBuilder();
              }
              interval_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(interval_);
                interval_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.UInt32Value.Builder subBuilder = null;
              if (requestCount_ != null) {
                subBuilder = requestCount_.toBuilder();
              }
              requestCount_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(requestCount_);
                requestCount_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              io.envoyproxy.envoy.type.v3.Percent.Builder subBuilder = null;
              if (jitter_ != null) {
                subBuilder = jitter_.toBuilder();
              }
              jitter_ = input.readMessage(io.envoyproxy.envoy.type.v3.Percent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(jitter_);
                jitter_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.google.protobuf.UInt32Value.Builder subBuilder = null;
              if (minConcurrency_ != null) {
                subBuilder = minConcurrency_.toBuilder();
              }
              minConcurrency_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(minConcurrency_);
                minConcurrency_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              io.envoyproxy.envoy.type.v3.Percent.Builder subBuilder = null;
              if (buffer_ != null) {
                subBuilder = buffer_.toBuilder();
              }
              buffer_ = input.readMessage(io.envoyproxy.envoy.type.v3.Percent.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(buffer_);
                buffer_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_MinimumRTTCalculationParams_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_MinimumRTTCalculationParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.class, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.Builder.class);
    }

    public static final int INTERVAL_FIELD_NUMBER = 1;
    private com.google.protobuf.Duration interval_;
    /**
     * <pre>
     * The time interval between recalculating the minimum request round-trip time. Has to be
     * positive.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
     * @return Whether the interval field is set.
     */
    @java.lang.Override
    public boolean hasInterval() {
      return interval_ != null;
    }
    /**
     * <pre>
     * The time interval between recalculating the minimum request round-trip time. Has to be
     * positive.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
     * @return The interval.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getInterval() {
      return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
    }
    /**
     * <pre>
     * The time interval between recalculating the minimum request round-trip time. Has to be
     * positive.
     * </pre>
     *
     * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {
      return getInterval();
    }

    public static final int REQUEST_COUNT_FIELD_NUMBER = 2;
    private com.google.protobuf.UInt32Value requestCount_;
    /**
     * <pre>
     * The number of requests to aggregate/sample during the minRTT recalculation window before
     * updating. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the requestCount field is set.
     */
    @java.lang.Override
    public boolean hasRequestCount() {
      return requestCount_ != null;
    }
    /**
     * <pre>
     * The number of requests to aggregate/sample during the minRTT recalculation window before
     * updating. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
     * @return The requestCount.
     */
    @java.lang.Override
    public com.google.protobuf.UInt32Value getRequestCount() {
      return requestCount_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : requestCount_;
    }
    /**
     * <pre>
     * The number of requests to aggregate/sample during the minRTT recalculation window before
     * updating. Defaults to 50.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public com.google.protobuf.UInt32ValueOrBuilder getRequestCountOrBuilder() {
      return getRequestCount();
    }

    public static final int JITTER_FIELD_NUMBER = 3;
    private io.envoyproxy.envoy.type.v3.Percent jitter_;
    /**
     * <pre>
     * Randomized time delta that will be introduced to the start of the minRTT calculation window.
     * This is represented as a percentage of the interval duration. Defaults to 15%.
     * Example: If the interval is 10s and the jitter is 15%, the next window will begin
     * somewhere in the range (10s - 11.5s).
     * </pre>
     *
     * <code>.envoy.type.v3.Percent jitter = 3;</code>
     * @return Whether the jitter field is set.
     */
    @java.lang.Override
    public boolean hasJitter() {
      return jitter_ != null;
    }
    /**
     * <pre>
     * Randomized time delta that will be introduced to the start of the minRTT calculation window.
     * This is represented as a percentage of the interval duration. Defaults to 15%.
     * Example: If the interval is 10s and the jitter is 15%, the next window will begin
     * somewhere in the range (10s - 11.5s).
     * </pre>
     *
     * <code>.envoy.type.v3.Percent jitter = 3;</code>
     * @return The jitter.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.Percent getJitter() {
      return jitter_ == null ? io.envoyproxy.envoy.type.v3.Percent.getDefaultInstance() : jitter_;
    }
    /**
     * <pre>
     * Randomized time delta that will be introduced to the start of the minRTT calculation window.
     * This is represented as a percentage of the interval duration. Defaults to 15%.
     * Example: If the interval is 10s and the jitter is 15%, the next window will begin
     * somewhere in the range (10s - 11.5s).
     * </pre>
     *
     * <code>.envoy.type.v3.Percent jitter = 3;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.PercentOrBuilder getJitterOrBuilder() {
      return getJitter();
    }

    public static final int MIN_CONCURRENCY_FIELD_NUMBER = 4;
    private com.google.protobuf.UInt32Value minConcurrency_;
    /**
     * <pre>
     * The concurrency limit set while measuring the minRTT. Defaults to 3.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
     * @return Whether the minConcurrency field is set.
     */
    @java.lang.Override
    public boolean hasMinConcurrency() {
      return minConcurrency_ != null;
    }
    /**
     * <pre>
     * The concurrency limit set while measuring the minRTT. Defaults to 3.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
     * @return The minConcurrency.
     */
    @java.lang.Override
    public com.google.protobuf.UInt32Value getMinConcurrency() {
      return minConcurrency_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : minConcurrency_;
    }
    /**
     * <pre>
     * The concurrency limit set while measuring the minRTT. Defaults to 3.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public com.google.protobuf.UInt32ValueOrBuilder getMinConcurrencyOrBuilder() {
      return getMinConcurrency();
    }

    public static final int BUFFER_FIELD_NUMBER = 5;
    private io.envoyproxy.envoy.type.v3.Percent buffer_;
    /**
     * <pre>
     * Amount added to the measured minRTT to add stability to the concurrency limit during natural
     * variability in latency. This is expressed as a percentage of the measured value and can be
     * adjusted to allow more or less tolerance to the sampled latency values.
     * Defaults to 25%.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent buffer = 5;</code>
     * @return Whether the buffer field is set.
     */
    @java.lang.Override
    public boolean hasBuffer() {
      return buffer_ != null;
    }
    /**
     * <pre>
     * Amount added to the measured minRTT to add stability to the concurrency limit during natural
     * variability in latency. This is expressed as a percentage of the measured value and can be
     * adjusted to allow more or less tolerance to the sampled latency values.
     * Defaults to 25%.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent buffer = 5;</code>
     * @return The buffer.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.Percent getBuffer() {
      return buffer_ == null ? io.envoyproxy.envoy.type.v3.Percent.getDefaultInstance() : buffer_;
    }
    /**
     * <pre>
     * Amount added to the measured minRTT to add stability to the concurrency limit during natural
     * variability in latency. This is expressed as a percentage of the measured value and can be
     * adjusted to allow more or less tolerance to the sampled latency values.
     * Defaults to 25%.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent buffer = 5;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.PercentOrBuilder getBufferOrBuilder() {
      return getBuffer();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (interval_ != null) {
        output.writeMessage(1, getInterval());
      }
      if (requestCount_ != null) {
        output.writeMessage(2, getRequestCount());
      }
      if (jitter_ != null) {
        output.writeMessage(3, getJitter());
      }
      if (minConcurrency_ != null) {
        output.writeMessage(4, getMinConcurrency());
      }
      if (buffer_ != null) {
        output.writeMessage(5, getBuffer());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (interval_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInterval());
      }
      if (requestCount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRequestCount());
      }
      if (jitter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getJitter());
      }
      if (minConcurrency_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMinConcurrency());
      }
      if (buffer_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getBuffer());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams other = (io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams) obj;

      if (hasInterval() != other.hasInterval()) return false;
      if (hasInterval()) {
        if (!getInterval()
            .equals(other.getInterval())) return false;
      }
      if (hasRequestCount() != other.hasRequestCount()) return false;
      if (hasRequestCount()) {
        if (!getRequestCount()
            .equals(other.getRequestCount())) return false;
      }
      if (hasJitter() != other.hasJitter()) return false;
      if (hasJitter()) {
        if (!getJitter()
            .equals(other.getJitter())) return false;
      }
      if (hasMinConcurrency() != other.hasMinConcurrency()) return false;
      if (hasMinConcurrency()) {
        if (!getMinConcurrency()
            .equals(other.getMinConcurrency())) return false;
      }
      if (hasBuffer() != other.hasBuffer()) return false;
      if (hasBuffer()) {
        if (!getBuffer()
            .equals(other.getBuffer())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInterval()) {
        hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getInterval().hashCode();
      }
      if (hasRequestCount()) {
        hash = (37 * hash) + REQUEST_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getRequestCount().hashCode();
      }
      if (hasJitter()) {
        hash = (37 * hash) + JITTER_FIELD_NUMBER;
        hash = (53 * hash) + getJitter().hashCode();
      }
      if (hasMinConcurrency()) {
        hash = (37 * hash) + MIN_CONCURRENCY_FIELD_NUMBER;
        hash = (53 * hash) + getMinConcurrency().hashCode();
      }
      if (hasBuffer()) {
        hash = (37 * hash) + BUFFER_FIELD_NUMBER;
        hash = (53 * hash) + getBuffer().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Parameters controlling the periodic minRTT recalculation.
     * [#next-free-field: 6]
     * </pre>
     *
     * Protobuf type {@code envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams)
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_MinimumRTTCalculationParams_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_MinimumRTTCalculationParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.class, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (intervalBuilder_ == null) {
          interval_ = null;
        } else {
          interval_ = null;
          intervalBuilder_ = null;
        }
        if (requestCountBuilder_ == null) {
          requestCount_ = null;
        } else {
          requestCount_ = null;
          requestCountBuilder_ = null;
        }
        if (jitterBuilder_ == null) {
          jitter_ = null;
        } else {
          jitter_ = null;
          jitterBuilder_ = null;
        }
        if (minConcurrencyBuilder_ == null) {
          minConcurrency_ = null;
        } else {
          minConcurrency_ = null;
          minConcurrencyBuilder_ = null;
        }
        if (bufferBuilder_ == null) {
          buffer_ = null;
        } else {
          buffer_ = null;
          bufferBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_MinimumRTTCalculationParams_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams getDefaultInstanceForType() {
        return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams build() {
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams buildPartial() {
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams result = new io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams(this);
        if (intervalBuilder_ == null) {
          result.interval_ = interval_;
        } else {
          result.interval_ = intervalBuilder_.build();
        }
        if (requestCountBuilder_ == null) {
          result.requestCount_ = requestCount_;
        } else {
          result.requestCount_ = requestCountBuilder_.build();
        }
        if (jitterBuilder_ == null) {
          result.jitter_ = jitter_;
        } else {
          result.jitter_ = jitterBuilder_.build();
        }
        if (minConcurrencyBuilder_ == null) {
          result.minConcurrency_ = minConcurrency_;
        } else {
          result.minConcurrency_ = minConcurrencyBuilder_.build();
        }
        if (bufferBuilder_ == null) {
          result.buffer_ = buffer_;
        } else {
          result.buffer_ = bufferBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams) {
          return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams other) {
        if (other == io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.getDefaultInstance()) return this;
        if (other.hasInterval()) {
          mergeInterval(other.getInterval());
        }
        if (other.hasRequestCount()) {
          mergeRequestCount(other.getRequestCount());
        }
        if (other.hasJitter()) {
          mergeJitter(other.getJitter());
        }
        if (other.hasMinConcurrency()) {
          mergeMinConcurrency(other.getMinConcurrency());
        }
        if (other.hasBuffer()) {
          mergeBuffer(other.getBuffer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Duration interval_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> intervalBuilder_;
      /**
       * <pre>
       * The time interval between recalculating the minimum request round-trip time. Has to be
       * positive.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
       * @return Whether the interval field is set.
       */
      public boolean hasInterval() {
        return intervalBuilder_ != null || interval_ != null;
      }
      /**
       * <pre>
       * The time interval between recalculating the minimum request round-trip time. Has to be
       * positive.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
       * @return The interval.
       */
      public com.google.protobuf.Duration getInterval() {
        if (intervalBuilder_ == null) {
          return interval_ == null ? com.google.protobuf.Duration.getDefaultInstance() : interval_;
        } else {
          return intervalBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The time interval between recalculating the minimum request round-trip time. Has to be
       * positive.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder setInterval(com.google.protobuf.Duration value) {
        if (intervalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          interval_ = value;
          onChanged();
        } else {
          intervalBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The time interval between recalculating the minimum request round-trip time. Has to be
       * positive.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder setInterval(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (intervalBuilder_ == null) {
          interval_ = builderForValue.build();
          onChanged();
        } else {
          intervalBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The time interval between recalculating the minimum request round-trip time. Has to be
       * positive.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder mergeInterval(com.google.protobuf.Duration value) {
        if (intervalBuilder_ == null) {
          if (interval_ != null) {
            interval_ =
              com.google.protobuf.Duration.newBuilder(interval_).mergeFrom(value).buildPartial();
          } else {
            interval_ = value;
          }
          onChanged();
        } else {
          intervalBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The time interval between recalculating the minimum request round-trip time. Has to be
       * positive.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
       */
      public Builder clearInterval() {
        if (intervalBuilder_ == null) {
          interval_ = null;
          onChanged();
        } else {
          interval_ = null;
          intervalBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The time interval between recalculating the minimum request round-trip time. Has to be
       * positive.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.Duration.Builder getIntervalBuilder() {
        
        onChanged();
        return getIntervalFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The time interval between recalculating the minimum request round-trip time. Has to be
       * positive.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.DurationOrBuilder getIntervalOrBuilder() {
        if (intervalBuilder_ != null) {
          return intervalBuilder_.getMessageOrBuilder();
        } else {
          return interval_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : interval_;
        }
      }
      /**
       * <pre>
       * The time interval between recalculating the minimum request round-trip time. Has to be
       * positive.
       * </pre>
       *
       * <code>.google.protobuf.Duration interval = 1 [(.validate.rules) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getIntervalFieldBuilder() {
        if (intervalBuilder_ == null) {
          intervalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getInterval(),
                  getParentForChildren(),
                  isClean());
          interval_ = null;
        }
        return intervalBuilder_;
      }

      private com.google.protobuf.UInt32Value requestCount_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> requestCountBuilder_;
      /**
       * <pre>
       * The number of requests to aggregate/sample during the minRTT recalculation window before
       * updating. Defaults to 50.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
       * @return Whether the requestCount field is set.
       */
      public boolean hasRequestCount() {
        return requestCountBuilder_ != null || requestCount_ != null;
      }
      /**
       * <pre>
       * The number of requests to aggregate/sample during the minRTT recalculation window before
       * updating. Defaults to 50.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
       * @return The requestCount.
       */
      public com.google.protobuf.UInt32Value getRequestCount() {
        if (requestCountBuilder_ == null) {
          return requestCount_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : requestCount_;
        } else {
          return requestCountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The number of requests to aggregate/sample during the minRTT recalculation window before
       * updating. Defaults to 50.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
       */
      public Builder setRequestCount(com.google.protobuf.UInt32Value value) {
        if (requestCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestCount_ = value;
          onChanged();
        } else {
          requestCountBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The number of requests to aggregate/sample during the minRTT recalculation window before
       * updating. Defaults to 50.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
       */
      public Builder setRequestCount(
          com.google.protobuf.UInt32Value.Builder builderForValue) {
        if (requestCountBuilder_ == null) {
          requestCount_ = builderForValue.build();
          onChanged();
        } else {
          requestCountBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The number of requests to aggregate/sample during the minRTT recalculation window before
       * updating. Defaults to 50.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
       */
      public Builder mergeRequestCount(com.google.protobuf.UInt32Value value) {
        if (requestCountBuilder_ == null) {
          if (requestCount_ != null) {
            requestCount_ =
              com.google.protobuf.UInt32Value.newBuilder(requestCount_).mergeFrom(value).buildPartial();
          } else {
            requestCount_ = value;
          }
          onChanged();
        } else {
          requestCountBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The number of requests to aggregate/sample during the minRTT recalculation window before
       * updating. Defaults to 50.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
       */
      public Builder clearRequestCount() {
        if (requestCountBuilder_ == null) {
          requestCount_ = null;
          onChanged();
        } else {
          requestCount_ = null;
          requestCountBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The number of requests to aggregate/sample during the minRTT recalculation window before
       * updating. Defaults to 50.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32Value.Builder getRequestCountBuilder() {
        
        onChanged();
        return getRequestCountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The number of requests to aggregate/sample during the minRTT recalculation window before
       * updating. Defaults to 50.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32ValueOrBuilder getRequestCountOrBuilder() {
        if (requestCountBuilder_ != null) {
          return requestCountBuilder_.getMessageOrBuilder();
        } else {
          return requestCount_ == null ?
              com.google.protobuf.UInt32Value.getDefaultInstance() : requestCount_;
        }
      }
      /**
       * <pre>
       * The number of requests to aggregate/sample during the minRTT recalculation window before
       * updating. Defaults to 50.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value request_count = 2 [(.validate.rules) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
          getRequestCountFieldBuilder() {
        if (requestCountBuilder_ == null) {
          requestCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                  getRequestCount(),
                  getParentForChildren(),
                  isClean());
          requestCount_ = null;
        }
        return requestCountBuilder_;
      }

      private io.envoyproxy.envoy.type.v3.Percent jitter_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.type.v3.Percent, io.envoyproxy.envoy.type.v3.Percent.Builder, io.envoyproxy.envoy.type.v3.PercentOrBuilder> jitterBuilder_;
      /**
       * <pre>
       * Randomized time delta that will be introduced to the start of the minRTT calculation window.
       * This is represented as a percentage of the interval duration. Defaults to 15%.
       * Example: If the interval is 10s and the jitter is 15%, the next window will begin
       * somewhere in the range (10s - 11.5s).
       * </pre>
       *
       * <code>.envoy.type.v3.Percent jitter = 3;</code>
       * @return Whether the jitter field is set.
       */
      public boolean hasJitter() {
        return jitterBuilder_ != null || jitter_ != null;
      }
      /**
       * <pre>
       * Randomized time delta that will be introduced to the start of the minRTT calculation window.
       * This is represented as a percentage of the interval duration. Defaults to 15%.
       * Example: If the interval is 10s and the jitter is 15%, the next window will begin
       * somewhere in the range (10s - 11.5s).
       * </pre>
       *
       * <code>.envoy.type.v3.Percent jitter = 3;</code>
       * @return The jitter.
       */
      public io.envoyproxy.envoy.type.v3.Percent getJitter() {
        if (jitterBuilder_ == null) {
          return jitter_ == null ? io.envoyproxy.envoy.type.v3.Percent.getDefaultInstance() : jitter_;
        } else {
          return jitterBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Randomized time delta that will be introduced to the start of the minRTT calculation window.
       * This is represented as a percentage of the interval duration. Defaults to 15%.
       * Example: If the interval is 10s and the jitter is 15%, the next window will begin
       * somewhere in the range (10s - 11.5s).
       * </pre>
       *
       * <code>.envoy.type.v3.Percent jitter = 3;</code>
       */
      public Builder setJitter(io.envoyproxy.envoy.type.v3.Percent value) {
        if (jitterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          jitter_ = value;
          onChanged();
        } else {
          jitterBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Randomized time delta that will be introduced to the start of the minRTT calculation window.
       * This is represented as a percentage of the interval duration. Defaults to 15%.
       * Example: If the interval is 10s and the jitter is 15%, the next window will begin
       * somewhere in the range (10s - 11.5s).
       * </pre>
       *
       * <code>.envoy.type.v3.Percent jitter = 3;</code>
       */
      public Builder setJitter(
          io.envoyproxy.envoy.type.v3.Percent.Builder builderForValue) {
        if (jitterBuilder_ == null) {
          jitter_ = builderForValue.build();
          onChanged();
        } else {
          jitterBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Randomized time delta that will be introduced to the start of the minRTT calculation window.
       * This is represented as a percentage of the interval duration. Defaults to 15%.
       * Example: If the interval is 10s and the jitter is 15%, the next window will begin
       * somewhere in the range (10s - 11.5s).
       * </pre>
       *
       * <code>.envoy.type.v3.Percent jitter = 3;</code>
       */
      public Builder mergeJitter(io.envoyproxy.envoy.type.v3.Percent value) {
        if (jitterBuilder_ == null) {
          if (jitter_ != null) {
            jitter_ =
              io.envoyproxy.envoy.type.v3.Percent.newBuilder(jitter_).mergeFrom(value).buildPartial();
          } else {
            jitter_ = value;
          }
          onChanged();
        } else {
          jitterBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Randomized time delta that will be introduced to the start of the minRTT calculation window.
       * This is represented as a percentage of the interval duration. Defaults to 15%.
       * Example: If the interval is 10s and the jitter is 15%, the next window will begin
       * somewhere in the range (10s - 11.5s).
       * </pre>
       *
       * <code>.envoy.type.v3.Percent jitter = 3;</code>
       */
      public Builder clearJitter() {
        if (jitterBuilder_ == null) {
          jitter_ = null;
          onChanged();
        } else {
          jitter_ = null;
          jitterBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Randomized time delta that will be introduced to the start of the minRTT calculation window.
       * This is represented as a percentage of the interval duration. Defaults to 15%.
       * Example: If the interval is 10s and the jitter is 15%, the next window will begin
       * somewhere in the range (10s - 11.5s).
       * </pre>
       *
       * <code>.envoy.type.v3.Percent jitter = 3;</code>
       */
      public io.envoyproxy.envoy.type.v3.Percent.Builder getJitterBuilder() {
        
        onChanged();
        return getJitterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Randomized time delta that will be introduced to the start of the minRTT calculation window.
       * This is represented as a percentage of the interval duration. Defaults to 15%.
       * Example: If the interval is 10s and the jitter is 15%, the next window will begin
       * somewhere in the range (10s - 11.5s).
       * </pre>
       *
       * <code>.envoy.type.v3.Percent jitter = 3;</code>
       */
      public io.envoyproxy.envoy.type.v3.PercentOrBuilder getJitterOrBuilder() {
        if (jitterBuilder_ != null) {
          return jitterBuilder_.getMessageOrBuilder();
        } else {
          return jitter_ == null ?
              io.envoyproxy.envoy.type.v3.Percent.getDefaultInstance() : jitter_;
        }
      }
      /**
       * <pre>
       * Randomized time delta that will be introduced to the start of the minRTT calculation window.
       * This is represented as a percentage of the interval duration. Defaults to 15%.
       * Example: If the interval is 10s and the jitter is 15%, the next window will begin
       * somewhere in the range (10s - 11.5s).
       * </pre>
       *
       * <code>.envoy.type.v3.Percent jitter = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.type.v3.Percent, io.envoyproxy.envoy.type.v3.Percent.Builder, io.envoyproxy.envoy.type.v3.PercentOrBuilder> 
          getJitterFieldBuilder() {
        if (jitterBuilder_ == null) {
          jitterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.envoyproxy.envoy.type.v3.Percent, io.envoyproxy.envoy.type.v3.Percent.Builder, io.envoyproxy.envoy.type.v3.PercentOrBuilder>(
                  getJitter(),
                  getParentForChildren(),
                  isClean());
          jitter_ = null;
        }
        return jitterBuilder_;
      }

      private com.google.protobuf.UInt32Value minConcurrency_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> minConcurrencyBuilder_;
      /**
       * <pre>
       * The concurrency limit set while measuring the minRTT. Defaults to 3.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
       * @return Whether the minConcurrency field is set.
       */
      public boolean hasMinConcurrency() {
        return minConcurrencyBuilder_ != null || minConcurrency_ != null;
      }
      /**
       * <pre>
       * The concurrency limit set while measuring the minRTT. Defaults to 3.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
       * @return The minConcurrency.
       */
      public com.google.protobuf.UInt32Value getMinConcurrency() {
        if (minConcurrencyBuilder_ == null) {
          return minConcurrency_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : minConcurrency_;
        } else {
          return minConcurrencyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The concurrency limit set while measuring the minRTT. Defaults to 3.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
       */
      public Builder setMinConcurrency(com.google.protobuf.UInt32Value value) {
        if (minConcurrencyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          minConcurrency_ = value;
          onChanged();
        } else {
          minConcurrencyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The concurrency limit set while measuring the minRTT. Defaults to 3.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
       */
      public Builder setMinConcurrency(
          com.google.protobuf.UInt32Value.Builder builderForValue) {
        if (minConcurrencyBuilder_ == null) {
          minConcurrency_ = builderForValue.build();
          onChanged();
        } else {
          minConcurrencyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The concurrency limit set while measuring the minRTT. Defaults to 3.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
       */
      public Builder mergeMinConcurrency(com.google.protobuf.UInt32Value value) {
        if (minConcurrencyBuilder_ == null) {
          if (minConcurrency_ != null) {
            minConcurrency_ =
              com.google.protobuf.UInt32Value.newBuilder(minConcurrency_).mergeFrom(value).buildPartial();
          } else {
            minConcurrency_ = value;
          }
          onChanged();
        } else {
          minConcurrencyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The concurrency limit set while measuring the minRTT. Defaults to 3.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
       */
      public Builder clearMinConcurrency() {
        if (minConcurrencyBuilder_ == null) {
          minConcurrency_ = null;
          onChanged();
        } else {
          minConcurrency_ = null;
          minConcurrencyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The concurrency limit set while measuring the minRTT. Defaults to 3.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32Value.Builder getMinConcurrencyBuilder() {
        
        onChanged();
        return getMinConcurrencyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The concurrency limit set while measuring the minRTT. Defaults to 3.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32ValueOrBuilder getMinConcurrencyOrBuilder() {
        if (minConcurrencyBuilder_ != null) {
          return minConcurrencyBuilder_.getMessageOrBuilder();
        } else {
          return minConcurrency_ == null ?
              com.google.protobuf.UInt32Value.getDefaultInstance() : minConcurrency_;
        }
      }
      /**
       * <pre>
       * The concurrency limit set while measuring the minRTT. Defaults to 3.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value min_concurrency = 4 [(.validate.rules) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
          getMinConcurrencyFieldBuilder() {
        if (minConcurrencyBuilder_ == null) {
          minConcurrencyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                  getMinConcurrency(),
                  getParentForChildren(),
                  isClean());
          minConcurrency_ = null;
        }
        return minConcurrencyBuilder_;
      }

      private io.envoyproxy.envoy.type.v3.Percent buffer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.type.v3.Percent, io.envoyproxy.envoy.type.v3.Percent.Builder, io.envoyproxy.envoy.type.v3.PercentOrBuilder> bufferBuilder_;
      /**
       * <pre>
       * Amount added to the measured minRTT to add stability to the concurrency limit during natural
       * variability in latency. This is expressed as a percentage of the measured value and can be
       * adjusted to allow more or less tolerance to the sampled latency values.
       * Defaults to 25%.
       * </pre>
       *
       * <code>.envoy.type.v3.Percent buffer = 5;</code>
       * @return Whether the buffer field is set.
       */
      public boolean hasBuffer() {
        return bufferBuilder_ != null || buffer_ != null;
      }
      /**
       * <pre>
       * Amount added to the measured minRTT to add stability to the concurrency limit during natural
       * variability in latency. This is expressed as a percentage of the measured value and can be
       * adjusted to allow more or less tolerance to the sampled latency values.
       * Defaults to 25%.
       * </pre>
       *
       * <code>.envoy.type.v3.Percent buffer = 5;</code>
       * @return The buffer.
       */
      public io.envoyproxy.envoy.type.v3.Percent getBuffer() {
        if (bufferBuilder_ == null) {
          return buffer_ == null ? io.envoyproxy.envoy.type.v3.Percent.getDefaultInstance() : buffer_;
        } else {
          return bufferBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Amount added to the measured minRTT to add stability to the concurrency limit during natural
       * variability in latency. This is expressed as a percentage of the measured value and can be
       * adjusted to allow more or less tolerance to the sampled latency values.
       * Defaults to 25%.
       * </pre>
       *
       * <code>.envoy.type.v3.Percent buffer = 5;</code>
       */
      public Builder setBuffer(io.envoyproxy.envoy.type.v3.Percent value) {
        if (bufferBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          buffer_ = value;
          onChanged();
        } else {
          bufferBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Amount added to the measured minRTT to add stability to the concurrency limit during natural
       * variability in latency. This is expressed as a percentage of the measured value and can be
       * adjusted to allow more or less tolerance to the sampled latency values.
       * Defaults to 25%.
       * </pre>
       *
       * <code>.envoy.type.v3.Percent buffer = 5;</code>
       */
      public Builder setBuffer(
          io.envoyproxy.envoy.type.v3.Percent.Builder builderForValue) {
        if (bufferBuilder_ == null) {
          buffer_ = builderForValue.build();
          onChanged();
        } else {
          bufferBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Amount added to the measured minRTT to add stability to the concurrency limit during natural
       * variability in latency. This is expressed as a percentage of the measured value and can be
       * adjusted to allow more or less tolerance to the sampled latency values.
       * Defaults to 25%.
       * </pre>
       *
       * <code>.envoy.type.v3.Percent buffer = 5;</code>
       */
      public Builder mergeBuffer(io.envoyproxy.envoy.type.v3.Percent value) {
        if (bufferBuilder_ == null) {
          if (buffer_ != null) {
            buffer_ =
              io.envoyproxy.envoy.type.v3.Percent.newBuilder(buffer_).mergeFrom(value).buildPartial();
          } else {
            buffer_ = value;
          }
          onChanged();
        } else {
          bufferBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Amount added to the measured minRTT to add stability to the concurrency limit during natural
       * variability in latency. This is expressed as a percentage of the measured value and can be
       * adjusted to allow more or less tolerance to the sampled latency values.
       * Defaults to 25%.
       * </pre>
       *
       * <code>.envoy.type.v3.Percent buffer = 5;</code>
       */
      public Builder clearBuffer() {
        if (bufferBuilder_ == null) {
          buffer_ = null;
          onChanged();
        } else {
          buffer_ = null;
          bufferBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Amount added to the measured minRTT to add stability to the concurrency limit during natural
       * variability in latency. This is expressed as a percentage of the measured value and can be
       * adjusted to allow more or less tolerance to the sampled latency values.
       * Defaults to 25%.
       * </pre>
       *
       * <code>.envoy.type.v3.Percent buffer = 5;</code>
       */
      public io.envoyproxy.envoy.type.v3.Percent.Builder getBufferBuilder() {
        
        onChanged();
        return getBufferFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Amount added to the measured minRTT to add stability to the concurrency limit during natural
       * variability in latency. This is expressed as a percentage of the measured value and can be
       * adjusted to allow more or less tolerance to the sampled latency values.
       * Defaults to 25%.
       * </pre>
       *
       * <code>.envoy.type.v3.Percent buffer = 5;</code>
       */
      public io.envoyproxy.envoy.type.v3.PercentOrBuilder getBufferOrBuilder() {
        if (bufferBuilder_ != null) {
          return bufferBuilder_.getMessageOrBuilder();
        } else {
          return buffer_ == null ?
              io.envoyproxy.envoy.type.v3.Percent.getDefaultInstance() : buffer_;
        }
      }
      /**
       * <pre>
       * Amount added to the measured minRTT to add stability to the concurrency limit during natural
       * variability in latency. This is expressed as a percentage of the measured value and can be
       * adjusted to allow more or less tolerance to the sampled latency values.
       * Defaults to 25%.
       * </pre>
       *
       * <code>.envoy.type.v3.Percent buffer = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.type.v3.Percent, io.envoyproxy.envoy.type.v3.Percent.Builder, io.envoyproxy.envoy.type.v3.PercentOrBuilder> 
          getBufferFieldBuilder() {
        if (bufferBuilder_ == null) {
          bufferBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.envoyproxy.envoy.type.v3.Percent, io.envoyproxy.envoy.type.v3.Percent.Builder, io.envoyproxy.envoy.type.v3.PercentOrBuilder>(
                  getBuffer(),
                  getParentForChildren(),
                  isClean());
          buffer_ = null;
        }
        return bufferBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams)
    }

    // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams)
    private static final io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams();
    }

    public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MinimumRTTCalculationParams>
        PARSER = new com.google.protobuf.AbstractParser<MinimumRTTCalculationParams>() {
      @java.lang.Override
      public MinimumRTTCalculationParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MinimumRTTCalculationParams(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MinimumRTTCalculationParams> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MinimumRTTCalculationParams> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int SAMPLE_AGGREGATE_PERCENTILE_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.type.v3.Percent sampleAggregatePercentile_;
  /**
   * <pre>
   * The percentile to use when summarizing aggregated samples. Defaults to p50.
   * </pre>
   *
   * <code>.envoy.type.v3.Percent sample_aggregate_percentile = 1;</code>
   * @return Whether the sampleAggregatePercentile field is set.
   */
  @java.lang.Override
  public boolean hasSampleAggregatePercentile() {
    return sampleAggregatePercentile_ != null;
  }
  /**
   * <pre>
   * The percentile to use when summarizing aggregated samples. Defaults to p50.
   * </pre>
   *
   * <code>.envoy.type.v3.Percent sample_aggregate_percentile = 1;</code>
   * @return The sampleAggregatePercentile.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.v3.Percent getSampleAggregatePercentile() {
    return sampleAggregatePercentile_ == null ? io.envoyproxy.envoy.type.v3.Percent.getDefaultInstance() : sampleAggregatePercentile_;
  }
  /**
   * <pre>
   * The percentile to use when summarizing aggregated samples. Defaults to p50.
   * </pre>
   *
   * <code>.envoy.type.v3.Percent sample_aggregate_percentile = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.v3.PercentOrBuilder getSampleAggregatePercentileOrBuilder() {
    return getSampleAggregatePercentile();
  }

  public static final int CONCURRENCY_LIMIT_PARAMS_FIELD_NUMBER = 2;
  private io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrencyLimitParams_;
  /**
   * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrency_limit_params = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the concurrencyLimitParams field is set.
   */
  @java.lang.Override
  public boolean hasConcurrencyLimitParams() {
    return concurrencyLimitParams_ != null;
  }
  /**
   * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrency_limit_params = 2 [(.validate.rules) = { ... }</code>
   * @return The concurrencyLimitParams.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams getConcurrencyLimitParams() {
    return concurrencyLimitParams_ == null ? io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.getDefaultInstance() : concurrencyLimitParams_;
  }
  /**
   * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrency_limit_params = 2 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParamsOrBuilder getConcurrencyLimitParamsOrBuilder() {
    return getConcurrencyLimitParams();
  }

  public static final int MIN_RTT_CALC_PARAMS_FIELD_NUMBER = 3;
  private io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams minRttCalcParams_;
  /**
   * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams min_rtt_calc_params = 3 [(.validate.rules) = { ... }</code>
   * @return Whether the minRttCalcParams field is set.
   */
  @java.lang.Override
  public boolean hasMinRttCalcParams() {
    return minRttCalcParams_ != null;
  }
  /**
   * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams min_rtt_calc_params = 3 [(.validate.rules) = { ... }</code>
   * @return The minRttCalcParams.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams getMinRttCalcParams() {
    return minRttCalcParams_ == null ? io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.getDefaultInstance() : minRttCalcParams_;
  }
  /**
   * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams min_rtt_calc_params = 3 [(.validate.rules) = { ... }</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParamsOrBuilder getMinRttCalcParamsOrBuilder() {
    return getMinRttCalcParams();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (sampleAggregatePercentile_ != null) {
      output.writeMessage(1, getSampleAggregatePercentile());
    }
    if (concurrencyLimitParams_ != null) {
      output.writeMessage(2, getConcurrencyLimitParams());
    }
    if (minRttCalcParams_ != null) {
      output.writeMessage(3, getMinRttCalcParams());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (sampleAggregatePercentile_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getSampleAggregatePercentile());
    }
    if (concurrencyLimitParams_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getConcurrencyLimitParams());
    }
    if (minRttCalcParams_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getMinRttCalcParams());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig other = (io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig) obj;

    if (hasSampleAggregatePercentile() != other.hasSampleAggregatePercentile()) return false;
    if (hasSampleAggregatePercentile()) {
      if (!getSampleAggregatePercentile()
          .equals(other.getSampleAggregatePercentile())) return false;
    }
    if (hasConcurrencyLimitParams() != other.hasConcurrencyLimitParams()) return false;
    if (hasConcurrencyLimitParams()) {
      if (!getConcurrencyLimitParams()
          .equals(other.getConcurrencyLimitParams())) return false;
    }
    if (hasMinRttCalcParams() != other.hasMinRttCalcParams()) return false;
    if (hasMinRttCalcParams()) {
      if (!getMinRttCalcParams()
          .equals(other.getMinRttCalcParams())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasSampleAggregatePercentile()) {
      hash = (37 * hash) + SAMPLE_AGGREGATE_PERCENTILE_FIELD_NUMBER;
      hash = (53 * hash) + getSampleAggregatePercentile().hashCode();
    }
    if (hasConcurrencyLimitParams()) {
      hash = (37 * hash) + CONCURRENCY_LIMIT_PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getConcurrencyLimitParams().hashCode();
    }
    if (hasMinRttCalcParams()) {
      hash = (37 * hash) + MIN_RTT_CALC_PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getMinRttCalcParams().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Configuration parameters for the gradient controller.
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig)
      io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.class, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (sampleAggregatePercentileBuilder_ == null) {
        sampleAggregatePercentile_ = null;
      } else {
        sampleAggregatePercentile_ = null;
        sampleAggregatePercentileBuilder_ = null;
      }
      if (concurrencyLimitParamsBuilder_ == null) {
        concurrencyLimitParams_ = null;
      } else {
        concurrencyLimitParams_ = null;
        concurrencyLimitParamsBuilder_ = null;
      }
      if (minRttCalcParamsBuilder_ == null) {
        minRttCalcParams_ = null;
      } else {
        minRttCalcParams_ = null;
        minRttCalcParamsBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrencyProto.internal_static_envoy_extensions_filters_http_adaptive_concurrency_v3_GradientControllerConfig_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig build() {
      io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig buildPartial() {
      io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig result = new io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig(this);
      if (sampleAggregatePercentileBuilder_ == null) {
        result.sampleAggregatePercentile_ = sampleAggregatePercentile_;
      } else {
        result.sampleAggregatePercentile_ = sampleAggregatePercentileBuilder_.build();
      }
      if (concurrencyLimitParamsBuilder_ == null) {
        result.concurrencyLimitParams_ = concurrencyLimitParams_;
      } else {
        result.concurrencyLimitParams_ = concurrencyLimitParamsBuilder_.build();
      }
      if (minRttCalcParamsBuilder_ == null) {
        result.minRttCalcParams_ = minRttCalcParams_;
      } else {
        result.minRttCalcParams_ = minRttCalcParamsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig other) {
      if (other == io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.getDefaultInstance()) return this;
      if (other.hasSampleAggregatePercentile()) {
        mergeSampleAggregatePercentile(other.getSampleAggregatePercentile());
      }
      if (other.hasConcurrencyLimitParams()) {
        mergeConcurrencyLimitParams(other.getConcurrencyLimitParams());
      }
      if (other.hasMinRttCalcParams()) {
        mergeMinRttCalcParams(other.getMinRttCalcParams());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.envoyproxy.envoy.type.v3.Percent sampleAggregatePercentile_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.v3.Percent, io.envoyproxy.envoy.type.v3.Percent.Builder, io.envoyproxy.envoy.type.v3.PercentOrBuilder> sampleAggregatePercentileBuilder_;
    /**
     * <pre>
     * The percentile to use when summarizing aggregated samples. Defaults to p50.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent sample_aggregate_percentile = 1;</code>
     * @return Whether the sampleAggregatePercentile field is set.
     */
    public boolean hasSampleAggregatePercentile() {
      return sampleAggregatePercentileBuilder_ != null || sampleAggregatePercentile_ != null;
    }
    /**
     * <pre>
     * The percentile to use when summarizing aggregated samples. Defaults to p50.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent sample_aggregate_percentile = 1;</code>
     * @return The sampleAggregatePercentile.
     */
    public io.envoyproxy.envoy.type.v3.Percent getSampleAggregatePercentile() {
      if (sampleAggregatePercentileBuilder_ == null) {
        return sampleAggregatePercentile_ == null ? io.envoyproxy.envoy.type.v3.Percent.getDefaultInstance() : sampleAggregatePercentile_;
      } else {
        return sampleAggregatePercentileBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The percentile to use when summarizing aggregated samples. Defaults to p50.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent sample_aggregate_percentile = 1;</code>
     */
    public Builder setSampleAggregatePercentile(io.envoyproxy.envoy.type.v3.Percent value) {
      if (sampleAggregatePercentileBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sampleAggregatePercentile_ = value;
        onChanged();
      } else {
        sampleAggregatePercentileBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The percentile to use when summarizing aggregated samples. Defaults to p50.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent sample_aggregate_percentile = 1;</code>
     */
    public Builder setSampleAggregatePercentile(
        io.envoyproxy.envoy.type.v3.Percent.Builder builderForValue) {
      if (sampleAggregatePercentileBuilder_ == null) {
        sampleAggregatePercentile_ = builderForValue.build();
        onChanged();
      } else {
        sampleAggregatePercentileBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The percentile to use when summarizing aggregated samples. Defaults to p50.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent sample_aggregate_percentile = 1;</code>
     */
    public Builder mergeSampleAggregatePercentile(io.envoyproxy.envoy.type.v3.Percent value) {
      if (sampleAggregatePercentileBuilder_ == null) {
        if (sampleAggregatePercentile_ != null) {
          sampleAggregatePercentile_ =
            io.envoyproxy.envoy.type.v3.Percent.newBuilder(sampleAggregatePercentile_).mergeFrom(value).buildPartial();
        } else {
          sampleAggregatePercentile_ = value;
        }
        onChanged();
      } else {
        sampleAggregatePercentileBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The percentile to use when summarizing aggregated samples. Defaults to p50.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent sample_aggregate_percentile = 1;</code>
     */
    public Builder clearSampleAggregatePercentile() {
      if (sampleAggregatePercentileBuilder_ == null) {
        sampleAggregatePercentile_ = null;
        onChanged();
      } else {
        sampleAggregatePercentile_ = null;
        sampleAggregatePercentileBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The percentile to use when summarizing aggregated samples. Defaults to p50.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent sample_aggregate_percentile = 1;</code>
     */
    public io.envoyproxy.envoy.type.v3.Percent.Builder getSampleAggregatePercentileBuilder() {
      
      onChanged();
      return getSampleAggregatePercentileFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The percentile to use when summarizing aggregated samples. Defaults to p50.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent sample_aggregate_percentile = 1;</code>
     */
    public io.envoyproxy.envoy.type.v3.PercentOrBuilder getSampleAggregatePercentileOrBuilder() {
      if (sampleAggregatePercentileBuilder_ != null) {
        return sampleAggregatePercentileBuilder_.getMessageOrBuilder();
      } else {
        return sampleAggregatePercentile_ == null ?
            io.envoyproxy.envoy.type.v3.Percent.getDefaultInstance() : sampleAggregatePercentile_;
      }
    }
    /**
     * <pre>
     * The percentile to use when summarizing aggregated samples. Defaults to p50.
     * </pre>
     *
     * <code>.envoy.type.v3.Percent sample_aggregate_percentile = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.v3.Percent, io.envoyproxy.envoy.type.v3.Percent.Builder, io.envoyproxy.envoy.type.v3.PercentOrBuilder> 
        getSampleAggregatePercentileFieldBuilder() {
      if (sampleAggregatePercentileBuilder_ == null) {
        sampleAggregatePercentileBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.v3.Percent, io.envoyproxy.envoy.type.v3.Percent.Builder, io.envoyproxy.envoy.type.v3.PercentOrBuilder>(
                getSampleAggregatePercentile(),
                getParentForChildren(),
                isClean());
        sampleAggregatePercentile_ = null;
      }
      return sampleAggregatePercentileBuilder_;
    }

    private io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrencyLimitParams_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.Builder, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParamsOrBuilder> concurrencyLimitParamsBuilder_;
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrency_limit_params = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the concurrencyLimitParams field is set.
     */
    public boolean hasConcurrencyLimitParams() {
      return concurrencyLimitParamsBuilder_ != null || concurrencyLimitParams_ != null;
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrency_limit_params = 2 [(.validate.rules) = { ... }</code>
     * @return The concurrencyLimitParams.
     */
    public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams getConcurrencyLimitParams() {
      if (concurrencyLimitParamsBuilder_ == null) {
        return concurrencyLimitParams_ == null ? io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.getDefaultInstance() : concurrencyLimitParams_;
      } else {
        return concurrencyLimitParamsBuilder_.getMessage();
      }
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrency_limit_params = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setConcurrencyLimitParams(io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams value) {
      if (concurrencyLimitParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        concurrencyLimitParams_ = value;
        onChanged();
      } else {
        concurrencyLimitParamsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrency_limit_params = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder setConcurrencyLimitParams(
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.Builder builderForValue) {
      if (concurrencyLimitParamsBuilder_ == null) {
        concurrencyLimitParams_ = builderForValue.build();
        onChanged();
      } else {
        concurrencyLimitParamsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrency_limit_params = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeConcurrencyLimitParams(io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams value) {
      if (concurrencyLimitParamsBuilder_ == null) {
        if (concurrencyLimitParams_ != null) {
          concurrencyLimitParams_ =
            io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.newBuilder(concurrencyLimitParams_).mergeFrom(value).buildPartial();
        } else {
          concurrencyLimitParams_ = value;
        }
        onChanged();
      } else {
        concurrencyLimitParamsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrency_limit_params = 2 [(.validate.rules) = { ... }</code>
     */
    public Builder clearConcurrencyLimitParams() {
      if (concurrencyLimitParamsBuilder_ == null) {
        concurrencyLimitParams_ = null;
        onChanged();
      } else {
        concurrencyLimitParams_ = null;
        concurrencyLimitParamsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrency_limit_params = 2 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.Builder getConcurrencyLimitParamsBuilder() {
      
      onChanged();
      return getConcurrencyLimitParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrency_limit_params = 2 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParamsOrBuilder getConcurrencyLimitParamsOrBuilder() {
      if (concurrencyLimitParamsBuilder_ != null) {
        return concurrencyLimitParamsBuilder_.getMessageOrBuilder();
      } else {
        return concurrencyLimitParams_ == null ?
            io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.getDefaultInstance() : concurrencyLimitParams_;
      }
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams concurrency_limit_params = 2 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.Builder, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParamsOrBuilder> 
        getConcurrencyLimitParamsFieldBuilder() {
      if (concurrencyLimitParamsBuilder_ == null) {
        concurrencyLimitParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParams.Builder, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.ConcurrencyLimitCalculationParamsOrBuilder>(
                getConcurrencyLimitParams(),
                getParentForChildren(),
                isClean());
        concurrencyLimitParams_ = null;
      }
      return concurrencyLimitParamsBuilder_;
    }

    private io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams minRttCalcParams_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.Builder, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParamsOrBuilder> minRttCalcParamsBuilder_;
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams min_rtt_calc_params = 3 [(.validate.rules) = { ... }</code>
     * @return Whether the minRttCalcParams field is set.
     */
    public boolean hasMinRttCalcParams() {
      return minRttCalcParamsBuilder_ != null || minRttCalcParams_ != null;
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams min_rtt_calc_params = 3 [(.validate.rules) = { ... }</code>
     * @return The minRttCalcParams.
     */
    public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams getMinRttCalcParams() {
      if (minRttCalcParamsBuilder_ == null) {
        return minRttCalcParams_ == null ? io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.getDefaultInstance() : minRttCalcParams_;
      } else {
        return minRttCalcParamsBuilder_.getMessage();
      }
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams min_rtt_calc_params = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setMinRttCalcParams(io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams value) {
      if (minRttCalcParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        minRttCalcParams_ = value;
        onChanged();
      } else {
        minRttCalcParamsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams min_rtt_calc_params = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder setMinRttCalcParams(
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.Builder builderForValue) {
      if (minRttCalcParamsBuilder_ == null) {
        minRttCalcParams_ = builderForValue.build();
        onChanged();
      } else {
        minRttCalcParamsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams min_rtt_calc_params = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder mergeMinRttCalcParams(io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams value) {
      if (minRttCalcParamsBuilder_ == null) {
        if (minRttCalcParams_ != null) {
          minRttCalcParams_ =
            io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.newBuilder(minRttCalcParams_).mergeFrom(value).buildPartial();
        } else {
          minRttCalcParams_ = value;
        }
        onChanged();
      } else {
        minRttCalcParamsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams min_rtt_calc_params = 3 [(.validate.rules) = { ... }</code>
     */
    public Builder clearMinRttCalcParams() {
      if (minRttCalcParamsBuilder_ == null) {
        minRttCalcParams_ = null;
        onChanged();
      } else {
        minRttCalcParams_ = null;
        minRttCalcParamsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams min_rtt_calc_params = 3 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.Builder getMinRttCalcParamsBuilder() {
      
      onChanged();
      return getMinRttCalcParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams min_rtt_calc_params = 3 [(.validate.rules) = { ... }</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParamsOrBuilder getMinRttCalcParamsOrBuilder() {
      if (minRttCalcParamsBuilder_ != null) {
        return minRttCalcParamsBuilder_.getMessageOrBuilder();
      } else {
        return minRttCalcParams_ == null ?
            io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.getDefaultInstance() : minRttCalcParams_;
      }
    }
    /**
     * <code>.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams min_rtt_calc_params = 3 [(.validate.rules) = { ... }</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.Builder, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParamsOrBuilder> 
        getMinRttCalcParamsFieldBuilder() {
      if (minRttCalcParamsBuilder_ == null) {
        minRttCalcParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParams.Builder, io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig.MinimumRTTCalculationParamsOrBuilder>(
                getMinRttCalcParams(),
                getParentForChildren(),
                isClean());
        minRttCalcParams_ = null;
      }
      return minRttCalcParamsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig)
  private static final io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig();
  }

  public static io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GradientControllerConfig>
      PARSER = new com.google.protobuf.AbstractParser<GradientControllerConfig>() {
    @java.lang.Override
    public GradientControllerConfig parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GradientControllerConfig(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GradientControllerConfig> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GradientControllerConfig> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.adaptive_concurrency.v3.GradientControllerConfig getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

