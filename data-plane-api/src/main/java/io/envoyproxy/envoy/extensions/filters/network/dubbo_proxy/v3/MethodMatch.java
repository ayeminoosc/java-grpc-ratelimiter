// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/network/dubbo_proxy/v3/route.proto

package io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3;

/**
 * Protobuf type {@code envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch}
 */
public final class MethodMatch extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch)
    MethodMatchOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MethodMatch.newBuilder() to construct.
  private MethodMatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MethodMatch() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new MethodMatch();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private MethodMatch(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.envoyproxy.envoy.type.matcher.v3.StringMatcher.Builder subBuilder = null;
            if (name_ != null) {
              subBuilder = name_.toBuilder();
            }
            name_ = input.readMessage(io.envoyproxy.envoy.type.matcher.v3.StringMatcher.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(name_);
              name_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              paramsMatch_ = com.google.protobuf.MapField.newMapField(
                  ParamsMatchDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier>
            paramsMatch__ = input.readMessage(
                ParamsMatchDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            paramsMatch_.getMutableMap().put(
                paramsMatch__.getKey(), paramsMatch__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_MethodMatch_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 2:
        return internalGetParamsMatch();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_MethodMatch_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.class, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.Builder.class);
  }

  public interface ParameterMatchSpecifierOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * If specified, header match will be performed based on the value of the header.
     * </pre>
     *
     * <code>string exact_match = 3;</code>
     * @return Whether the exactMatch field is set.
     */
    boolean hasExactMatch();
    /**
     * <pre>
     * If specified, header match will be performed based on the value of the header.
     * </pre>
     *
     * <code>string exact_match = 3;</code>
     * @return The exactMatch.
     */
    java.lang.String getExactMatch();
    /**
     * <pre>
     * If specified, header match will be performed based on the value of the header.
     * </pre>
     *
     * <code>string exact_match = 3;</code>
     * @return The bytes for exactMatch.
     */
    com.google.protobuf.ByteString
        getExactMatchBytes();

    /**
     * <pre>
     * If specified, header match will be performed based on range.
     * The rule will match if the request header value is within this range.
     * The entire request header value must represent an integer in base 10 notation: consisting
     * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
     * if the header value does not represent an integer. Match will fail for empty values,
     * floating point numbers or if only a subsequence of the header value is an integer.
     * Examples:
     * * For range [-10,0), route will match for header value -1, but not for 0,
     *   "somestring", 10.9, "-1somestring"
     * </pre>
     *
     * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
     * @return Whether the rangeMatch field is set.
     */
    boolean hasRangeMatch();
    /**
     * <pre>
     * If specified, header match will be performed based on range.
     * The rule will match if the request header value is within this range.
     * The entire request header value must represent an integer in base 10 notation: consisting
     * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
     * if the header value does not represent an integer. Match will fail for empty values,
     * floating point numbers or if only a subsequence of the header value is an integer.
     * Examples:
     * * For range [-10,0), route will match for header value -1, but not for 0,
     *   "somestring", 10.9, "-1somestring"
     * </pre>
     *
     * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
     * @return The rangeMatch.
     */
    io.envoyproxy.envoy.type.v3.Int64Range getRangeMatch();
    /**
     * <pre>
     * If specified, header match will be performed based on range.
     * The rule will match if the request header value is within this range.
     * The entire request header value must represent an integer in base 10 notation: consisting
     * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
     * if the header value does not represent an integer. Match will fail for empty values,
     * floating point numbers or if only a subsequence of the header value is an integer.
     * Examples:
     * * For range [-10,0), route will match for header value -1, but not for 0,
     *   "somestring", 10.9, "-1somestring"
     * </pre>
     *
     * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
     */
    io.envoyproxy.envoy.type.v3.Int64RangeOrBuilder getRangeMatchOrBuilder();

    public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.ParameterMatchSpecifierCase getParameterMatchSpecifierCase();
  }
  /**
   * <pre>
   * The parameter matching type.
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier}
   */
  public static final class ParameterMatchSpecifier extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier)
      ParameterMatchSpecifierOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ParameterMatchSpecifier.newBuilder() to construct.
    private ParameterMatchSpecifier(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ParameterMatchSpecifier() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ParameterMatchSpecifier();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ParameterMatchSpecifier(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              parameterMatchSpecifierCase_ = 3;
              parameterMatchSpecifier_ = s;
              break;
            }
            case 34: {
              io.envoyproxy.envoy.type.v3.Int64Range.Builder subBuilder = null;
              if (parameterMatchSpecifierCase_ == 4) {
                subBuilder = ((io.envoyproxy.envoy.type.v3.Int64Range) parameterMatchSpecifier_).toBuilder();
              }
              parameterMatchSpecifier_ =
                  input.readMessage(io.envoyproxy.envoy.type.v3.Int64Range.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((io.envoyproxy.envoy.type.v3.Int64Range) parameterMatchSpecifier_);
                parameterMatchSpecifier_ = subBuilder.buildPartial();
              }
              parameterMatchSpecifierCase_ = 4;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_MethodMatch_ParameterMatchSpecifier_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_MethodMatch_ParameterMatchSpecifier_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.class, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.Builder.class);
    }

    private int parameterMatchSpecifierCase_ = 0;
    private java.lang.Object parameterMatchSpecifier_;
    public enum ParameterMatchSpecifierCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      EXACT_MATCH(3),
      RANGE_MATCH(4),
      PARAMETERMATCHSPECIFIER_NOT_SET(0);
      private final int value;
      private ParameterMatchSpecifierCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ParameterMatchSpecifierCase valueOf(int value) {
        return forNumber(value);
      }

      public static ParameterMatchSpecifierCase forNumber(int value) {
        switch (value) {
          case 3: return EXACT_MATCH;
          case 4: return RANGE_MATCH;
          case 0: return PARAMETERMATCHSPECIFIER_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ParameterMatchSpecifierCase
    getParameterMatchSpecifierCase() {
      return ParameterMatchSpecifierCase.forNumber(
          parameterMatchSpecifierCase_);
    }

    public static final int EXACT_MATCH_FIELD_NUMBER = 3;
    /**
     * <pre>
     * If specified, header match will be performed based on the value of the header.
     * </pre>
     *
     * <code>string exact_match = 3;</code>
     * @return Whether the exactMatch field is set.
     */
    public boolean hasExactMatch() {
      return parameterMatchSpecifierCase_ == 3;
    }
    /**
     * <pre>
     * If specified, header match will be performed based on the value of the header.
     * </pre>
     *
     * <code>string exact_match = 3;</code>
     * @return The exactMatch.
     */
    public java.lang.String getExactMatch() {
      java.lang.Object ref = "";
      if (parameterMatchSpecifierCase_ == 3) {
        ref = parameterMatchSpecifier_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (parameterMatchSpecifierCase_ == 3) {
          parameterMatchSpecifier_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * If specified, header match will be performed based on the value of the header.
     * </pre>
     *
     * <code>string exact_match = 3;</code>
     * @return The bytes for exactMatch.
     */
    public com.google.protobuf.ByteString
        getExactMatchBytes() {
      java.lang.Object ref = "";
      if (parameterMatchSpecifierCase_ == 3) {
        ref = parameterMatchSpecifier_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (parameterMatchSpecifierCase_ == 3) {
          parameterMatchSpecifier_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RANGE_MATCH_FIELD_NUMBER = 4;
    /**
     * <pre>
     * If specified, header match will be performed based on range.
     * The rule will match if the request header value is within this range.
     * The entire request header value must represent an integer in base 10 notation: consisting
     * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
     * if the header value does not represent an integer. Match will fail for empty values,
     * floating point numbers or if only a subsequence of the header value is an integer.
     * Examples:
     * * For range [-10,0), route will match for header value -1, but not for 0,
     *   "somestring", 10.9, "-1somestring"
     * </pre>
     *
     * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
     * @return Whether the rangeMatch field is set.
     */
    @java.lang.Override
    public boolean hasRangeMatch() {
      return parameterMatchSpecifierCase_ == 4;
    }
    /**
     * <pre>
     * If specified, header match will be performed based on range.
     * The rule will match if the request header value is within this range.
     * The entire request header value must represent an integer in base 10 notation: consisting
     * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
     * if the header value does not represent an integer. Match will fail for empty values,
     * floating point numbers or if only a subsequence of the header value is an integer.
     * Examples:
     * * For range [-10,0), route will match for header value -1, but not for 0,
     *   "somestring", 10.9, "-1somestring"
     * </pre>
     *
     * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
     * @return The rangeMatch.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.Int64Range getRangeMatch() {
      if (parameterMatchSpecifierCase_ == 4) {
         return (io.envoyproxy.envoy.type.v3.Int64Range) parameterMatchSpecifier_;
      }
      return io.envoyproxy.envoy.type.v3.Int64Range.getDefaultInstance();
    }
    /**
     * <pre>
     * If specified, header match will be performed based on range.
     * The rule will match if the request header value is within this range.
     * The entire request header value must represent an integer in base 10 notation: consisting
     * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
     * if the header value does not represent an integer. Match will fail for empty values,
     * floating point numbers or if only a subsequence of the header value is an integer.
     * Examples:
     * * For range [-10,0), route will match for header value -1, but not for 0,
     *   "somestring", 10.9, "-1somestring"
     * </pre>
     *
     * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.v3.Int64RangeOrBuilder getRangeMatchOrBuilder() {
      if (parameterMatchSpecifierCase_ == 4) {
         return (io.envoyproxy.envoy.type.v3.Int64Range) parameterMatchSpecifier_;
      }
      return io.envoyproxy.envoy.type.v3.Int64Range.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (parameterMatchSpecifierCase_ == 3) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, parameterMatchSpecifier_);
      }
      if (parameterMatchSpecifierCase_ == 4) {
        output.writeMessage(4, (io.envoyproxy.envoy.type.v3.Int64Range) parameterMatchSpecifier_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (parameterMatchSpecifierCase_ == 3) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, parameterMatchSpecifier_);
      }
      if (parameterMatchSpecifierCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (io.envoyproxy.envoy.type.v3.Int64Range) parameterMatchSpecifier_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier other = (io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier) obj;

      if (!getParameterMatchSpecifierCase().equals(other.getParameterMatchSpecifierCase())) return false;
      switch (parameterMatchSpecifierCase_) {
        case 3:
          if (!getExactMatch()
              .equals(other.getExactMatch())) return false;
          break;
        case 4:
          if (!getRangeMatch()
              .equals(other.getRangeMatch())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (parameterMatchSpecifierCase_) {
        case 3:
          hash = (37 * hash) + EXACT_MATCH_FIELD_NUMBER;
          hash = (53 * hash) + getExactMatch().hashCode();
          break;
        case 4:
          hash = (37 * hash) + RANGE_MATCH_FIELD_NUMBER;
          hash = (53 * hash) + getRangeMatch().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The parameter matching type.
     * </pre>
     *
     * Protobuf type {@code envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier)
        io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifierOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_MethodMatch_ParameterMatchSpecifier_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_MethodMatch_ParameterMatchSpecifier_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.class, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        parameterMatchSpecifierCase_ = 0;
        parameterMatchSpecifier_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_MethodMatch_ParameterMatchSpecifier_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier getDefaultInstanceForType() {
        return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier build() {
        io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier buildPartial() {
        io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier result = new io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier(this);
        if (parameterMatchSpecifierCase_ == 3) {
          result.parameterMatchSpecifier_ = parameterMatchSpecifier_;
        }
        if (parameterMatchSpecifierCase_ == 4) {
          if (rangeMatchBuilder_ == null) {
            result.parameterMatchSpecifier_ = parameterMatchSpecifier_;
          } else {
            result.parameterMatchSpecifier_ = rangeMatchBuilder_.build();
          }
        }
        result.parameterMatchSpecifierCase_ = parameterMatchSpecifierCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier) {
          return mergeFrom((io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier other) {
        if (other == io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.getDefaultInstance()) return this;
        switch (other.getParameterMatchSpecifierCase()) {
          case EXACT_MATCH: {
            parameterMatchSpecifierCase_ = 3;
            parameterMatchSpecifier_ = other.parameterMatchSpecifier_;
            onChanged();
            break;
          }
          case RANGE_MATCH: {
            mergeRangeMatch(other.getRangeMatch());
            break;
          }
          case PARAMETERMATCHSPECIFIER_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int parameterMatchSpecifierCase_ = 0;
      private java.lang.Object parameterMatchSpecifier_;
      public ParameterMatchSpecifierCase
          getParameterMatchSpecifierCase() {
        return ParameterMatchSpecifierCase.forNumber(
            parameterMatchSpecifierCase_);
      }

      public Builder clearParameterMatchSpecifier() {
        parameterMatchSpecifierCase_ = 0;
        parameterMatchSpecifier_ = null;
        onChanged();
        return this;
      }


      /**
       * <pre>
       * If specified, header match will be performed based on the value of the header.
       * </pre>
       *
       * <code>string exact_match = 3;</code>
       * @return Whether the exactMatch field is set.
       */
      @java.lang.Override
      public boolean hasExactMatch() {
        return parameterMatchSpecifierCase_ == 3;
      }
      /**
       * <pre>
       * If specified, header match will be performed based on the value of the header.
       * </pre>
       *
       * <code>string exact_match = 3;</code>
       * @return The exactMatch.
       */
      @java.lang.Override
      public java.lang.String getExactMatch() {
        java.lang.Object ref = "";
        if (parameterMatchSpecifierCase_ == 3) {
          ref = parameterMatchSpecifier_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (parameterMatchSpecifierCase_ == 3) {
            parameterMatchSpecifier_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If specified, header match will be performed based on the value of the header.
       * </pre>
       *
       * <code>string exact_match = 3;</code>
       * @return The bytes for exactMatch.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getExactMatchBytes() {
        java.lang.Object ref = "";
        if (parameterMatchSpecifierCase_ == 3) {
          ref = parameterMatchSpecifier_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (parameterMatchSpecifierCase_ == 3) {
            parameterMatchSpecifier_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If specified, header match will be performed based on the value of the header.
       * </pre>
       *
       * <code>string exact_match = 3;</code>
       * @param value The exactMatch to set.
       * @return This builder for chaining.
       */
      public Builder setExactMatch(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  parameterMatchSpecifierCase_ = 3;
        parameterMatchSpecifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If specified, header match will be performed based on the value of the header.
       * </pre>
       *
       * <code>string exact_match = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearExactMatch() {
        if (parameterMatchSpecifierCase_ == 3) {
          parameterMatchSpecifierCase_ = 0;
          parameterMatchSpecifier_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * If specified, header match will be performed based on the value of the header.
       * </pre>
       *
       * <code>string exact_match = 3;</code>
       * @param value The bytes for exactMatch to set.
       * @return This builder for chaining.
       */
      public Builder setExactMatchBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        parameterMatchSpecifierCase_ = 3;
        parameterMatchSpecifier_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.type.v3.Int64Range, io.envoyproxy.envoy.type.v3.Int64Range.Builder, io.envoyproxy.envoy.type.v3.Int64RangeOrBuilder> rangeMatchBuilder_;
      /**
       * <pre>
       * If specified, header match will be performed based on range.
       * The rule will match if the request header value is within this range.
       * The entire request header value must represent an integer in base 10 notation: consisting
       * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
       * if the header value does not represent an integer. Match will fail for empty values,
       * floating point numbers or if only a subsequence of the header value is an integer.
       * Examples:
       * * For range [-10,0), route will match for header value -1, but not for 0,
       *   "somestring", 10.9, "-1somestring"
       * </pre>
       *
       * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
       * @return Whether the rangeMatch field is set.
       */
      @java.lang.Override
      public boolean hasRangeMatch() {
        return parameterMatchSpecifierCase_ == 4;
      }
      /**
       * <pre>
       * If specified, header match will be performed based on range.
       * The rule will match if the request header value is within this range.
       * The entire request header value must represent an integer in base 10 notation: consisting
       * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
       * if the header value does not represent an integer. Match will fail for empty values,
       * floating point numbers or if only a subsequence of the header value is an integer.
       * Examples:
       * * For range [-10,0), route will match for header value -1, but not for 0,
       *   "somestring", 10.9, "-1somestring"
       * </pre>
       *
       * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
       * @return The rangeMatch.
       */
      @java.lang.Override
      public io.envoyproxy.envoy.type.v3.Int64Range getRangeMatch() {
        if (rangeMatchBuilder_ == null) {
          if (parameterMatchSpecifierCase_ == 4) {
            return (io.envoyproxy.envoy.type.v3.Int64Range) parameterMatchSpecifier_;
          }
          return io.envoyproxy.envoy.type.v3.Int64Range.getDefaultInstance();
        } else {
          if (parameterMatchSpecifierCase_ == 4) {
            return rangeMatchBuilder_.getMessage();
          }
          return io.envoyproxy.envoy.type.v3.Int64Range.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * If specified, header match will be performed based on range.
       * The rule will match if the request header value is within this range.
       * The entire request header value must represent an integer in base 10 notation: consisting
       * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
       * if the header value does not represent an integer. Match will fail for empty values,
       * floating point numbers or if only a subsequence of the header value is an integer.
       * Examples:
       * * For range [-10,0), route will match for header value -1, but not for 0,
       *   "somestring", 10.9, "-1somestring"
       * </pre>
       *
       * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
       */
      public Builder setRangeMatch(io.envoyproxy.envoy.type.v3.Int64Range value) {
        if (rangeMatchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parameterMatchSpecifier_ = value;
          onChanged();
        } else {
          rangeMatchBuilder_.setMessage(value);
        }
        parameterMatchSpecifierCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * If specified, header match will be performed based on range.
       * The rule will match if the request header value is within this range.
       * The entire request header value must represent an integer in base 10 notation: consisting
       * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
       * if the header value does not represent an integer. Match will fail for empty values,
       * floating point numbers or if only a subsequence of the header value is an integer.
       * Examples:
       * * For range [-10,0), route will match for header value -1, but not for 0,
       *   "somestring", 10.9, "-1somestring"
       * </pre>
       *
       * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
       */
      public Builder setRangeMatch(
          io.envoyproxy.envoy.type.v3.Int64Range.Builder builderForValue) {
        if (rangeMatchBuilder_ == null) {
          parameterMatchSpecifier_ = builderForValue.build();
          onChanged();
        } else {
          rangeMatchBuilder_.setMessage(builderForValue.build());
        }
        parameterMatchSpecifierCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * If specified, header match will be performed based on range.
       * The rule will match if the request header value is within this range.
       * The entire request header value must represent an integer in base 10 notation: consisting
       * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
       * if the header value does not represent an integer. Match will fail for empty values,
       * floating point numbers or if only a subsequence of the header value is an integer.
       * Examples:
       * * For range [-10,0), route will match for header value -1, but not for 0,
       *   "somestring", 10.9, "-1somestring"
       * </pre>
       *
       * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
       */
      public Builder mergeRangeMatch(io.envoyproxy.envoy.type.v3.Int64Range value) {
        if (rangeMatchBuilder_ == null) {
          if (parameterMatchSpecifierCase_ == 4 &&
              parameterMatchSpecifier_ != io.envoyproxy.envoy.type.v3.Int64Range.getDefaultInstance()) {
            parameterMatchSpecifier_ = io.envoyproxy.envoy.type.v3.Int64Range.newBuilder((io.envoyproxy.envoy.type.v3.Int64Range) parameterMatchSpecifier_)
                .mergeFrom(value).buildPartial();
          } else {
            parameterMatchSpecifier_ = value;
          }
          onChanged();
        } else {
          if (parameterMatchSpecifierCase_ == 4) {
            rangeMatchBuilder_.mergeFrom(value);
          }
          rangeMatchBuilder_.setMessage(value);
        }
        parameterMatchSpecifierCase_ = 4;
        return this;
      }
      /**
       * <pre>
       * If specified, header match will be performed based on range.
       * The rule will match if the request header value is within this range.
       * The entire request header value must represent an integer in base 10 notation: consisting
       * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
       * if the header value does not represent an integer. Match will fail for empty values,
       * floating point numbers or if only a subsequence of the header value is an integer.
       * Examples:
       * * For range [-10,0), route will match for header value -1, but not for 0,
       *   "somestring", 10.9, "-1somestring"
       * </pre>
       *
       * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
       */
      public Builder clearRangeMatch() {
        if (rangeMatchBuilder_ == null) {
          if (parameterMatchSpecifierCase_ == 4) {
            parameterMatchSpecifierCase_ = 0;
            parameterMatchSpecifier_ = null;
            onChanged();
          }
        } else {
          if (parameterMatchSpecifierCase_ == 4) {
            parameterMatchSpecifierCase_ = 0;
            parameterMatchSpecifier_ = null;
          }
          rangeMatchBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * If specified, header match will be performed based on range.
       * The rule will match if the request header value is within this range.
       * The entire request header value must represent an integer in base 10 notation: consisting
       * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
       * if the header value does not represent an integer. Match will fail for empty values,
       * floating point numbers or if only a subsequence of the header value is an integer.
       * Examples:
       * * For range [-10,0), route will match for header value -1, but not for 0,
       *   "somestring", 10.9, "-1somestring"
       * </pre>
       *
       * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
       */
      public io.envoyproxy.envoy.type.v3.Int64Range.Builder getRangeMatchBuilder() {
        return getRangeMatchFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * If specified, header match will be performed based on range.
       * The rule will match if the request header value is within this range.
       * The entire request header value must represent an integer in base 10 notation: consisting
       * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
       * if the header value does not represent an integer. Match will fail for empty values,
       * floating point numbers or if only a subsequence of the header value is an integer.
       * Examples:
       * * For range [-10,0), route will match for header value -1, but not for 0,
       *   "somestring", 10.9, "-1somestring"
       * </pre>
       *
       * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
       */
      @java.lang.Override
      public io.envoyproxy.envoy.type.v3.Int64RangeOrBuilder getRangeMatchOrBuilder() {
        if ((parameterMatchSpecifierCase_ == 4) && (rangeMatchBuilder_ != null)) {
          return rangeMatchBuilder_.getMessageOrBuilder();
        } else {
          if (parameterMatchSpecifierCase_ == 4) {
            return (io.envoyproxy.envoy.type.v3.Int64Range) parameterMatchSpecifier_;
          }
          return io.envoyproxy.envoy.type.v3.Int64Range.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * If specified, header match will be performed based on range.
       * The rule will match if the request header value is within this range.
       * The entire request header value must represent an integer in base 10 notation: consisting
       * of an optional plus or minus sign followed by a sequence of digits. The rule will not match
       * if the header value does not represent an integer. Match will fail for empty values,
       * floating point numbers or if only a subsequence of the header value is an integer.
       * Examples:
       * * For range [-10,0), route will match for header value -1, but not for 0,
       *   "somestring", 10.9, "-1somestring"
       * </pre>
       *
       * <code>.envoy.type.v3.Int64Range range_match = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.type.v3.Int64Range, io.envoyproxy.envoy.type.v3.Int64Range.Builder, io.envoyproxy.envoy.type.v3.Int64RangeOrBuilder> 
          getRangeMatchFieldBuilder() {
        if (rangeMatchBuilder_ == null) {
          if (!(parameterMatchSpecifierCase_ == 4)) {
            parameterMatchSpecifier_ = io.envoyproxy.envoy.type.v3.Int64Range.getDefaultInstance();
          }
          rangeMatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.envoyproxy.envoy.type.v3.Int64Range, io.envoyproxy.envoy.type.v3.Int64Range.Builder, io.envoyproxy.envoy.type.v3.Int64RangeOrBuilder>(
                  (io.envoyproxy.envoy.type.v3.Int64Range) parameterMatchSpecifier_,
                  getParentForChildren(),
                  isClean());
          parameterMatchSpecifier_ = null;
        }
        parameterMatchSpecifierCase_ = 4;
        onChanged();;
        return rangeMatchBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier)
    }

    // @@protoc_insertion_point(class_scope:envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier)
    private static final io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier();
    }

    public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ParameterMatchSpecifier>
        PARSER = new com.google.protobuf.AbstractParser<ParameterMatchSpecifier>() {
      @java.lang.Override
      public ParameterMatchSpecifier parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ParameterMatchSpecifier(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ParameterMatchSpecifier> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ParameterMatchSpecifier> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int NAME_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.type.matcher.v3.StringMatcher name_;
  /**
   * <pre>
   * The name of the method.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.StringMatcher name = 1;</code>
   * @return Whether the name field is set.
   */
  @java.lang.Override
  public boolean hasName() {
    return name_ != null;
  }
  /**
   * <pre>
   * The name of the method.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.StringMatcher name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.StringMatcher getName() {
    return name_ == null ? io.envoyproxy.envoy.type.matcher.v3.StringMatcher.getDefaultInstance() : name_;
  }
  /**
   * <pre>
   * The name of the method.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.StringMatcher name = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.StringMatcherOrBuilder getNameOrBuilder() {
    return getName();
  }

  public static final int PARAMS_MATCH_FIELD_NUMBER = 2;
  private static final class ParamsMatchDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier>newDefaultInstance(
                io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_MethodMatch_ParamsMatchEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier> paramsMatch_;
  private com.google.protobuf.MapField<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier>
  internalGetParamsMatch() {
    if (paramsMatch_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ParamsMatchDefaultEntryHolder.defaultEntry);
    }
    return paramsMatch_;
  }

  public int getParamsMatchCount() {
    return internalGetParamsMatch().getMap().size();
  }
  /**
   * <pre>
   * Method parameter definition.
   * The key is the parameter index, starting from 0.
   * The value is the parameter matching type.
   * </pre>
   *
   * <code>map&lt;uint32, .envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
   */

  @java.lang.Override
  public boolean containsParamsMatch(
      int key) {
    
    return internalGetParamsMatch().getMap().containsKey(key);
  }
  /**
   * Use {@link #getParamsMatchMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier> getParamsMatch() {
    return getParamsMatchMap();
  }
  /**
   * <pre>
   * Method parameter definition.
   * The key is the parameter index, starting from 0.
   * The value is the parameter matching type.
   * </pre>
   *
   * <code>map&lt;uint32, .envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier> getParamsMatchMap() {
    return internalGetParamsMatch().getMap();
  }
  /**
   * <pre>
   * Method parameter definition.
   * The key is the parameter index, starting from 0.
   * The value is the parameter matching type.
   * </pre>
   *
   * <code>map&lt;uint32, .envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
   */
  @java.lang.Override

  public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier getParamsMatchOrDefault(
      int key,
      io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier defaultValue) {
    
    java.util.Map<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier> map =
        internalGetParamsMatch().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Method parameter definition.
   * The key is the parameter index, starting from 0.
   * The value is the parameter matching type.
   * </pre>
   *
   * <code>map&lt;uint32, .envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
   */
  @java.lang.Override

  public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier getParamsMatchOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier> map =
        internalGetParamsMatch().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (name_ != null) {
      output.writeMessage(1, getName());
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetParamsMatch(),
        ParamsMatchDefaultEntryHolder.defaultEntry,
        2);
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (name_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getName());
    }
    for (java.util.Map.Entry<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier> entry
         : internalGetParamsMatch().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier>
      paramsMatch__ = ParamsMatchDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, paramsMatch__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch other = (io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch) obj;

    if (hasName() != other.hasName()) return false;
    if (hasName()) {
      if (!getName()
          .equals(other.getName())) return false;
    }
    if (!internalGetParamsMatch().equals(
        other.internalGetParamsMatch())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasName()) {
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
    }
    if (!internalGetParamsMatch().getMap().isEmpty()) {
      hash = (37 * hash) + PARAMS_MATCH_FIELD_NUMBER;
      hash = (53 * hash) + internalGetParamsMatch().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch)
      io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatchOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_MethodMatch_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetParamsMatch();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableParamsMatch();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_MethodMatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.class, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (nameBuilder_ == null) {
        name_ = null;
      } else {
        name_ = null;
        nameBuilder_ = null;
      }
      internalGetMutableParamsMatch().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.RouteProto.internal_static_envoy_extensions_filters_network_dubbo_proxy_v3_MethodMatch_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch build() {
      io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch buildPartial() {
      io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch result = new io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch(this);
      int from_bitField0_ = bitField0_;
      if (nameBuilder_ == null) {
        result.name_ = name_;
      } else {
        result.name_ = nameBuilder_.build();
      }
      result.paramsMatch_ = internalGetParamsMatch();
      result.paramsMatch_.makeImmutable();
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch other) {
      if (other == io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.getDefaultInstance()) return this;
      if (other.hasName()) {
        mergeName(other.getName());
      }
      internalGetMutableParamsMatch().mergeFrom(
          other.internalGetParamsMatch());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private io.envoyproxy.envoy.type.matcher.v3.StringMatcher name_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.StringMatcher, io.envoyproxy.envoy.type.matcher.v3.StringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.StringMatcherOrBuilder> nameBuilder_;
    /**
     * <pre>
     * The name of the method.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.StringMatcher name = 1;</code>
     * @return Whether the name field is set.
     */
    public boolean hasName() {
      return nameBuilder_ != null || name_ != null;
    }
    /**
     * <pre>
     * The name of the method.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.StringMatcher name = 1;</code>
     * @return The name.
     */
    public io.envoyproxy.envoy.type.matcher.v3.StringMatcher getName() {
      if (nameBuilder_ == null) {
        return name_ == null ? io.envoyproxy.envoy.type.matcher.v3.StringMatcher.getDefaultInstance() : name_;
      } else {
        return nameBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The name of the method.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.StringMatcher name = 1;</code>
     */
    public Builder setName(io.envoyproxy.envoy.type.matcher.v3.StringMatcher value) {
      if (nameBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        name_ = value;
        onChanged();
      } else {
        nameBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The name of the method.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.StringMatcher name = 1;</code>
     */
    public Builder setName(
        io.envoyproxy.envoy.type.matcher.v3.StringMatcher.Builder builderForValue) {
      if (nameBuilder_ == null) {
        name_ = builderForValue.build();
        onChanged();
      } else {
        nameBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The name of the method.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.StringMatcher name = 1;</code>
     */
    public Builder mergeName(io.envoyproxy.envoy.type.matcher.v3.StringMatcher value) {
      if (nameBuilder_ == null) {
        if (name_ != null) {
          name_ =
            io.envoyproxy.envoy.type.matcher.v3.StringMatcher.newBuilder(name_).mergeFrom(value).buildPartial();
        } else {
          name_ = value;
        }
        onChanged();
      } else {
        nameBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The name of the method.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.StringMatcher name = 1;</code>
     */
    public Builder clearName() {
      if (nameBuilder_ == null) {
        name_ = null;
        onChanged();
      } else {
        name_ = null;
        nameBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The name of the method.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.StringMatcher name = 1;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.StringMatcher.Builder getNameBuilder() {
      
      onChanged();
      return getNameFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The name of the method.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.StringMatcher name = 1;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.StringMatcherOrBuilder getNameOrBuilder() {
      if (nameBuilder_ != null) {
        return nameBuilder_.getMessageOrBuilder();
      } else {
        return name_ == null ?
            io.envoyproxy.envoy.type.matcher.v3.StringMatcher.getDefaultInstance() : name_;
      }
    }
    /**
     * <pre>
     * The name of the method.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.StringMatcher name = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.StringMatcher, io.envoyproxy.envoy.type.matcher.v3.StringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.StringMatcherOrBuilder> 
        getNameFieldBuilder() {
      if (nameBuilder_ == null) {
        nameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.v3.StringMatcher, io.envoyproxy.envoy.type.matcher.v3.StringMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.StringMatcherOrBuilder>(
                getName(),
                getParentForChildren(),
                isClean());
        name_ = null;
      }
      return nameBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier> paramsMatch_;
    private com.google.protobuf.MapField<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier>
    internalGetParamsMatch() {
      if (paramsMatch_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ParamsMatchDefaultEntryHolder.defaultEntry);
      }
      return paramsMatch_;
    }
    private com.google.protobuf.MapField<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier>
    internalGetMutableParamsMatch() {
      onChanged();;
      if (paramsMatch_ == null) {
        paramsMatch_ = com.google.protobuf.MapField.newMapField(
            ParamsMatchDefaultEntryHolder.defaultEntry);
      }
      if (!paramsMatch_.isMutable()) {
        paramsMatch_ = paramsMatch_.copy();
      }
      return paramsMatch_;
    }

    public int getParamsMatchCount() {
      return internalGetParamsMatch().getMap().size();
    }
    /**
     * <pre>
     * Method parameter definition.
     * The key is the parameter index, starting from 0.
     * The value is the parameter matching type.
     * </pre>
     *
     * <code>map&lt;uint32, .envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
     */

    @java.lang.Override
    public boolean containsParamsMatch(
        int key) {
      
      return internalGetParamsMatch().getMap().containsKey(key);
    }
    /**
     * Use {@link #getParamsMatchMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier> getParamsMatch() {
      return getParamsMatchMap();
    }
    /**
     * <pre>
     * Method parameter definition.
     * The key is the parameter index, starting from 0.
     * The value is the parameter matching type.
     * </pre>
     *
     * <code>map&lt;uint32, .envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier> getParamsMatchMap() {
      return internalGetParamsMatch().getMap();
    }
    /**
     * <pre>
     * Method parameter definition.
     * The key is the parameter index, starting from 0.
     * The value is the parameter matching type.
     * </pre>
     *
     * <code>map&lt;uint32, .envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
     */
    @java.lang.Override

    public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier getParamsMatchOrDefault(
        int key,
        io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier defaultValue) {
      
      java.util.Map<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier> map =
          internalGetParamsMatch().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Method parameter definition.
     * The key is the parameter index, starting from 0.
     * The value is the parameter matching type.
     * </pre>
     *
     * <code>map&lt;uint32, .envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
     */
    @java.lang.Override

    public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier getParamsMatchOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier> map =
          internalGetParamsMatch().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearParamsMatch() {
      internalGetMutableParamsMatch().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Method parameter definition.
     * The key is the parameter index, starting from 0.
     * The value is the parameter matching type.
     * </pre>
     *
     * <code>map&lt;uint32, .envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
     */

    public Builder removeParamsMatch(
        int key) {
      
      internalGetMutableParamsMatch().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier>
    getMutableParamsMatch() {
      return internalGetMutableParamsMatch().getMutableMap();
    }
    /**
     * <pre>
     * Method parameter definition.
     * The key is the parameter index, starting from 0.
     * The value is the parameter matching type.
     * </pre>
     *
     * <code>map&lt;uint32, .envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
     */
    public Builder putParamsMatch(
        int key,
        io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier value) {
      
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableParamsMatch().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Method parameter definition.
     * The key is the parameter index, starting from 0.
     * The value is the parameter matching type.
     * </pre>
     *
     * <code>map&lt;uint32, .envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier&gt; params_match = 2;</code>
     */

    public Builder putAllParamsMatch(
        java.util.Map<java.lang.Integer, io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch.ParameterMatchSpecifier> values) {
      internalGetMutableParamsMatch().getMutableMap()
          .putAll(values);
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch)
  private static final io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch();
  }

  public static io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MethodMatch>
      PARSER = new com.google.protobuf.AbstractParser<MethodMatch>() {
    @java.lang.Override
    public MethodMatch parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new MethodMatch(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<MethodMatch> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MethodMatch> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.network.dubbo_proxy.v3.MethodMatch getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

