// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/ext_authz/v3/ext_authz.proto

package io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3;

/**
 * <pre>
 * [#next-free-field: 15]
 * </pre>
 *
 * Protobuf type {@code envoy.extensions.filters.http.ext_authz.v3.ExtAuthz}
 */
public final class ExtAuthz extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.http.ext_authz.v3.ExtAuthz)
    ExtAuthzOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ExtAuthz.newBuilder() to construct.
  private ExtAuthz(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ExtAuthz() {
    transportApiVersion_ = 0;
    metadataContextNamespaces_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    statPrefix_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ExtAuthz();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ExtAuthz(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.envoyproxy.envoy.config.core.v3.GrpcService.Builder subBuilder = null;
            if (servicesCase_ == 1) {
              subBuilder = ((io.envoyproxy.envoy.config.core.v3.GrpcService) services_).toBuilder();
            }
            services_ =
                input.readMessage(io.envoyproxy.envoy.config.core.v3.GrpcService.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.envoyproxy.envoy.config.core.v3.GrpcService) services_);
              services_ = subBuilder.buildPartial();
            }
            servicesCase_ = 1;
            break;
          }
          case 16: {

            failureModeAllow_ = input.readBool();
            break;
          }
          case 26: {
            io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.Builder subBuilder = null;
            if (servicesCase_ == 3) {
              subBuilder = ((io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService) services_).toBuilder();
            }
            services_ =
                input.readMessage(io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService) services_);
              services_ = subBuilder.buildPartial();
            }
            servicesCase_ = 3;
            break;
          }
          case 42: {
            io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.Builder subBuilder = null;
            if (withRequestBody_ != null) {
              subBuilder = withRequestBody_.toBuilder();
            }
            withRequestBody_ = input.readMessage(io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(withRequestBody_);
              withRequestBody_ = subBuilder.buildPartial();
            }

            break;
          }
          case 48: {

            clearRouteCache_ = input.readBool();
            break;
          }
          case 58: {
            io.envoyproxy.envoy.type.v3.HttpStatus.Builder subBuilder = null;
            if (statusOnError_ != null) {
              subBuilder = statusOnError_.toBuilder();
            }
            statusOnError_ = input.readMessage(io.envoyproxy.envoy.type.v3.HttpStatus.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(statusOnError_);
              statusOnError_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              metadataContextNamespaces_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            metadataContextNamespaces_.add(s);
            break;
          }
          case 74: {
            io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.Builder subBuilder = null;
            if (filterEnabled_ != null) {
              subBuilder = filterEnabled_.toBuilder();
            }
            filterEnabled_ = input.readMessage(io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(filterEnabled_);
              filterEnabled_ = subBuilder.buildPartial();
            }

            break;
          }
          case 80: {

            includePeerCertificate_ = input.readBool();
            break;
          }
          case 90: {
            io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag.Builder subBuilder = null;
            if (denyAtDisable_ != null) {
              subBuilder = denyAtDisable_.toBuilder();
            }
            denyAtDisable_ = input.readMessage(io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(denyAtDisable_);
              denyAtDisable_ = subBuilder.buildPartial();
            }

            break;
          }
          case 96: {
            int rawValue = input.readEnum();

            transportApiVersion_ = rawValue;
            break;
          }
          case 106: {
            java.lang.String s = input.readStringRequireUtf8();

            statPrefix_ = s;
            break;
          }
          case 114: {
            io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher.Builder subBuilder = null;
            if (filterEnabledMetadata_ != null) {
              subBuilder = filterEnabledMetadata_.toBuilder();
            }
            filterEnabledMetadata_ = input.readMessage(io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(filterEnabledMetadata_);
              filterEnabledMetadata_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        metadataContextNamespaces_ = metadataContextNamespaces_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzProto.internal_static_envoy_extensions_filters_http_ext_authz_v3_ExtAuthz_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzProto.internal_static_envoy_extensions_filters_http_ext_authz_v3_ExtAuthz_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.class, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.Builder.class);
  }

  private int servicesCase_ = 0;
  private java.lang.Object services_;
  public enum ServicesCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    GRPC_SERVICE(1),
    HTTP_SERVICE(3),
    SERVICES_NOT_SET(0);
    private final int value;
    private ServicesCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ServicesCase valueOf(int value) {
      return forNumber(value);
    }

    public static ServicesCase forNumber(int value) {
      switch (value) {
        case 1: return GRPC_SERVICE;
        case 3: return HTTP_SERVICE;
        case 0: return SERVICES_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ServicesCase
  getServicesCase() {
    return ServicesCase.forNumber(
        servicesCase_);
  }

  public static final int GRPC_SERVICE_FIELD_NUMBER = 1;
  /**
   * <pre>
   * gRPC service configuration (default timeout: 200ms).
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
   * @return Whether the grpcService field is set.
   */
  @java.lang.Override
  public boolean hasGrpcService() {
    return servicesCase_ == 1;
  }
  /**
   * <pre>
   * gRPC service configuration (default timeout: 200ms).
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
   * @return The grpcService.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.GrpcService getGrpcService() {
    if (servicesCase_ == 1) {
       return (io.envoyproxy.envoy.config.core.v3.GrpcService) services_;
    }
    return io.envoyproxy.envoy.config.core.v3.GrpcService.getDefaultInstance();
  }
  /**
   * <pre>
   * gRPC service configuration (default timeout: 200ms).
   * </pre>
   *
   * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder getGrpcServiceOrBuilder() {
    if (servicesCase_ == 1) {
       return (io.envoyproxy.envoy.config.core.v3.GrpcService) services_;
    }
    return io.envoyproxy.envoy.config.core.v3.GrpcService.getDefaultInstance();
  }

  public static final int HTTP_SERVICE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * HTTP service configuration (default timeout: 200ms).
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_authz.v3.HttpService http_service = 3;</code>
   * @return Whether the httpService field is set.
   */
  @java.lang.Override
  public boolean hasHttpService() {
    return servicesCase_ == 3;
  }
  /**
   * <pre>
   * HTTP service configuration (default timeout: 200ms).
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_authz.v3.HttpService http_service = 3;</code>
   * @return The httpService.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService getHttpService() {
    if (servicesCase_ == 3) {
       return (io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService) services_;
    }
    return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.getDefaultInstance();
  }
  /**
   * <pre>
   * HTTP service configuration (default timeout: 200ms).
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_authz.v3.HttpService http_service = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpServiceOrBuilder getHttpServiceOrBuilder() {
    if (servicesCase_ == 3) {
       return (io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService) services_;
    }
    return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.getDefaultInstance();
  }

  public static final int TRANSPORT_API_VERSION_FIELD_NUMBER = 12;
  private int transportApiVersion_;
  /**
   * <pre>
   * API version for ext_authz transport protocol. This describes the ext_authz gRPC endpoint and
   * version of messages used on the wire.
   * </pre>
   *
   * <code>.envoy.config.core.v3.ApiVersion transport_api_version = 12 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for transportApiVersion.
   */
  @java.lang.Override public int getTransportApiVersionValue() {
    return transportApiVersion_;
  }
  /**
   * <pre>
   * API version for ext_authz transport protocol. This describes the ext_authz gRPC endpoint and
   * version of messages used on the wire.
   * </pre>
   *
   * <code>.envoy.config.core.v3.ApiVersion transport_api_version = 12 [(.validate.rules) = { ... }</code>
   * @return The transportApiVersion.
   */
  @java.lang.Override public io.envoyproxy.envoy.config.core.v3.ApiVersion getTransportApiVersion() {
    @SuppressWarnings("deprecation")
    io.envoyproxy.envoy.config.core.v3.ApiVersion result = io.envoyproxy.envoy.config.core.v3.ApiVersion.valueOf(transportApiVersion_);
    return result == null ? io.envoyproxy.envoy.config.core.v3.ApiVersion.UNRECOGNIZED : result;
  }

  public static final int FAILURE_MODE_ALLOW_FIELD_NUMBER = 2;
  private boolean failureModeAllow_;
  /**
   * <pre>
   *  Changes filter's behaviour on errors:
   *  1. When set to true, the filter will *accept* client request even if the communication with
   *  the authorization service has failed, or if the authorization service has returned a HTTP 5xx
   *  error.
   *  2. When set to false, ext-authz will *reject* client requests and return a *Forbidden*
   *  response if the communication with the authorization service has failed, or if the
   *  authorization service has returned a HTTP 5xx error.
   * Note that errors can be *always* tracked in the :ref:`stats
   * &lt;config_http_filters_ext_authz_stats&gt;`.
   * </pre>
   *
   * <code>bool failure_mode_allow = 2;</code>
   * @return The failureModeAllow.
   */
  @java.lang.Override
  public boolean getFailureModeAllow() {
    return failureModeAllow_;
  }

  public static final int WITH_REQUEST_BODY_FIELD_NUMBER = 5;
  private io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings withRequestBody_;
  /**
   * <pre>
   * Enables filter to buffer the client request body and send it within the authorization request.
   * A ``x-envoy-auth-partial-body: false|true`` metadata header will be added to the authorization
   * request message indicating if the body data is partial.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_authz.v3.BufferSettings with_request_body = 5;</code>
   * @return Whether the withRequestBody field is set.
   */
  @java.lang.Override
  public boolean hasWithRequestBody() {
    return withRequestBody_ != null;
  }
  /**
   * <pre>
   * Enables filter to buffer the client request body and send it within the authorization request.
   * A ``x-envoy-auth-partial-body: false|true`` metadata header will be added to the authorization
   * request message indicating if the body data is partial.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_authz.v3.BufferSettings with_request_body = 5;</code>
   * @return The withRequestBody.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings getWithRequestBody() {
    return withRequestBody_ == null ? io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.getDefaultInstance() : withRequestBody_;
  }
  /**
   * <pre>
   * Enables filter to buffer the client request body and send it within the authorization request.
   * A ``x-envoy-auth-partial-body: false|true`` metadata header will be added to the authorization
   * request message indicating if the body data is partial.
   * </pre>
   *
   * <code>.envoy.extensions.filters.http.ext_authz.v3.BufferSettings with_request_body = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettingsOrBuilder getWithRequestBodyOrBuilder() {
    return getWithRequestBody();
  }

  public static final int CLEAR_ROUTE_CACHE_FIELD_NUMBER = 6;
  private boolean clearRouteCache_;
  /**
   * <pre>
   * Clears route cache in order to allow the external authorization service to correctly affect
   * routing decisions. Filter clears all cached routes when:
   * 1. The field is set to *true*.
   * 2. The status returned from the authorization service is a HTTP 200 or gRPC 0.
   * 3. At least one *authorization response header* is added to the client request, or is used for
   * altering another client request header.
   * </pre>
   *
   * <code>bool clear_route_cache = 6;</code>
   * @return The clearRouteCache.
   */
  @java.lang.Override
  public boolean getClearRouteCache() {
    return clearRouteCache_;
  }

  public static final int STATUS_ON_ERROR_FIELD_NUMBER = 7;
  private io.envoyproxy.envoy.type.v3.HttpStatus statusOnError_;
  /**
   * <pre>
   * Sets the HTTP status that is returned to the client when there is a network error between the
   * filter and the authorization server. The default status is HTTP 403 Forbidden.
   * </pre>
   *
   * <code>.envoy.type.v3.HttpStatus status_on_error = 7;</code>
   * @return Whether the statusOnError field is set.
   */
  @java.lang.Override
  public boolean hasStatusOnError() {
    return statusOnError_ != null;
  }
  /**
   * <pre>
   * Sets the HTTP status that is returned to the client when there is a network error between the
   * filter and the authorization server. The default status is HTTP 403 Forbidden.
   * </pre>
   *
   * <code>.envoy.type.v3.HttpStatus status_on_error = 7;</code>
   * @return The statusOnError.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.v3.HttpStatus getStatusOnError() {
    return statusOnError_ == null ? io.envoyproxy.envoy.type.v3.HttpStatus.getDefaultInstance() : statusOnError_;
  }
  /**
   * <pre>
   * Sets the HTTP status that is returned to the client when there is a network error between the
   * filter and the authorization server. The default status is HTTP 403 Forbidden.
   * </pre>
   *
   * <code>.envoy.type.v3.HttpStatus status_on_error = 7;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.v3.HttpStatusOrBuilder getStatusOnErrorOrBuilder() {
    return getStatusOnError();
  }

  public static final int METADATA_CONTEXT_NAMESPACES_FIELD_NUMBER = 8;
  private com.google.protobuf.LazyStringList metadataContextNamespaces_;
  /**
   * <pre>
   * Specifies a list of metadata namespaces whose values, if present, will be passed to the
   * ext_authz service as an opaque *protobuf::Struct*.
   * For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata
   * &lt;envoy_api_field_extensions.filters.http.jwt_authn.v3.JwtProvider.payload_in_metadata&gt;` is set,
   * then the following will pass the jwt payload to the authorization server.
   * .. code-block:: yaml
   *    metadata_context_namespaces:
   *    - envoy.filters.http.jwt_authn
   * </pre>
   *
   * <code>repeated string metadata_context_namespaces = 8;</code>
   * @return A list containing the metadataContextNamespaces.
   */
  public com.google.protobuf.ProtocolStringList
      getMetadataContextNamespacesList() {
    return metadataContextNamespaces_;
  }
  /**
   * <pre>
   * Specifies a list of metadata namespaces whose values, if present, will be passed to the
   * ext_authz service as an opaque *protobuf::Struct*.
   * For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata
   * &lt;envoy_api_field_extensions.filters.http.jwt_authn.v3.JwtProvider.payload_in_metadata&gt;` is set,
   * then the following will pass the jwt payload to the authorization server.
   * .. code-block:: yaml
   *    metadata_context_namespaces:
   *    - envoy.filters.http.jwt_authn
   * </pre>
   *
   * <code>repeated string metadata_context_namespaces = 8;</code>
   * @return The count of metadataContextNamespaces.
   */
  public int getMetadataContextNamespacesCount() {
    return metadataContextNamespaces_.size();
  }
  /**
   * <pre>
   * Specifies a list of metadata namespaces whose values, if present, will be passed to the
   * ext_authz service as an opaque *protobuf::Struct*.
   * For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata
   * &lt;envoy_api_field_extensions.filters.http.jwt_authn.v3.JwtProvider.payload_in_metadata&gt;` is set,
   * then the following will pass the jwt payload to the authorization server.
   * .. code-block:: yaml
   *    metadata_context_namespaces:
   *    - envoy.filters.http.jwt_authn
   * </pre>
   *
   * <code>repeated string metadata_context_namespaces = 8;</code>
   * @param index The index of the element to return.
   * @return The metadataContextNamespaces at the given index.
   */
  public java.lang.String getMetadataContextNamespaces(int index) {
    return metadataContextNamespaces_.get(index);
  }
  /**
   * <pre>
   * Specifies a list of metadata namespaces whose values, if present, will be passed to the
   * ext_authz service as an opaque *protobuf::Struct*.
   * For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata
   * &lt;envoy_api_field_extensions.filters.http.jwt_authn.v3.JwtProvider.payload_in_metadata&gt;` is set,
   * then the following will pass the jwt payload to the authorization server.
   * .. code-block:: yaml
   *    metadata_context_namespaces:
   *    - envoy.filters.http.jwt_authn
   * </pre>
   *
   * <code>repeated string metadata_context_namespaces = 8;</code>
   * @param index The index of the value to return.
   * @return The bytes of the metadataContextNamespaces at the given index.
   */
  public com.google.protobuf.ByteString
      getMetadataContextNamespacesBytes(int index) {
    return metadataContextNamespaces_.getByteString(index);
  }

  public static final int FILTER_ENABLED_FIELD_NUMBER = 9;
  private io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent filterEnabled_;
  /**
   * <pre>
   * Specifies if the filter is enabled.
   * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key&gt;` is specified,
   * Envoy will lookup the runtime key to get the percentage of requests to filter.
   * If this field is not specified, the filter will be enabled for all requests.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;</code>
   * @return Whether the filterEnabled field is set.
   */
  @java.lang.Override
  public boolean hasFilterEnabled() {
    return filterEnabled_ != null;
  }
  /**
   * <pre>
   * Specifies if the filter is enabled.
   * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key&gt;` is specified,
   * Envoy will lookup the runtime key to get the percentage of requests to filter.
   * If this field is not specified, the filter will be enabled for all requests.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;</code>
   * @return The filterEnabled.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent getFilterEnabled() {
    return filterEnabled_ == null ? io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.getDefaultInstance() : filterEnabled_;
  }
  /**
   * <pre>
   * Specifies if the filter is enabled.
   * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key&gt;` is specified,
   * Envoy will lookup the runtime key to get the percentage of requests to filter.
   * If this field is not specified, the filter will be enabled for all requests.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercentOrBuilder getFilterEnabledOrBuilder() {
    return getFilterEnabled();
  }

  public static final int FILTER_ENABLED_METADATA_FIELD_NUMBER = 14;
  private io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher filterEnabledMetadata_;
  /**
   * <pre>
   * Specifies if the filter is enabled with metadata matcher.
   * If this field is not specified, the filter will be enabled for all requests.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;</code>
   * @return Whether the filterEnabledMetadata field is set.
   */
  @java.lang.Override
  public boolean hasFilterEnabledMetadata() {
    return filterEnabledMetadata_ != null;
  }
  /**
   * <pre>
   * Specifies if the filter is enabled with metadata matcher.
   * If this field is not specified, the filter will be enabled for all requests.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;</code>
   * @return The filterEnabledMetadata.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher getFilterEnabledMetadata() {
    return filterEnabledMetadata_ == null ? io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher.getDefaultInstance() : filterEnabledMetadata_;
  }
  /**
   * <pre>
   * Specifies if the filter is enabled with metadata matcher.
   * If this field is not specified, the filter will be enabled for all requests.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.MetadataMatcherOrBuilder getFilterEnabledMetadataOrBuilder() {
    return getFilterEnabledMetadata();
  }

  public static final int DENY_AT_DISABLE_FIELD_NUMBER = 11;
  private io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag denyAtDisable_;
  /**
   * <pre>
   * Specifies whether to deny the requests, when the filter is disabled.
   * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFeatureFlag.runtime_key&gt;` is specified,
   * Envoy will lookup the runtime key to determine whether to deny request for
   * filter protected path at filter disabling. If filter is disabled in
   * typed_per_filter_config for the path, requests will not be denied.
   * If this field is not specified, all requests will be allowed when disabled.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;</code>
   * @return Whether the denyAtDisable field is set.
   */
  @java.lang.Override
  public boolean hasDenyAtDisable() {
    return denyAtDisable_ != null;
  }
  /**
   * <pre>
   * Specifies whether to deny the requests, when the filter is disabled.
   * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFeatureFlag.runtime_key&gt;` is specified,
   * Envoy will lookup the runtime key to determine whether to deny request for
   * filter protected path at filter disabling. If filter is disabled in
   * typed_per_filter_config for the path, requests will not be denied.
   * If this field is not specified, all requests will be allowed when disabled.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;</code>
   * @return The denyAtDisable.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag getDenyAtDisable() {
    return denyAtDisable_ == null ? io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag.getDefaultInstance() : denyAtDisable_;
  }
  /**
   * <pre>
   * Specifies whether to deny the requests, when the filter is disabled.
   * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFeatureFlag.runtime_key&gt;` is specified,
   * Envoy will lookup the runtime key to determine whether to deny request for
   * filter protected path at filter disabling. If filter is disabled in
   * typed_per_filter_config for the path, requests will not be denied.
   * If this field is not specified, all requests will be allowed when disabled.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlagOrBuilder getDenyAtDisableOrBuilder() {
    return getDenyAtDisable();
  }

  public static final int INCLUDE_PEER_CERTIFICATE_FIELD_NUMBER = 10;
  private boolean includePeerCertificate_;
  /**
   * <pre>
   * Specifies if the peer certificate is sent to the external service.
   * When this field is true, Envoy will include the peer X.509 certificate, if available, in the
   * :ref:`certificate&lt;envoy_api_field_service.auth.v3.AttributeContext.Peer.certificate&gt;`.
   * </pre>
   *
   * <code>bool include_peer_certificate = 10;</code>
   * @return The includePeerCertificate.
   */
  @java.lang.Override
  public boolean getIncludePeerCertificate() {
    return includePeerCertificate_;
  }

  public static final int STAT_PREFIX_FIELD_NUMBER = 13;
  private volatile java.lang.Object statPrefix_;
  /**
   * <pre>
   * Optional additional prefix to use when emitting statistics. This allows to distinguish
   * emitted statistics between configured *ext_authz* filters in an HTTP filter chain. For example:
   * .. code-block:: yaml
   *   http_filters:
   *     - name: envoy.filters.http.ext_authz
   *       typed_config:
   *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
   *         stat_prefix: waf # This emits ext_authz.waf.ok, ext_authz.waf.denied, etc.
   *     - name: envoy.filters.http.ext_authz
   *       typed_config:
   *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
   *         stat_prefix: blocker # This emits ext_authz.blocker.ok, ext_authz.blocker.denied, etc.
   * </pre>
   *
   * <code>string stat_prefix = 13;</code>
   * @return The statPrefix.
   */
  @java.lang.Override
  public java.lang.String getStatPrefix() {
    java.lang.Object ref = statPrefix_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      statPrefix_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional additional prefix to use when emitting statistics. This allows to distinguish
   * emitted statistics between configured *ext_authz* filters in an HTTP filter chain. For example:
   * .. code-block:: yaml
   *   http_filters:
   *     - name: envoy.filters.http.ext_authz
   *       typed_config:
   *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
   *         stat_prefix: waf # This emits ext_authz.waf.ok, ext_authz.waf.denied, etc.
   *     - name: envoy.filters.http.ext_authz
   *       typed_config:
   *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
   *         stat_prefix: blocker # This emits ext_authz.blocker.ok, ext_authz.blocker.denied, etc.
   * </pre>
   *
   * <code>string stat_prefix = 13;</code>
   * @return The bytes for statPrefix.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStatPrefixBytes() {
    java.lang.Object ref = statPrefix_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      statPrefix_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (servicesCase_ == 1) {
      output.writeMessage(1, (io.envoyproxy.envoy.config.core.v3.GrpcService) services_);
    }
    if (failureModeAllow_ != false) {
      output.writeBool(2, failureModeAllow_);
    }
    if (servicesCase_ == 3) {
      output.writeMessage(3, (io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService) services_);
    }
    if (withRequestBody_ != null) {
      output.writeMessage(5, getWithRequestBody());
    }
    if (clearRouteCache_ != false) {
      output.writeBool(6, clearRouteCache_);
    }
    if (statusOnError_ != null) {
      output.writeMessage(7, getStatusOnError());
    }
    for (int i = 0; i < metadataContextNamespaces_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, metadataContextNamespaces_.getRaw(i));
    }
    if (filterEnabled_ != null) {
      output.writeMessage(9, getFilterEnabled());
    }
    if (includePeerCertificate_ != false) {
      output.writeBool(10, includePeerCertificate_);
    }
    if (denyAtDisable_ != null) {
      output.writeMessage(11, getDenyAtDisable());
    }
    if (transportApiVersion_ != io.envoyproxy.envoy.config.core.v3.ApiVersion.AUTO.getNumber()) {
      output.writeEnum(12, transportApiVersion_);
    }
    if (!getStatPrefixBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 13, statPrefix_);
    }
    if (filterEnabledMetadata_ != null) {
      output.writeMessage(14, getFilterEnabledMetadata());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (servicesCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (io.envoyproxy.envoy.config.core.v3.GrpcService) services_);
    }
    if (failureModeAllow_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, failureModeAllow_);
    }
    if (servicesCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService) services_);
    }
    if (withRequestBody_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getWithRequestBody());
    }
    if (clearRouteCache_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, clearRouteCache_);
    }
    if (statusOnError_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getStatusOnError());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < metadataContextNamespaces_.size(); i++) {
        dataSize += computeStringSizeNoTag(metadataContextNamespaces_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getMetadataContextNamespacesList().size();
    }
    if (filterEnabled_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getFilterEnabled());
    }
    if (includePeerCertificate_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, includePeerCertificate_);
    }
    if (denyAtDisable_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getDenyAtDisable());
    }
    if (transportApiVersion_ != io.envoyproxy.envoy.config.core.v3.ApiVersion.AUTO.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(12, transportApiVersion_);
    }
    if (!getStatPrefixBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, statPrefix_);
    }
    if (filterEnabledMetadata_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, getFilterEnabledMetadata());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz other = (io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz) obj;

    if (transportApiVersion_ != other.transportApiVersion_) return false;
    if (getFailureModeAllow()
        != other.getFailureModeAllow()) return false;
    if (hasWithRequestBody() != other.hasWithRequestBody()) return false;
    if (hasWithRequestBody()) {
      if (!getWithRequestBody()
          .equals(other.getWithRequestBody())) return false;
    }
    if (getClearRouteCache()
        != other.getClearRouteCache()) return false;
    if (hasStatusOnError() != other.hasStatusOnError()) return false;
    if (hasStatusOnError()) {
      if (!getStatusOnError()
          .equals(other.getStatusOnError())) return false;
    }
    if (!getMetadataContextNamespacesList()
        .equals(other.getMetadataContextNamespacesList())) return false;
    if (hasFilterEnabled() != other.hasFilterEnabled()) return false;
    if (hasFilterEnabled()) {
      if (!getFilterEnabled()
          .equals(other.getFilterEnabled())) return false;
    }
    if (hasFilterEnabledMetadata() != other.hasFilterEnabledMetadata()) return false;
    if (hasFilterEnabledMetadata()) {
      if (!getFilterEnabledMetadata()
          .equals(other.getFilterEnabledMetadata())) return false;
    }
    if (hasDenyAtDisable() != other.hasDenyAtDisable()) return false;
    if (hasDenyAtDisable()) {
      if (!getDenyAtDisable()
          .equals(other.getDenyAtDisable())) return false;
    }
    if (getIncludePeerCertificate()
        != other.getIncludePeerCertificate()) return false;
    if (!getStatPrefix()
        .equals(other.getStatPrefix())) return false;
    if (!getServicesCase().equals(other.getServicesCase())) return false;
    switch (servicesCase_) {
      case 1:
        if (!getGrpcService()
            .equals(other.getGrpcService())) return false;
        break;
      case 3:
        if (!getHttpService()
            .equals(other.getHttpService())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TRANSPORT_API_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + transportApiVersion_;
    hash = (37 * hash) + FAILURE_MODE_ALLOW_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFailureModeAllow());
    if (hasWithRequestBody()) {
      hash = (37 * hash) + WITH_REQUEST_BODY_FIELD_NUMBER;
      hash = (53 * hash) + getWithRequestBody().hashCode();
    }
    hash = (37 * hash) + CLEAR_ROUTE_CACHE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getClearRouteCache());
    if (hasStatusOnError()) {
      hash = (37 * hash) + STATUS_ON_ERROR_FIELD_NUMBER;
      hash = (53 * hash) + getStatusOnError().hashCode();
    }
    if (getMetadataContextNamespacesCount() > 0) {
      hash = (37 * hash) + METADATA_CONTEXT_NAMESPACES_FIELD_NUMBER;
      hash = (53 * hash) + getMetadataContextNamespacesList().hashCode();
    }
    if (hasFilterEnabled()) {
      hash = (37 * hash) + FILTER_ENABLED_FIELD_NUMBER;
      hash = (53 * hash) + getFilterEnabled().hashCode();
    }
    if (hasFilterEnabledMetadata()) {
      hash = (37 * hash) + FILTER_ENABLED_METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getFilterEnabledMetadata().hashCode();
    }
    if (hasDenyAtDisable()) {
      hash = (37 * hash) + DENY_AT_DISABLE_FIELD_NUMBER;
      hash = (53 * hash) + getDenyAtDisable().hashCode();
    }
    hash = (37 * hash) + INCLUDE_PEER_CERTIFICATE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIncludePeerCertificate());
    hash = (37 * hash) + STAT_PREFIX_FIELD_NUMBER;
    hash = (53 * hash) + getStatPrefix().hashCode();
    switch (servicesCase_) {
      case 1:
        hash = (37 * hash) + GRPC_SERVICE_FIELD_NUMBER;
        hash = (53 * hash) + getGrpcService().hashCode();
        break;
      case 3:
        hash = (37 * hash) + HTTP_SERVICE_FIELD_NUMBER;
        hash = (53 * hash) + getHttpService().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * [#next-free-field: 15]
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.http.ext_authz.v3.ExtAuthz}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.http.ext_authz.v3.ExtAuthz)
      io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzProto.internal_static_envoy_extensions_filters_http_ext_authz_v3_ExtAuthz_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzProto.internal_static_envoy_extensions_filters_http_ext_authz_v3_ExtAuthz_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.class, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      transportApiVersion_ = 0;

      failureModeAllow_ = false;

      if (withRequestBodyBuilder_ == null) {
        withRequestBody_ = null;
      } else {
        withRequestBody_ = null;
        withRequestBodyBuilder_ = null;
      }
      clearRouteCache_ = false;

      if (statusOnErrorBuilder_ == null) {
        statusOnError_ = null;
      } else {
        statusOnError_ = null;
        statusOnErrorBuilder_ = null;
      }
      metadataContextNamespaces_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (filterEnabledBuilder_ == null) {
        filterEnabled_ = null;
      } else {
        filterEnabled_ = null;
        filterEnabledBuilder_ = null;
      }
      if (filterEnabledMetadataBuilder_ == null) {
        filterEnabledMetadata_ = null;
      } else {
        filterEnabledMetadata_ = null;
        filterEnabledMetadataBuilder_ = null;
      }
      if (denyAtDisableBuilder_ == null) {
        denyAtDisable_ = null;
      } else {
        denyAtDisable_ = null;
        denyAtDisableBuilder_ = null;
      }
      includePeerCertificate_ = false;

      statPrefix_ = "";

      servicesCase_ = 0;
      services_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthzProto.internal_static_envoy_extensions_filters_http_ext_authz_v3_ExtAuthz_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz build() {
      io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz buildPartial() {
      io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz result = new io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz(this);
      int from_bitField0_ = bitField0_;
      if (servicesCase_ == 1) {
        if (grpcServiceBuilder_ == null) {
          result.services_ = services_;
        } else {
          result.services_ = grpcServiceBuilder_.build();
        }
      }
      if (servicesCase_ == 3) {
        if (httpServiceBuilder_ == null) {
          result.services_ = services_;
        } else {
          result.services_ = httpServiceBuilder_.build();
        }
      }
      result.transportApiVersion_ = transportApiVersion_;
      result.failureModeAllow_ = failureModeAllow_;
      if (withRequestBodyBuilder_ == null) {
        result.withRequestBody_ = withRequestBody_;
      } else {
        result.withRequestBody_ = withRequestBodyBuilder_.build();
      }
      result.clearRouteCache_ = clearRouteCache_;
      if (statusOnErrorBuilder_ == null) {
        result.statusOnError_ = statusOnError_;
      } else {
        result.statusOnError_ = statusOnErrorBuilder_.build();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        metadataContextNamespaces_ = metadataContextNamespaces_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.metadataContextNamespaces_ = metadataContextNamespaces_;
      if (filterEnabledBuilder_ == null) {
        result.filterEnabled_ = filterEnabled_;
      } else {
        result.filterEnabled_ = filterEnabledBuilder_.build();
      }
      if (filterEnabledMetadataBuilder_ == null) {
        result.filterEnabledMetadata_ = filterEnabledMetadata_;
      } else {
        result.filterEnabledMetadata_ = filterEnabledMetadataBuilder_.build();
      }
      if (denyAtDisableBuilder_ == null) {
        result.denyAtDisable_ = denyAtDisable_;
      } else {
        result.denyAtDisable_ = denyAtDisableBuilder_.build();
      }
      result.includePeerCertificate_ = includePeerCertificate_;
      result.statPrefix_ = statPrefix_;
      result.servicesCase_ = servicesCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz other) {
      if (other == io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz.getDefaultInstance()) return this;
      if (other.transportApiVersion_ != 0) {
        setTransportApiVersionValue(other.getTransportApiVersionValue());
      }
      if (other.getFailureModeAllow() != false) {
        setFailureModeAllow(other.getFailureModeAllow());
      }
      if (other.hasWithRequestBody()) {
        mergeWithRequestBody(other.getWithRequestBody());
      }
      if (other.getClearRouteCache() != false) {
        setClearRouteCache(other.getClearRouteCache());
      }
      if (other.hasStatusOnError()) {
        mergeStatusOnError(other.getStatusOnError());
      }
      if (!other.metadataContextNamespaces_.isEmpty()) {
        if (metadataContextNamespaces_.isEmpty()) {
          metadataContextNamespaces_ = other.metadataContextNamespaces_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureMetadataContextNamespacesIsMutable();
          metadataContextNamespaces_.addAll(other.metadataContextNamespaces_);
        }
        onChanged();
      }
      if (other.hasFilterEnabled()) {
        mergeFilterEnabled(other.getFilterEnabled());
      }
      if (other.hasFilterEnabledMetadata()) {
        mergeFilterEnabledMetadata(other.getFilterEnabledMetadata());
      }
      if (other.hasDenyAtDisable()) {
        mergeDenyAtDisable(other.getDenyAtDisable());
      }
      if (other.getIncludePeerCertificate() != false) {
        setIncludePeerCertificate(other.getIncludePeerCertificate());
      }
      if (!other.getStatPrefix().isEmpty()) {
        statPrefix_ = other.statPrefix_;
        onChanged();
      }
      switch (other.getServicesCase()) {
        case GRPC_SERVICE: {
          mergeGrpcService(other.getGrpcService());
          break;
        }
        case HTTP_SERVICE: {
          mergeHttpService(other.getHttpService());
          break;
        }
        case SERVICES_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int servicesCase_ = 0;
    private java.lang.Object services_;
    public ServicesCase
        getServicesCase() {
      return ServicesCase.forNumber(
          servicesCase_);
    }

    public Builder clearServices() {
      servicesCase_ = 0;
      services_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.GrpcService, io.envoyproxy.envoy.config.core.v3.GrpcService.Builder, io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder> grpcServiceBuilder_;
    /**
     * <pre>
     * gRPC service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     * @return Whether the grpcService field is set.
     */
    @java.lang.Override
    public boolean hasGrpcService() {
      return servicesCase_ == 1;
    }
    /**
     * <pre>
     * gRPC service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     * @return The grpcService.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.core.v3.GrpcService getGrpcService() {
      if (grpcServiceBuilder_ == null) {
        if (servicesCase_ == 1) {
          return (io.envoyproxy.envoy.config.core.v3.GrpcService) services_;
        }
        return io.envoyproxy.envoy.config.core.v3.GrpcService.getDefaultInstance();
      } else {
        if (servicesCase_ == 1) {
          return grpcServiceBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.config.core.v3.GrpcService.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * gRPC service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    public Builder setGrpcService(io.envoyproxy.envoy.config.core.v3.GrpcService value) {
      if (grpcServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        services_ = value;
        onChanged();
      } else {
        grpcServiceBuilder_.setMessage(value);
      }
      servicesCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * gRPC service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    public Builder setGrpcService(
        io.envoyproxy.envoy.config.core.v3.GrpcService.Builder builderForValue) {
      if (grpcServiceBuilder_ == null) {
        services_ = builderForValue.build();
        onChanged();
      } else {
        grpcServiceBuilder_.setMessage(builderForValue.build());
      }
      servicesCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * gRPC service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    public Builder mergeGrpcService(io.envoyproxy.envoy.config.core.v3.GrpcService value) {
      if (grpcServiceBuilder_ == null) {
        if (servicesCase_ == 1 &&
            services_ != io.envoyproxy.envoy.config.core.v3.GrpcService.getDefaultInstance()) {
          services_ = io.envoyproxy.envoy.config.core.v3.GrpcService.newBuilder((io.envoyproxy.envoy.config.core.v3.GrpcService) services_)
              .mergeFrom(value).buildPartial();
        } else {
          services_ = value;
        }
        onChanged();
      } else {
        if (servicesCase_ == 1) {
          grpcServiceBuilder_.mergeFrom(value);
        }
        grpcServiceBuilder_.setMessage(value);
      }
      servicesCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * gRPC service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    public Builder clearGrpcService() {
      if (grpcServiceBuilder_ == null) {
        if (servicesCase_ == 1) {
          servicesCase_ = 0;
          services_ = null;
          onChanged();
        }
      } else {
        if (servicesCase_ == 1) {
          servicesCase_ = 0;
          services_ = null;
        }
        grpcServiceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * gRPC service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.GrpcService.Builder getGrpcServiceBuilder() {
      return getGrpcServiceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * gRPC service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder getGrpcServiceOrBuilder() {
      if ((servicesCase_ == 1) && (grpcServiceBuilder_ != null)) {
        return grpcServiceBuilder_.getMessageOrBuilder();
      } else {
        if (servicesCase_ == 1) {
          return (io.envoyproxy.envoy.config.core.v3.GrpcService) services_;
        }
        return io.envoyproxy.envoy.config.core.v3.GrpcService.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * gRPC service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.config.core.v3.GrpcService grpc_service = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.GrpcService, io.envoyproxy.envoy.config.core.v3.GrpcService.Builder, io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder> 
        getGrpcServiceFieldBuilder() {
      if (grpcServiceBuilder_ == null) {
        if (!(servicesCase_ == 1)) {
          services_ = io.envoyproxy.envoy.config.core.v3.GrpcService.getDefaultInstance();
        }
        grpcServiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.GrpcService, io.envoyproxy.envoy.config.core.v3.GrpcService.Builder, io.envoyproxy.envoy.config.core.v3.GrpcServiceOrBuilder>(
                (io.envoyproxy.envoy.config.core.v3.GrpcService) services_,
                getParentForChildren(),
                isClean());
        services_ = null;
      }
      servicesCase_ = 1;
      onChanged();;
      return grpcServiceBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.Builder, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpServiceOrBuilder> httpServiceBuilder_;
    /**
     * <pre>
     * HTTP service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.HttpService http_service = 3;</code>
     * @return Whether the httpService field is set.
     */
    @java.lang.Override
    public boolean hasHttpService() {
      return servicesCase_ == 3;
    }
    /**
     * <pre>
     * HTTP service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.HttpService http_service = 3;</code>
     * @return The httpService.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService getHttpService() {
      if (httpServiceBuilder_ == null) {
        if (servicesCase_ == 3) {
          return (io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService) services_;
        }
        return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.getDefaultInstance();
      } else {
        if (servicesCase_ == 3) {
          return httpServiceBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * HTTP service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.HttpService http_service = 3;</code>
     */
    public Builder setHttpService(io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService value) {
      if (httpServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        services_ = value;
        onChanged();
      } else {
        httpServiceBuilder_.setMessage(value);
      }
      servicesCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * HTTP service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.HttpService http_service = 3;</code>
     */
    public Builder setHttpService(
        io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.Builder builderForValue) {
      if (httpServiceBuilder_ == null) {
        services_ = builderForValue.build();
        onChanged();
      } else {
        httpServiceBuilder_.setMessage(builderForValue.build());
      }
      servicesCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * HTTP service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.HttpService http_service = 3;</code>
     */
    public Builder mergeHttpService(io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService value) {
      if (httpServiceBuilder_ == null) {
        if (servicesCase_ == 3 &&
            services_ != io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.getDefaultInstance()) {
          services_ = io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.newBuilder((io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService) services_)
              .mergeFrom(value).buildPartial();
        } else {
          services_ = value;
        }
        onChanged();
      } else {
        if (servicesCase_ == 3) {
          httpServiceBuilder_.mergeFrom(value);
        }
        httpServiceBuilder_.setMessage(value);
      }
      servicesCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * HTTP service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.HttpService http_service = 3;</code>
     */
    public Builder clearHttpService() {
      if (httpServiceBuilder_ == null) {
        if (servicesCase_ == 3) {
          servicesCase_ = 0;
          services_ = null;
          onChanged();
        }
      } else {
        if (servicesCase_ == 3) {
          servicesCase_ = 0;
          services_ = null;
        }
        httpServiceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * HTTP service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.HttpService http_service = 3;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.Builder getHttpServiceBuilder() {
      return getHttpServiceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * HTTP service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.HttpService http_service = 3;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpServiceOrBuilder getHttpServiceOrBuilder() {
      if ((servicesCase_ == 3) && (httpServiceBuilder_ != null)) {
        return httpServiceBuilder_.getMessageOrBuilder();
      } else {
        if (servicesCase_ == 3) {
          return (io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService) services_;
        }
        return io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * HTTP service configuration (default timeout: 200ms).
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.HttpService http_service = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.Builder, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpServiceOrBuilder> 
        getHttpServiceFieldBuilder() {
      if (httpServiceBuilder_ == null) {
        if (!(servicesCase_ == 3)) {
          services_ = io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.getDefaultInstance();
        }
        httpServiceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService.Builder, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpServiceOrBuilder>(
                (io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.HttpService) services_,
                getParentForChildren(),
                isClean());
        services_ = null;
      }
      servicesCase_ = 3;
      onChanged();;
      return httpServiceBuilder_;
    }

    private int transportApiVersion_ = 0;
    /**
     * <pre>
     * API version for ext_authz transport protocol. This describes the ext_authz gRPC endpoint and
     * version of messages used on the wire.
     * </pre>
     *
     * <code>.envoy.config.core.v3.ApiVersion transport_api_version = 12 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for transportApiVersion.
     */
    @java.lang.Override public int getTransportApiVersionValue() {
      return transportApiVersion_;
    }
    /**
     * <pre>
     * API version for ext_authz transport protocol. This describes the ext_authz gRPC endpoint and
     * version of messages used on the wire.
     * </pre>
     *
     * <code>.envoy.config.core.v3.ApiVersion transport_api_version = 12 [(.validate.rules) = { ... }</code>
     * @param value The enum numeric value on the wire for transportApiVersion to set.
     * @return This builder for chaining.
     */
    public Builder setTransportApiVersionValue(int value) {
      
      transportApiVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * API version for ext_authz transport protocol. This describes the ext_authz gRPC endpoint and
     * version of messages used on the wire.
     * </pre>
     *
     * <code>.envoy.config.core.v3.ApiVersion transport_api_version = 12 [(.validate.rules) = { ... }</code>
     * @return The transportApiVersion.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.core.v3.ApiVersion getTransportApiVersion() {
      @SuppressWarnings("deprecation")
      io.envoyproxy.envoy.config.core.v3.ApiVersion result = io.envoyproxy.envoy.config.core.v3.ApiVersion.valueOf(transportApiVersion_);
      return result == null ? io.envoyproxy.envoy.config.core.v3.ApiVersion.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * API version for ext_authz transport protocol. This describes the ext_authz gRPC endpoint and
     * version of messages used on the wire.
     * </pre>
     *
     * <code>.envoy.config.core.v3.ApiVersion transport_api_version = 12 [(.validate.rules) = { ... }</code>
     * @param value The transportApiVersion to set.
     * @return This builder for chaining.
     */
    public Builder setTransportApiVersion(io.envoyproxy.envoy.config.core.v3.ApiVersion value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      transportApiVersion_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * API version for ext_authz transport protocol. This describes the ext_authz gRPC endpoint and
     * version of messages used on the wire.
     * </pre>
     *
     * <code>.envoy.config.core.v3.ApiVersion transport_api_version = 12 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearTransportApiVersion() {
      
      transportApiVersion_ = 0;
      onChanged();
      return this;
    }

    private boolean failureModeAllow_ ;
    /**
     * <pre>
     *  Changes filter's behaviour on errors:
     *  1. When set to true, the filter will *accept* client request even if the communication with
     *  the authorization service has failed, or if the authorization service has returned a HTTP 5xx
     *  error.
     *  2. When set to false, ext-authz will *reject* client requests and return a *Forbidden*
     *  response if the communication with the authorization service has failed, or if the
     *  authorization service has returned a HTTP 5xx error.
     * Note that errors can be *always* tracked in the :ref:`stats
     * &lt;config_http_filters_ext_authz_stats&gt;`.
     * </pre>
     *
     * <code>bool failure_mode_allow = 2;</code>
     * @return The failureModeAllow.
     */
    @java.lang.Override
    public boolean getFailureModeAllow() {
      return failureModeAllow_;
    }
    /**
     * <pre>
     *  Changes filter's behaviour on errors:
     *  1. When set to true, the filter will *accept* client request even if the communication with
     *  the authorization service has failed, or if the authorization service has returned a HTTP 5xx
     *  error.
     *  2. When set to false, ext-authz will *reject* client requests and return a *Forbidden*
     *  response if the communication with the authorization service has failed, or if the
     *  authorization service has returned a HTTP 5xx error.
     * Note that errors can be *always* tracked in the :ref:`stats
     * &lt;config_http_filters_ext_authz_stats&gt;`.
     * </pre>
     *
     * <code>bool failure_mode_allow = 2;</code>
     * @param value The failureModeAllow to set.
     * @return This builder for chaining.
     */
    public Builder setFailureModeAllow(boolean value) {
      
      failureModeAllow_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *  Changes filter's behaviour on errors:
     *  1. When set to true, the filter will *accept* client request even if the communication with
     *  the authorization service has failed, or if the authorization service has returned a HTTP 5xx
     *  error.
     *  2. When set to false, ext-authz will *reject* client requests and return a *Forbidden*
     *  response if the communication with the authorization service has failed, or if the
     *  authorization service has returned a HTTP 5xx error.
     * Note that errors can be *always* tracked in the :ref:`stats
     * &lt;config_http_filters_ext_authz_stats&gt;`.
     * </pre>
     *
     * <code>bool failure_mode_allow = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearFailureModeAllow() {
      
      failureModeAllow_ = false;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings withRequestBody_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.Builder, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettingsOrBuilder> withRequestBodyBuilder_;
    /**
     * <pre>
     * Enables filter to buffer the client request body and send it within the authorization request.
     * A ``x-envoy-auth-partial-body: false|true`` metadata header will be added to the authorization
     * request message indicating if the body data is partial.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.BufferSettings with_request_body = 5;</code>
     * @return Whether the withRequestBody field is set.
     */
    public boolean hasWithRequestBody() {
      return withRequestBodyBuilder_ != null || withRequestBody_ != null;
    }
    /**
     * <pre>
     * Enables filter to buffer the client request body and send it within the authorization request.
     * A ``x-envoy-auth-partial-body: false|true`` metadata header will be added to the authorization
     * request message indicating if the body data is partial.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.BufferSettings with_request_body = 5;</code>
     * @return The withRequestBody.
     */
    public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings getWithRequestBody() {
      if (withRequestBodyBuilder_ == null) {
        return withRequestBody_ == null ? io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.getDefaultInstance() : withRequestBody_;
      } else {
        return withRequestBodyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Enables filter to buffer the client request body and send it within the authorization request.
     * A ``x-envoy-auth-partial-body: false|true`` metadata header will be added to the authorization
     * request message indicating if the body data is partial.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.BufferSettings with_request_body = 5;</code>
     */
    public Builder setWithRequestBody(io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings value) {
      if (withRequestBodyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        withRequestBody_ = value;
        onChanged();
      } else {
        withRequestBodyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Enables filter to buffer the client request body and send it within the authorization request.
     * A ``x-envoy-auth-partial-body: false|true`` metadata header will be added to the authorization
     * request message indicating if the body data is partial.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.BufferSettings with_request_body = 5;</code>
     */
    public Builder setWithRequestBody(
        io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.Builder builderForValue) {
      if (withRequestBodyBuilder_ == null) {
        withRequestBody_ = builderForValue.build();
        onChanged();
      } else {
        withRequestBodyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Enables filter to buffer the client request body and send it within the authorization request.
     * A ``x-envoy-auth-partial-body: false|true`` metadata header will be added to the authorization
     * request message indicating if the body data is partial.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.BufferSettings with_request_body = 5;</code>
     */
    public Builder mergeWithRequestBody(io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings value) {
      if (withRequestBodyBuilder_ == null) {
        if (withRequestBody_ != null) {
          withRequestBody_ =
            io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.newBuilder(withRequestBody_).mergeFrom(value).buildPartial();
        } else {
          withRequestBody_ = value;
        }
        onChanged();
      } else {
        withRequestBodyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Enables filter to buffer the client request body and send it within the authorization request.
     * A ``x-envoy-auth-partial-body: false|true`` metadata header will be added to the authorization
     * request message indicating if the body data is partial.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.BufferSettings with_request_body = 5;</code>
     */
    public Builder clearWithRequestBody() {
      if (withRequestBodyBuilder_ == null) {
        withRequestBody_ = null;
        onChanged();
      } else {
        withRequestBody_ = null;
        withRequestBodyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Enables filter to buffer the client request body and send it within the authorization request.
     * A ``x-envoy-auth-partial-body: false|true`` metadata header will be added to the authorization
     * request message indicating if the body data is partial.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.BufferSettings with_request_body = 5;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.Builder getWithRequestBodyBuilder() {
      
      onChanged();
      return getWithRequestBodyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Enables filter to buffer the client request body and send it within the authorization request.
     * A ``x-envoy-auth-partial-body: false|true`` metadata header will be added to the authorization
     * request message indicating if the body data is partial.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.BufferSettings with_request_body = 5;</code>
     */
    public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettingsOrBuilder getWithRequestBodyOrBuilder() {
      if (withRequestBodyBuilder_ != null) {
        return withRequestBodyBuilder_.getMessageOrBuilder();
      } else {
        return withRequestBody_ == null ?
            io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.getDefaultInstance() : withRequestBody_;
      }
    }
    /**
     * <pre>
     * Enables filter to buffer the client request body and send it within the authorization request.
     * A ``x-envoy-auth-partial-body: false|true`` metadata header will be added to the authorization
     * request message indicating if the body data is partial.
     * </pre>
     *
     * <code>.envoy.extensions.filters.http.ext_authz.v3.BufferSettings with_request_body = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.Builder, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettingsOrBuilder> 
        getWithRequestBodyFieldBuilder() {
      if (withRequestBodyBuilder_ == null) {
        withRequestBodyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettings.Builder, io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.BufferSettingsOrBuilder>(
                getWithRequestBody(),
                getParentForChildren(),
                isClean());
        withRequestBody_ = null;
      }
      return withRequestBodyBuilder_;
    }

    private boolean clearRouteCache_ ;
    /**
     * <pre>
     * Clears route cache in order to allow the external authorization service to correctly affect
     * routing decisions. Filter clears all cached routes when:
     * 1. The field is set to *true*.
     * 2. The status returned from the authorization service is a HTTP 200 or gRPC 0.
     * 3. At least one *authorization response header* is added to the client request, or is used for
     * altering another client request header.
     * </pre>
     *
     * <code>bool clear_route_cache = 6;</code>
     * @return The clearRouteCache.
     */
    @java.lang.Override
    public boolean getClearRouteCache() {
      return clearRouteCache_;
    }
    /**
     * <pre>
     * Clears route cache in order to allow the external authorization service to correctly affect
     * routing decisions. Filter clears all cached routes when:
     * 1. The field is set to *true*.
     * 2. The status returned from the authorization service is a HTTP 200 or gRPC 0.
     * 3. At least one *authorization response header* is added to the client request, or is used for
     * altering another client request header.
     * </pre>
     *
     * <code>bool clear_route_cache = 6;</code>
     * @param value The clearRouteCache to set.
     * @return This builder for chaining.
     */
    public Builder setClearRouteCache(boolean value) {
      
      clearRouteCache_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Clears route cache in order to allow the external authorization service to correctly affect
     * routing decisions. Filter clears all cached routes when:
     * 1. The field is set to *true*.
     * 2. The status returned from the authorization service is a HTTP 200 or gRPC 0.
     * 3. At least one *authorization response header* is added to the client request, or is used for
     * altering another client request header.
     * </pre>
     *
     * <code>bool clear_route_cache = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearClearRouteCache() {
      
      clearRouteCache_ = false;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.type.v3.HttpStatus statusOnError_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.v3.HttpStatus, io.envoyproxy.envoy.type.v3.HttpStatus.Builder, io.envoyproxy.envoy.type.v3.HttpStatusOrBuilder> statusOnErrorBuilder_;
    /**
     * <pre>
     * Sets the HTTP status that is returned to the client when there is a network error between the
     * filter and the authorization server. The default status is HTTP 403 Forbidden.
     * </pre>
     *
     * <code>.envoy.type.v3.HttpStatus status_on_error = 7;</code>
     * @return Whether the statusOnError field is set.
     */
    public boolean hasStatusOnError() {
      return statusOnErrorBuilder_ != null || statusOnError_ != null;
    }
    /**
     * <pre>
     * Sets the HTTP status that is returned to the client when there is a network error between the
     * filter and the authorization server. The default status is HTTP 403 Forbidden.
     * </pre>
     *
     * <code>.envoy.type.v3.HttpStatus status_on_error = 7;</code>
     * @return The statusOnError.
     */
    public io.envoyproxy.envoy.type.v3.HttpStatus getStatusOnError() {
      if (statusOnErrorBuilder_ == null) {
        return statusOnError_ == null ? io.envoyproxy.envoy.type.v3.HttpStatus.getDefaultInstance() : statusOnError_;
      } else {
        return statusOnErrorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Sets the HTTP status that is returned to the client when there is a network error between the
     * filter and the authorization server. The default status is HTTP 403 Forbidden.
     * </pre>
     *
     * <code>.envoy.type.v3.HttpStatus status_on_error = 7;</code>
     */
    public Builder setStatusOnError(io.envoyproxy.envoy.type.v3.HttpStatus value) {
      if (statusOnErrorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        statusOnError_ = value;
        onChanged();
      } else {
        statusOnErrorBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Sets the HTTP status that is returned to the client when there is a network error between the
     * filter and the authorization server. The default status is HTTP 403 Forbidden.
     * </pre>
     *
     * <code>.envoy.type.v3.HttpStatus status_on_error = 7;</code>
     */
    public Builder setStatusOnError(
        io.envoyproxy.envoy.type.v3.HttpStatus.Builder builderForValue) {
      if (statusOnErrorBuilder_ == null) {
        statusOnError_ = builderForValue.build();
        onChanged();
      } else {
        statusOnErrorBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Sets the HTTP status that is returned to the client when there is a network error between the
     * filter and the authorization server. The default status is HTTP 403 Forbidden.
     * </pre>
     *
     * <code>.envoy.type.v3.HttpStatus status_on_error = 7;</code>
     */
    public Builder mergeStatusOnError(io.envoyproxy.envoy.type.v3.HttpStatus value) {
      if (statusOnErrorBuilder_ == null) {
        if (statusOnError_ != null) {
          statusOnError_ =
            io.envoyproxy.envoy.type.v3.HttpStatus.newBuilder(statusOnError_).mergeFrom(value).buildPartial();
        } else {
          statusOnError_ = value;
        }
        onChanged();
      } else {
        statusOnErrorBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Sets the HTTP status that is returned to the client when there is a network error between the
     * filter and the authorization server. The default status is HTTP 403 Forbidden.
     * </pre>
     *
     * <code>.envoy.type.v3.HttpStatus status_on_error = 7;</code>
     */
    public Builder clearStatusOnError() {
      if (statusOnErrorBuilder_ == null) {
        statusOnError_ = null;
        onChanged();
      } else {
        statusOnError_ = null;
        statusOnErrorBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Sets the HTTP status that is returned to the client when there is a network error between the
     * filter and the authorization server. The default status is HTTP 403 Forbidden.
     * </pre>
     *
     * <code>.envoy.type.v3.HttpStatus status_on_error = 7;</code>
     */
    public io.envoyproxy.envoy.type.v3.HttpStatus.Builder getStatusOnErrorBuilder() {
      
      onChanged();
      return getStatusOnErrorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Sets the HTTP status that is returned to the client when there is a network error between the
     * filter and the authorization server. The default status is HTTP 403 Forbidden.
     * </pre>
     *
     * <code>.envoy.type.v3.HttpStatus status_on_error = 7;</code>
     */
    public io.envoyproxy.envoy.type.v3.HttpStatusOrBuilder getStatusOnErrorOrBuilder() {
      if (statusOnErrorBuilder_ != null) {
        return statusOnErrorBuilder_.getMessageOrBuilder();
      } else {
        return statusOnError_ == null ?
            io.envoyproxy.envoy.type.v3.HttpStatus.getDefaultInstance() : statusOnError_;
      }
    }
    /**
     * <pre>
     * Sets the HTTP status that is returned to the client when there is a network error between the
     * filter and the authorization server. The default status is HTTP 403 Forbidden.
     * </pre>
     *
     * <code>.envoy.type.v3.HttpStatus status_on_error = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.v3.HttpStatus, io.envoyproxy.envoy.type.v3.HttpStatus.Builder, io.envoyproxy.envoy.type.v3.HttpStatusOrBuilder> 
        getStatusOnErrorFieldBuilder() {
      if (statusOnErrorBuilder_ == null) {
        statusOnErrorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.v3.HttpStatus, io.envoyproxy.envoy.type.v3.HttpStatus.Builder, io.envoyproxy.envoy.type.v3.HttpStatusOrBuilder>(
                getStatusOnError(),
                getParentForChildren(),
                isClean());
        statusOnError_ = null;
      }
      return statusOnErrorBuilder_;
    }

    private com.google.protobuf.LazyStringList metadataContextNamespaces_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureMetadataContextNamespacesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        metadataContextNamespaces_ = new com.google.protobuf.LazyStringArrayList(metadataContextNamespaces_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * Specifies a list of metadata namespaces whose values, if present, will be passed to the
     * ext_authz service as an opaque *protobuf::Struct*.
     * For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata
     * &lt;envoy_api_field_extensions.filters.http.jwt_authn.v3.JwtProvider.payload_in_metadata&gt;` is set,
     * then the following will pass the jwt payload to the authorization server.
     * .. code-block:: yaml
     *    metadata_context_namespaces:
     *    - envoy.filters.http.jwt_authn
     * </pre>
     *
     * <code>repeated string metadata_context_namespaces = 8;</code>
     * @return A list containing the metadataContextNamespaces.
     */
    public com.google.protobuf.ProtocolStringList
        getMetadataContextNamespacesList() {
      return metadataContextNamespaces_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Specifies a list of metadata namespaces whose values, if present, will be passed to the
     * ext_authz service as an opaque *protobuf::Struct*.
     * For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata
     * &lt;envoy_api_field_extensions.filters.http.jwt_authn.v3.JwtProvider.payload_in_metadata&gt;` is set,
     * then the following will pass the jwt payload to the authorization server.
     * .. code-block:: yaml
     *    metadata_context_namespaces:
     *    - envoy.filters.http.jwt_authn
     * </pre>
     *
     * <code>repeated string metadata_context_namespaces = 8;</code>
     * @return The count of metadataContextNamespaces.
     */
    public int getMetadataContextNamespacesCount() {
      return metadataContextNamespaces_.size();
    }
    /**
     * <pre>
     * Specifies a list of metadata namespaces whose values, if present, will be passed to the
     * ext_authz service as an opaque *protobuf::Struct*.
     * For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata
     * &lt;envoy_api_field_extensions.filters.http.jwt_authn.v3.JwtProvider.payload_in_metadata&gt;` is set,
     * then the following will pass the jwt payload to the authorization server.
     * .. code-block:: yaml
     *    metadata_context_namespaces:
     *    - envoy.filters.http.jwt_authn
     * </pre>
     *
     * <code>repeated string metadata_context_namespaces = 8;</code>
     * @param index The index of the element to return.
     * @return The metadataContextNamespaces at the given index.
     */
    public java.lang.String getMetadataContextNamespaces(int index) {
      return metadataContextNamespaces_.get(index);
    }
    /**
     * <pre>
     * Specifies a list of metadata namespaces whose values, if present, will be passed to the
     * ext_authz service as an opaque *protobuf::Struct*.
     * For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata
     * &lt;envoy_api_field_extensions.filters.http.jwt_authn.v3.JwtProvider.payload_in_metadata&gt;` is set,
     * then the following will pass the jwt payload to the authorization server.
     * .. code-block:: yaml
     *    metadata_context_namespaces:
     *    - envoy.filters.http.jwt_authn
     * </pre>
     *
     * <code>repeated string metadata_context_namespaces = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the metadataContextNamespaces at the given index.
     */
    public com.google.protobuf.ByteString
        getMetadataContextNamespacesBytes(int index) {
      return metadataContextNamespaces_.getByteString(index);
    }
    /**
     * <pre>
     * Specifies a list of metadata namespaces whose values, if present, will be passed to the
     * ext_authz service as an opaque *protobuf::Struct*.
     * For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata
     * &lt;envoy_api_field_extensions.filters.http.jwt_authn.v3.JwtProvider.payload_in_metadata&gt;` is set,
     * then the following will pass the jwt payload to the authorization server.
     * .. code-block:: yaml
     *    metadata_context_namespaces:
     *    - envoy.filters.http.jwt_authn
     * </pre>
     *
     * <code>repeated string metadata_context_namespaces = 8;</code>
     * @param index The index to set the value at.
     * @param value The metadataContextNamespaces to set.
     * @return This builder for chaining.
     */
    public Builder setMetadataContextNamespaces(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureMetadataContextNamespacesIsMutable();
      metadataContextNamespaces_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies a list of metadata namespaces whose values, if present, will be passed to the
     * ext_authz service as an opaque *protobuf::Struct*.
     * For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata
     * &lt;envoy_api_field_extensions.filters.http.jwt_authn.v3.JwtProvider.payload_in_metadata&gt;` is set,
     * then the following will pass the jwt payload to the authorization server.
     * .. code-block:: yaml
     *    metadata_context_namespaces:
     *    - envoy.filters.http.jwt_authn
     * </pre>
     *
     * <code>repeated string metadata_context_namespaces = 8;</code>
     * @param value The metadataContextNamespaces to add.
     * @return This builder for chaining.
     */
    public Builder addMetadataContextNamespaces(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureMetadataContextNamespacesIsMutable();
      metadataContextNamespaces_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies a list of metadata namespaces whose values, if present, will be passed to the
     * ext_authz service as an opaque *protobuf::Struct*.
     * For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata
     * &lt;envoy_api_field_extensions.filters.http.jwt_authn.v3.JwtProvider.payload_in_metadata&gt;` is set,
     * then the following will pass the jwt payload to the authorization server.
     * .. code-block:: yaml
     *    metadata_context_namespaces:
     *    - envoy.filters.http.jwt_authn
     * </pre>
     *
     * <code>repeated string metadata_context_namespaces = 8;</code>
     * @param values The metadataContextNamespaces to add.
     * @return This builder for chaining.
     */
    public Builder addAllMetadataContextNamespaces(
        java.lang.Iterable<java.lang.String> values) {
      ensureMetadataContextNamespacesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, metadataContextNamespaces_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies a list of metadata namespaces whose values, if present, will be passed to the
     * ext_authz service as an opaque *protobuf::Struct*.
     * For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata
     * &lt;envoy_api_field_extensions.filters.http.jwt_authn.v3.JwtProvider.payload_in_metadata&gt;` is set,
     * then the following will pass the jwt payload to the authorization server.
     * .. code-block:: yaml
     *    metadata_context_namespaces:
     *    - envoy.filters.http.jwt_authn
     * </pre>
     *
     * <code>repeated string metadata_context_namespaces = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearMetadataContextNamespaces() {
      metadataContextNamespaces_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies a list of metadata namespaces whose values, if present, will be passed to the
     * ext_authz service as an opaque *protobuf::Struct*.
     * For example, if the *jwt_authn* filter is used and :ref:`payload_in_metadata
     * &lt;envoy_api_field_extensions.filters.http.jwt_authn.v3.JwtProvider.payload_in_metadata&gt;` is set,
     * then the following will pass the jwt payload to the authorization server.
     * .. code-block:: yaml
     *    metadata_context_namespaces:
     *    - envoy.filters.http.jwt_authn
     * </pre>
     *
     * <code>repeated string metadata_context_namespaces = 8;</code>
     * @param value The bytes of the metadataContextNamespaces to add.
     * @return This builder for chaining.
     */
    public Builder addMetadataContextNamespacesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureMetadataContextNamespacesIsMutable();
      metadataContextNamespaces_.add(value);
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent filterEnabled_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent, io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.Builder, io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercentOrBuilder> filterEnabledBuilder_;
    /**
     * <pre>
     * Specifies if the filter is enabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to get the percentage of requests to filter.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;</code>
     * @return Whether the filterEnabled field is set.
     */
    public boolean hasFilterEnabled() {
      return filterEnabledBuilder_ != null || filterEnabled_ != null;
    }
    /**
     * <pre>
     * Specifies if the filter is enabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to get the percentage of requests to filter.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;</code>
     * @return The filterEnabled.
     */
    public io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent getFilterEnabled() {
      if (filterEnabledBuilder_ == null) {
        return filterEnabled_ == null ? io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.getDefaultInstance() : filterEnabled_;
      } else {
        return filterEnabledBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies if the filter is enabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to get the percentage of requests to filter.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;</code>
     */
    public Builder setFilterEnabled(io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent value) {
      if (filterEnabledBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        filterEnabled_ = value;
        onChanged();
      } else {
        filterEnabledBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies if the filter is enabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to get the percentage of requests to filter.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;</code>
     */
    public Builder setFilterEnabled(
        io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.Builder builderForValue) {
      if (filterEnabledBuilder_ == null) {
        filterEnabled_ = builderForValue.build();
        onChanged();
      } else {
        filterEnabledBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Specifies if the filter is enabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to get the percentage of requests to filter.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;</code>
     */
    public Builder mergeFilterEnabled(io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent value) {
      if (filterEnabledBuilder_ == null) {
        if (filterEnabled_ != null) {
          filterEnabled_ =
            io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.newBuilder(filterEnabled_).mergeFrom(value).buildPartial();
        } else {
          filterEnabled_ = value;
        }
        onChanged();
      } else {
        filterEnabledBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies if the filter is enabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to get the percentage of requests to filter.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;</code>
     */
    public Builder clearFilterEnabled() {
      if (filterEnabledBuilder_ == null) {
        filterEnabled_ = null;
        onChanged();
      } else {
        filterEnabled_ = null;
        filterEnabledBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Specifies if the filter is enabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to get the percentage of requests to filter.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.Builder getFilterEnabledBuilder() {
      
      onChanged();
      return getFilterEnabledFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies if the filter is enabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to get the percentage of requests to filter.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercentOrBuilder getFilterEnabledOrBuilder() {
      if (filterEnabledBuilder_ != null) {
        return filterEnabledBuilder_.getMessageOrBuilder();
      } else {
        return filterEnabled_ == null ?
            io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.getDefaultInstance() : filterEnabled_;
      }
    }
    /**
     * <pre>
     * Specifies if the filter is enabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to get the percentage of requests to filter.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent filter_enabled = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent, io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.Builder, io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercentOrBuilder> 
        getFilterEnabledFieldBuilder() {
      if (filterEnabledBuilder_ == null) {
        filterEnabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent, io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.Builder, io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercentOrBuilder>(
                getFilterEnabled(),
                getParentForChildren(),
                isClean());
        filterEnabled_ = null;
      }
      return filterEnabledBuilder_;
    }

    private io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher filterEnabledMetadata_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher, io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.MetadataMatcherOrBuilder> filterEnabledMetadataBuilder_;
    /**
     * <pre>
     * Specifies if the filter is enabled with metadata matcher.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;</code>
     * @return Whether the filterEnabledMetadata field is set.
     */
    public boolean hasFilterEnabledMetadata() {
      return filterEnabledMetadataBuilder_ != null || filterEnabledMetadata_ != null;
    }
    /**
     * <pre>
     * Specifies if the filter is enabled with metadata matcher.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;</code>
     * @return The filterEnabledMetadata.
     */
    public io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher getFilterEnabledMetadata() {
      if (filterEnabledMetadataBuilder_ == null) {
        return filterEnabledMetadata_ == null ? io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher.getDefaultInstance() : filterEnabledMetadata_;
      } else {
        return filterEnabledMetadataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies if the filter is enabled with metadata matcher.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;</code>
     */
    public Builder setFilterEnabledMetadata(io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher value) {
      if (filterEnabledMetadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        filterEnabledMetadata_ = value;
        onChanged();
      } else {
        filterEnabledMetadataBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies if the filter is enabled with metadata matcher.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;</code>
     */
    public Builder setFilterEnabledMetadata(
        io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher.Builder builderForValue) {
      if (filterEnabledMetadataBuilder_ == null) {
        filterEnabledMetadata_ = builderForValue.build();
        onChanged();
      } else {
        filterEnabledMetadataBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Specifies if the filter is enabled with metadata matcher.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;</code>
     */
    public Builder mergeFilterEnabledMetadata(io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher value) {
      if (filterEnabledMetadataBuilder_ == null) {
        if (filterEnabledMetadata_ != null) {
          filterEnabledMetadata_ =
            io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher.newBuilder(filterEnabledMetadata_).mergeFrom(value).buildPartial();
        } else {
          filterEnabledMetadata_ = value;
        }
        onChanged();
      } else {
        filterEnabledMetadataBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies if the filter is enabled with metadata matcher.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;</code>
     */
    public Builder clearFilterEnabledMetadata() {
      if (filterEnabledMetadataBuilder_ == null) {
        filterEnabledMetadata_ = null;
        onChanged();
      } else {
        filterEnabledMetadata_ = null;
        filterEnabledMetadataBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Specifies if the filter is enabled with metadata matcher.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher.Builder getFilterEnabledMetadataBuilder() {
      
      onChanged();
      return getFilterEnabledMetadataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies if the filter is enabled with metadata matcher.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.MetadataMatcherOrBuilder getFilterEnabledMetadataOrBuilder() {
      if (filterEnabledMetadataBuilder_ != null) {
        return filterEnabledMetadataBuilder_.getMessageOrBuilder();
      } else {
        return filterEnabledMetadata_ == null ?
            io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher.getDefaultInstance() : filterEnabledMetadata_;
      }
    }
    /**
     * <pre>
     * Specifies if the filter is enabled with metadata matcher.
     * If this field is not specified, the filter will be enabled for all requests.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.MetadataMatcher filter_enabled_metadata = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher, io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.MetadataMatcherOrBuilder> 
        getFilterEnabledMetadataFieldBuilder() {
      if (filterEnabledMetadataBuilder_ == null) {
        filterEnabledMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher, io.envoyproxy.envoy.type.matcher.v3.MetadataMatcher.Builder, io.envoyproxy.envoy.type.matcher.v3.MetadataMatcherOrBuilder>(
                getFilterEnabledMetadata(),
                getParentForChildren(),
                isClean());
        filterEnabledMetadata_ = null;
      }
      return filterEnabledMetadataBuilder_;
    }

    private io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag denyAtDisable_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag, io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag.Builder, io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlagOrBuilder> denyAtDisableBuilder_;
    /**
     * <pre>
     * Specifies whether to deny the requests, when the filter is disabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFeatureFlag.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to determine whether to deny request for
     * filter protected path at filter disabling. If filter is disabled in
     * typed_per_filter_config for the path, requests will not be denied.
     * If this field is not specified, all requests will be allowed when disabled.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;</code>
     * @return Whether the denyAtDisable field is set.
     */
    public boolean hasDenyAtDisable() {
      return denyAtDisableBuilder_ != null || denyAtDisable_ != null;
    }
    /**
     * <pre>
     * Specifies whether to deny the requests, when the filter is disabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFeatureFlag.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to determine whether to deny request for
     * filter protected path at filter disabling. If filter is disabled in
     * typed_per_filter_config for the path, requests will not be denied.
     * If this field is not specified, all requests will be allowed when disabled.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;</code>
     * @return The denyAtDisable.
     */
    public io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag getDenyAtDisable() {
      if (denyAtDisableBuilder_ == null) {
        return denyAtDisable_ == null ? io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag.getDefaultInstance() : denyAtDisable_;
      } else {
        return denyAtDisableBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies whether to deny the requests, when the filter is disabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFeatureFlag.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to determine whether to deny request for
     * filter protected path at filter disabling. If filter is disabled in
     * typed_per_filter_config for the path, requests will not be denied.
     * If this field is not specified, all requests will be allowed when disabled.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;</code>
     */
    public Builder setDenyAtDisable(io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag value) {
      if (denyAtDisableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        denyAtDisable_ = value;
        onChanged();
      } else {
        denyAtDisableBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies whether to deny the requests, when the filter is disabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFeatureFlag.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to determine whether to deny request for
     * filter protected path at filter disabling. If filter is disabled in
     * typed_per_filter_config for the path, requests will not be denied.
     * If this field is not specified, all requests will be allowed when disabled.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;</code>
     */
    public Builder setDenyAtDisable(
        io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag.Builder builderForValue) {
      if (denyAtDisableBuilder_ == null) {
        denyAtDisable_ = builderForValue.build();
        onChanged();
      } else {
        denyAtDisableBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Specifies whether to deny the requests, when the filter is disabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFeatureFlag.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to determine whether to deny request for
     * filter protected path at filter disabling. If filter is disabled in
     * typed_per_filter_config for the path, requests will not be denied.
     * If this field is not specified, all requests will be allowed when disabled.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;</code>
     */
    public Builder mergeDenyAtDisable(io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag value) {
      if (denyAtDisableBuilder_ == null) {
        if (denyAtDisable_ != null) {
          denyAtDisable_ =
            io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag.newBuilder(denyAtDisable_).mergeFrom(value).buildPartial();
        } else {
          denyAtDisable_ = value;
        }
        onChanged();
      } else {
        denyAtDisableBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Specifies whether to deny the requests, when the filter is disabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFeatureFlag.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to determine whether to deny request for
     * filter protected path at filter disabling. If filter is disabled in
     * typed_per_filter_config for the path, requests will not be denied.
     * If this field is not specified, all requests will be allowed when disabled.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;</code>
     */
    public Builder clearDenyAtDisable() {
      if (denyAtDisableBuilder_ == null) {
        denyAtDisable_ = null;
        onChanged();
      } else {
        denyAtDisable_ = null;
        denyAtDisableBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Specifies whether to deny the requests, when the filter is disabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFeatureFlag.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to determine whether to deny request for
     * filter protected path at filter disabling. If filter is disabled in
     * typed_per_filter_config for the path, requests will not be denied.
     * If this field is not specified, all requests will be allowed when disabled.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag.Builder getDenyAtDisableBuilder() {
      
      onChanged();
      return getDenyAtDisableFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies whether to deny the requests, when the filter is disabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFeatureFlag.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to determine whether to deny request for
     * filter protected path at filter disabling. If filter is disabled in
     * typed_per_filter_config for the path, requests will not be denied.
     * If this field is not specified, all requests will be allowed when disabled.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlagOrBuilder getDenyAtDisableOrBuilder() {
      if (denyAtDisableBuilder_ != null) {
        return denyAtDisableBuilder_.getMessageOrBuilder();
      } else {
        return denyAtDisable_ == null ?
            io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag.getDefaultInstance() : denyAtDisable_;
      }
    }
    /**
     * <pre>
     * Specifies whether to deny the requests, when the filter is disabled.
     * If :ref:`runtime_key &lt;envoy_api_field_config.core.v3.RuntimeFeatureFlag.runtime_key&gt;` is specified,
     * Envoy will lookup the runtime key to determine whether to deny request for
     * filter protected path at filter disabling. If filter is disabled in
     * typed_per_filter_config for the path, requests will not be denied.
     * If this field is not specified, all requests will be allowed when disabled.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFeatureFlag deny_at_disable = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag, io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag.Builder, io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlagOrBuilder> 
        getDenyAtDisableFieldBuilder() {
      if (denyAtDisableBuilder_ == null) {
        denyAtDisableBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag, io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlag.Builder, io.envoyproxy.envoy.config.core.v3.RuntimeFeatureFlagOrBuilder>(
                getDenyAtDisable(),
                getParentForChildren(),
                isClean());
        denyAtDisable_ = null;
      }
      return denyAtDisableBuilder_;
    }

    private boolean includePeerCertificate_ ;
    /**
     * <pre>
     * Specifies if the peer certificate is sent to the external service.
     * When this field is true, Envoy will include the peer X.509 certificate, if available, in the
     * :ref:`certificate&lt;envoy_api_field_service.auth.v3.AttributeContext.Peer.certificate&gt;`.
     * </pre>
     *
     * <code>bool include_peer_certificate = 10;</code>
     * @return The includePeerCertificate.
     */
    @java.lang.Override
    public boolean getIncludePeerCertificate() {
      return includePeerCertificate_;
    }
    /**
     * <pre>
     * Specifies if the peer certificate is sent to the external service.
     * When this field is true, Envoy will include the peer X.509 certificate, if available, in the
     * :ref:`certificate&lt;envoy_api_field_service.auth.v3.AttributeContext.Peer.certificate&gt;`.
     * </pre>
     *
     * <code>bool include_peer_certificate = 10;</code>
     * @param value The includePeerCertificate to set.
     * @return This builder for chaining.
     */
    public Builder setIncludePeerCertificate(boolean value) {
      
      includePeerCertificate_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies if the peer certificate is sent to the external service.
     * When this field is true, Envoy will include the peer X.509 certificate, if available, in the
     * :ref:`certificate&lt;envoy_api_field_service.auth.v3.AttributeContext.Peer.certificate&gt;`.
     * </pre>
     *
     * <code>bool include_peer_certificate = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearIncludePeerCertificate() {
      
      includePeerCertificate_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object statPrefix_ = "";
    /**
     * <pre>
     * Optional additional prefix to use when emitting statistics. This allows to distinguish
     * emitted statistics between configured *ext_authz* filters in an HTTP filter chain. For example:
     * .. code-block:: yaml
     *   http_filters:
     *     - name: envoy.filters.http.ext_authz
     *       typed_config:
     *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
     *         stat_prefix: waf # This emits ext_authz.waf.ok, ext_authz.waf.denied, etc.
     *     - name: envoy.filters.http.ext_authz
     *       typed_config:
     *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
     *         stat_prefix: blocker # This emits ext_authz.blocker.ok, ext_authz.blocker.denied, etc.
     * </pre>
     *
     * <code>string stat_prefix = 13;</code>
     * @return The statPrefix.
     */
    public java.lang.String getStatPrefix() {
      java.lang.Object ref = statPrefix_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        statPrefix_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional additional prefix to use when emitting statistics. This allows to distinguish
     * emitted statistics between configured *ext_authz* filters in an HTTP filter chain. For example:
     * .. code-block:: yaml
     *   http_filters:
     *     - name: envoy.filters.http.ext_authz
     *       typed_config:
     *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
     *         stat_prefix: waf # This emits ext_authz.waf.ok, ext_authz.waf.denied, etc.
     *     - name: envoy.filters.http.ext_authz
     *       typed_config:
     *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
     *         stat_prefix: blocker # This emits ext_authz.blocker.ok, ext_authz.blocker.denied, etc.
     * </pre>
     *
     * <code>string stat_prefix = 13;</code>
     * @return The bytes for statPrefix.
     */
    public com.google.protobuf.ByteString
        getStatPrefixBytes() {
      java.lang.Object ref = statPrefix_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        statPrefix_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional additional prefix to use when emitting statistics. This allows to distinguish
     * emitted statistics between configured *ext_authz* filters in an HTTP filter chain. For example:
     * .. code-block:: yaml
     *   http_filters:
     *     - name: envoy.filters.http.ext_authz
     *       typed_config:
     *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
     *         stat_prefix: waf # This emits ext_authz.waf.ok, ext_authz.waf.denied, etc.
     *     - name: envoy.filters.http.ext_authz
     *       typed_config:
     *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
     *         stat_prefix: blocker # This emits ext_authz.blocker.ok, ext_authz.blocker.denied, etc.
     * </pre>
     *
     * <code>string stat_prefix = 13;</code>
     * @param value The statPrefix to set.
     * @return This builder for chaining.
     */
    public Builder setStatPrefix(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      statPrefix_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional additional prefix to use when emitting statistics. This allows to distinguish
     * emitted statistics between configured *ext_authz* filters in an HTTP filter chain. For example:
     * .. code-block:: yaml
     *   http_filters:
     *     - name: envoy.filters.http.ext_authz
     *       typed_config:
     *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
     *         stat_prefix: waf # This emits ext_authz.waf.ok, ext_authz.waf.denied, etc.
     *     - name: envoy.filters.http.ext_authz
     *       typed_config:
     *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
     *         stat_prefix: blocker # This emits ext_authz.blocker.ok, ext_authz.blocker.denied, etc.
     * </pre>
     *
     * <code>string stat_prefix = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearStatPrefix() {
      
      statPrefix_ = getDefaultInstance().getStatPrefix();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional additional prefix to use when emitting statistics. This allows to distinguish
     * emitted statistics between configured *ext_authz* filters in an HTTP filter chain. For example:
     * .. code-block:: yaml
     *   http_filters:
     *     - name: envoy.filters.http.ext_authz
     *       typed_config:
     *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
     *         stat_prefix: waf # This emits ext_authz.waf.ok, ext_authz.waf.denied, etc.
     *     - name: envoy.filters.http.ext_authz
     *       typed_config:
     *         "&#64;type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
     *         stat_prefix: blocker # This emits ext_authz.blocker.ok, ext_authz.blocker.denied, etc.
     * </pre>
     *
     * <code>string stat_prefix = 13;</code>
     * @param value The bytes for statPrefix to set.
     * @return This builder for chaining.
     */
    public Builder setStatPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      statPrefix_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.http.ext_authz.v3.ExtAuthz)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.http.ext_authz.v3.ExtAuthz)
  private static final io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz();
  }

  public static io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ExtAuthz>
      PARSER = new com.google.protobuf.AbstractParser<ExtAuthz>() {
    @java.lang.Override
    public ExtAuthz parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ExtAuthz(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ExtAuthz> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ExtAuthz> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3.ExtAuthz getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

