// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/ext_authz/v3/ext_authz.proto

package io.envoyproxy.envoy.extensions.filters.http.ext_authz.v3;

public interface AuthorizationResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.ext_authz.v3.AuthorizationResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * When this :ref:`list &lt;envoy_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the original client request.
   * Note that coexistent headers will be overridden.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
   * @return Whether the allowedUpstreamHeaders field is set.
   */
  boolean hasAllowedUpstreamHeaders();
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the original client request.
   * Note that coexistent headers will be overridden.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
   * @return The allowedUpstreamHeaders.
   */
  io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getAllowedUpstreamHeaders();
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the original client request.
   * Note that coexistent headers will be overridden.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers = 1;</code>
   */
  io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getAllowedUpstreamHeadersOrBuilder();

  /**
   * <pre>
   * When this :ref:`list &lt;envoy_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the client's response. Note
   * that coexistent headers will be appended.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
   * @return Whether the allowedUpstreamHeadersToAppend field is set.
   */
  boolean hasAllowedUpstreamHeadersToAppend();
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the client's response. Note
   * that coexistent headers will be appended.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
   * @return The allowedUpstreamHeadersToAppend.
   */
  io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getAllowedUpstreamHeadersToAppend();
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_api_msg_type.matcher.v3.ListStringMatcher&gt;` is set, authorization
   * response headers that have a correspondent match will be added to the client's response. Note
   * that coexistent headers will be appended.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_upstream_headers_to_append = 3;</code>
   */
  io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getAllowedUpstreamHeadersToAppendOrBuilder();

  /**
   * <pre>
   * When this :ref:`list &lt;envoy_api_msg_type.matcher.v3.ListStringMatcher&gt;`. is set, authorization
   * response headers that have a correspondent match will be added to the client's response. Note
   * that when this list is *not* set, all the authorization response headers, except *Authority
   * (Host)* will be in the response to the client. When a header is included in this list, *Path*,
   * *Status*, *Content-Length*, *WWWAuthenticate* and *Location* are automatically added.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
   * @return Whether the allowedClientHeaders field is set.
   */
  boolean hasAllowedClientHeaders();
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_api_msg_type.matcher.v3.ListStringMatcher&gt;`. is set, authorization
   * response headers that have a correspondent match will be added to the client's response. Note
   * that when this list is *not* set, all the authorization response headers, except *Authority
   * (Host)* will be in the response to the client. When a header is included in this list, *Path*,
   * *Status*, *Content-Length*, *WWWAuthenticate* and *Location* are automatically added.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
   * @return The allowedClientHeaders.
   */
  io.envoyproxy.envoy.type.matcher.v3.ListStringMatcher getAllowedClientHeaders();
  /**
   * <pre>
   * When this :ref:`list &lt;envoy_api_msg_type.matcher.v3.ListStringMatcher&gt;`. is set, authorization
   * response headers that have a correspondent match will be added to the client's response. Note
   * that when this list is *not* set, all the authorization response headers, except *Authority
   * (Host)* will be in the response to the client. When a header is included in this list, *Path*,
   * *Status*, *Content-Length*, *WWWAuthenticate* and *Location* are automatically added.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.ListStringMatcher allowed_client_headers = 2;</code>
   */
  io.envoyproxy.envoy.type.matcher.v3.ListStringMatcherOrBuilder getAllowedClientHeadersOrBuilder();
}
