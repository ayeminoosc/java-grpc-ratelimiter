// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/network/redis_proxy/v3/redis_proxy.proto

package io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3;

/**
 * <pre>
 * RedisProtocolOptions specifies Redis upstream protocol options. This object is used in
 * :ref:`typed_extension_protocol_options&lt;envoy_api_field_config.cluster.v3.Cluster.typed_extension_protocol_options&gt;`,
 * keyed by the name `envoy.filters.network.redis_proxy`.
 * </pre>
 *
 * Protobuf type {@code envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions}
 */
public final class RedisProtocolOptions extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions)
    RedisProtocolOptionsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RedisProtocolOptions.newBuilder() to construct.
  private RedisProtocolOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RedisProtocolOptions() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RedisProtocolOptions();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RedisProtocolOptions(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.envoyproxy.envoy.config.core.v3.DataSource.Builder subBuilder = null;
            if (authPassword_ != null) {
              subBuilder = authPassword_.toBuilder();
            }
            authPassword_ = input.readMessage(io.envoyproxy.envoy.config.core.v3.DataSource.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(authPassword_);
              authPassword_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.envoyproxy.envoy.config.core.v3.DataSource.Builder subBuilder = null;
            if (authUsername_ != null) {
              subBuilder = authUsername_.toBuilder();
            }
            authUsername_ = input.readMessage(io.envoyproxy.envoy.config.core.v3.DataSource.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(authUsername_);
              authUsername_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProxyProto.internal_static_envoy_extensions_filters_network_redis_proxy_v3_RedisProtocolOptions_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProxyProto.internal_static_envoy_extensions_filters_network_redis_proxy_v3_RedisProtocolOptions_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions.class, io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions.Builder.class);
  }

  public static final int AUTH_PASSWORD_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.config.core.v3.DataSource authPassword_;
  /**
   * <pre>
   * Upstream server password as defined by the `requirepass` directive
   * &lt;https://redis.io/topics/config&gt;`_ in the server's configuration file.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DataSource auth_password = 1 [(.udpa.annotations.sensitive) = true];</code>
   * @return Whether the authPassword field is set.
   */
  @java.lang.Override
  public boolean hasAuthPassword() {
    return authPassword_ != null;
  }
  /**
   * <pre>
   * Upstream server password as defined by the `requirepass` directive
   * &lt;https://redis.io/topics/config&gt;`_ in the server's configuration file.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DataSource auth_password = 1 [(.udpa.annotations.sensitive) = true];</code>
   * @return The authPassword.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.DataSource getAuthPassword() {
    return authPassword_ == null ? io.envoyproxy.envoy.config.core.v3.DataSource.getDefaultInstance() : authPassword_;
  }
  /**
   * <pre>
   * Upstream server password as defined by the `requirepass` directive
   * &lt;https://redis.io/topics/config&gt;`_ in the server's configuration file.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DataSource auth_password = 1 [(.udpa.annotations.sensitive) = true];</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.DataSourceOrBuilder getAuthPasswordOrBuilder() {
    return getAuthPassword();
  }

  public static final int AUTH_USERNAME_FIELD_NUMBER = 2;
  private io.envoyproxy.envoy.config.core.v3.DataSource authUsername_;
  /**
   * <pre>
   * Upstream server username as defined by the `user` directive
   * &lt;https://redis.io/topics/acl&gt;`_ in the server's configuration file.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DataSource auth_username = 2 [(.udpa.annotations.sensitive) = true];</code>
   * @return Whether the authUsername field is set.
   */
  @java.lang.Override
  public boolean hasAuthUsername() {
    return authUsername_ != null;
  }
  /**
   * <pre>
   * Upstream server username as defined by the `user` directive
   * &lt;https://redis.io/topics/acl&gt;`_ in the server's configuration file.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DataSource auth_username = 2 [(.udpa.annotations.sensitive) = true];</code>
   * @return The authUsername.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.DataSource getAuthUsername() {
    return authUsername_ == null ? io.envoyproxy.envoy.config.core.v3.DataSource.getDefaultInstance() : authUsername_;
  }
  /**
   * <pre>
   * Upstream server username as defined by the `user` directive
   * &lt;https://redis.io/topics/acl&gt;`_ in the server's configuration file.
   * </pre>
   *
   * <code>.envoy.config.core.v3.DataSource auth_username = 2 [(.udpa.annotations.sensitive) = true];</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.DataSourceOrBuilder getAuthUsernameOrBuilder() {
    return getAuthUsername();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (authPassword_ != null) {
      output.writeMessage(1, getAuthPassword());
    }
    if (authUsername_ != null) {
      output.writeMessage(2, getAuthUsername());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (authPassword_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getAuthPassword());
    }
    if (authUsername_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAuthUsername());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions other = (io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions) obj;

    if (hasAuthPassword() != other.hasAuthPassword()) return false;
    if (hasAuthPassword()) {
      if (!getAuthPassword()
          .equals(other.getAuthPassword())) return false;
    }
    if (hasAuthUsername() != other.hasAuthUsername()) return false;
    if (hasAuthUsername()) {
      if (!getAuthUsername()
          .equals(other.getAuthUsername())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasAuthPassword()) {
      hash = (37 * hash) + AUTH_PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getAuthPassword().hashCode();
    }
    if (hasAuthUsername()) {
      hash = (37 * hash) + AUTH_USERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getAuthUsername().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * RedisProtocolOptions specifies Redis upstream protocol options. This object is used in
   * :ref:`typed_extension_protocol_options&lt;envoy_api_field_config.cluster.v3.Cluster.typed_extension_protocol_options&gt;`,
   * keyed by the name `envoy.filters.network.redis_proxy`.
   * </pre>
   *
   * Protobuf type {@code envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions)
      io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptionsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProxyProto.internal_static_envoy_extensions_filters_network_redis_proxy_v3_RedisProtocolOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProxyProto.internal_static_envoy_extensions_filters_network_redis_proxy_v3_RedisProtocolOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions.class, io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (authPasswordBuilder_ == null) {
        authPassword_ = null;
      } else {
        authPassword_ = null;
        authPasswordBuilder_ = null;
      }
      if (authUsernameBuilder_ == null) {
        authUsername_ = null;
      } else {
        authUsername_ = null;
        authUsernameBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProxyProto.internal_static_envoy_extensions_filters_network_redis_proxy_v3_RedisProtocolOptions_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions build() {
      io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions buildPartial() {
      io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions result = new io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions(this);
      if (authPasswordBuilder_ == null) {
        result.authPassword_ = authPassword_;
      } else {
        result.authPassword_ = authPasswordBuilder_.build();
      }
      if (authUsernameBuilder_ == null) {
        result.authUsername_ = authUsername_;
      } else {
        result.authUsername_ = authUsernameBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions) {
        return mergeFrom((io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions other) {
      if (other == io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions.getDefaultInstance()) return this;
      if (other.hasAuthPassword()) {
        mergeAuthPassword(other.getAuthPassword());
      }
      if (other.hasAuthUsername()) {
        mergeAuthUsername(other.getAuthUsername());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.envoyproxy.envoy.config.core.v3.DataSource authPassword_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.DataSource, io.envoyproxy.envoy.config.core.v3.DataSource.Builder, io.envoyproxy.envoy.config.core.v3.DataSourceOrBuilder> authPasswordBuilder_;
    /**
     * <pre>
     * Upstream server password as defined by the `requirepass` directive
     * &lt;https://redis.io/topics/config&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_password = 1 [(.udpa.annotations.sensitive) = true];</code>
     * @return Whether the authPassword field is set.
     */
    public boolean hasAuthPassword() {
      return authPasswordBuilder_ != null || authPassword_ != null;
    }
    /**
     * <pre>
     * Upstream server password as defined by the `requirepass` directive
     * &lt;https://redis.io/topics/config&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_password = 1 [(.udpa.annotations.sensitive) = true];</code>
     * @return The authPassword.
     */
    public io.envoyproxy.envoy.config.core.v3.DataSource getAuthPassword() {
      if (authPasswordBuilder_ == null) {
        return authPassword_ == null ? io.envoyproxy.envoy.config.core.v3.DataSource.getDefaultInstance() : authPassword_;
      } else {
        return authPasswordBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Upstream server password as defined by the `requirepass` directive
     * &lt;https://redis.io/topics/config&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_password = 1 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder setAuthPassword(io.envoyproxy.envoy.config.core.v3.DataSource value) {
      if (authPasswordBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        authPassword_ = value;
        onChanged();
      } else {
        authPasswordBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Upstream server password as defined by the `requirepass` directive
     * &lt;https://redis.io/topics/config&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_password = 1 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder setAuthPassword(
        io.envoyproxy.envoy.config.core.v3.DataSource.Builder builderForValue) {
      if (authPasswordBuilder_ == null) {
        authPassword_ = builderForValue.build();
        onChanged();
      } else {
        authPasswordBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Upstream server password as defined by the `requirepass` directive
     * &lt;https://redis.io/topics/config&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_password = 1 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder mergeAuthPassword(io.envoyproxy.envoy.config.core.v3.DataSource value) {
      if (authPasswordBuilder_ == null) {
        if (authPassword_ != null) {
          authPassword_ =
            io.envoyproxy.envoy.config.core.v3.DataSource.newBuilder(authPassword_).mergeFrom(value).buildPartial();
        } else {
          authPassword_ = value;
        }
        onChanged();
      } else {
        authPasswordBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Upstream server password as defined by the `requirepass` directive
     * &lt;https://redis.io/topics/config&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_password = 1 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder clearAuthPassword() {
      if (authPasswordBuilder_ == null) {
        authPassword_ = null;
        onChanged();
      } else {
        authPassword_ = null;
        authPasswordBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Upstream server password as defined by the `requirepass` directive
     * &lt;https://redis.io/topics/config&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_password = 1 [(.udpa.annotations.sensitive) = true];</code>
     */
    public io.envoyproxy.envoy.config.core.v3.DataSource.Builder getAuthPasswordBuilder() {
      
      onChanged();
      return getAuthPasswordFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Upstream server password as defined by the `requirepass` directive
     * &lt;https://redis.io/topics/config&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_password = 1 [(.udpa.annotations.sensitive) = true];</code>
     */
    public io.envoyproxy.envoy.config.core.v3.DataSourceOrBuilder getAuthPasswordOrBuilder() {
      if (authPasswordBuilder_ != null) {
        return authPasswordBuilder_.getMessageOrBuilder();
      } else {
        return authPassword_ == null ?
            io.envoyproxy.envoy.config.core.v3.DataSource.getDefaultInstance() : authPassword_;
      }
    }
    /**
     * <pre>
     * Upstream server password as defined by the `requirepass` directive
     * &lt;https://redis.io/topics/config&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_password = 1 [(.udpa.annotations.sensitive) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.DataSource, io.envoyproxy.envoy.config.core.v3.DataSource.Builder, io.envoyproxy.envoy.config.core.v3.DataSourceOrBuilder> 
        getAuthPasswordFieldBuilder() {
      if (authPasswordBuilder_ == null) {
        authPasswordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.DataSource, io.envoyproxy.envoy.config.core.v3.DataSource.Builder, io.envoyproxy.envoy.config.core.v3.DataSourceOrBuilder>(
                getAuthPassword(),
                getParentForChildren(),
                isClean());
        authPassword_ = null;
      }
      return authPasswordBuilder_;
    }

    private io.envoyproxy.envoy.config.core.v3.DataSource authUsername_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.DataSource, io.envoyproxy.envoy.config.core.v3.DataSource.Builder, io.envoyproxy.envoy.config.core.v3.DataSourceOrBuilder> authUsernameBuilder_;
    /**
     * <pre>
     * Upstream server username as defined by the `user` directive
     * &lt;https://redis.io/topics/acl&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_username = 2 [(.udpa.annotations.sensitive) = true];</code>
     * @return Whether the authUsername field is set.
     */
    public boolean hasAuthUsername() {
      return authUsernameBuilder_ != null || authUsername_ != null;
    }
    /**
     * <pre>
     * Upstream server username as defined by the `user` directive
     * &lt;https://redis.io/topics/acl&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_username = 2 [(.udpa.annotations.sensitive) = true];</code>
     * @return The authUsername.
     */
    public io.envoyproxy.envoy.config.core.v3.DataSource getAuthUsername() {
      if (authUsernameBuilder_ == null) {
        return authUsername_ == null ? io.envoyproxy.envoy.config.core.v3.DataSource.getDefaultInstance() : authUsername_;
      } else {
        return authUsernameBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Upstream server username as defined by the `user` directive
     * &lt;https://redis.io/topics/acl&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_username = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder setAuthUsername(io.envoyproxy.envoy.config.core.v3.DataSource value) {
      if (authUsernameBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        authUsername_ = value;
        onChanged();
      } else {
        authUsernameBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Upstream server username as defined by the `user` directive
     * &lt;https://redis.io/topics/acl&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_username = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder setAuthUsername(
        io.envoyproxy.envoy.config.core.v3.DataSource.Builder builderForValue) {
      if (authUsernameBuilder_ == null) {
        authUsername_ = builderForValue.build();
        onChanged();
      } else {
        authUsernameBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Upstream server username as defined by the `user` directive
     * &lt;https://redis.io/topics/acl&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_username = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder mergeAuthUsername(io.envoyproxy.envoy.config.core.v3.DataSource value) {
      if (authUsernameBuilder_ == null) {
        if (authUsername_ != null) {
          authUsername_ =
            io.envoyproxy.envoy.config.core.v3.DataSource.newBuilder(authUsername_).mergeFrom(value).buildPartial();
        } else {
          authUsername_ = value;
        }
        onChanged();
      } else {
        authUsernameBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Upstream server username as defined by the `user` directive
     * &lt;https://redis.io/topics/acl&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_username = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder clearAuthUsername() {
      if (authUsernameBuilder_ == null) {
        authUsername_ = null;
        onChanged();
      } else {
        authUsername_ = null;
        authUsernameBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Upstream server username as defined by the `user` directive
     * &lt;https://redis.io/topics/acl&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_username = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    public io.envoyproxy.envoy.config.core.v3.DataSource.Builder getAuthUsernameBuilder() {
      
      onChanged();
      return getAuthUsernameFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Upstream server username as defined by the `user` directive
     * &lt;https://redis.io/topics/acl&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_username = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    public io.envoyproxy.envoy.config.core.v3.DataSourceOrBuilder getAuthUsernameOrBuilder() {
      if (authUsernameBuilder_ != null) {
        return authUsernameBuilder_.getMessageOrBuilder();
      } else {
        return authUsername_ == null ?
            io.envoyproxy.envoy.config.core.v3.DataSource.getDefaultInstance() : authUsername_;
      }
    }
    /**
     * <pre>
     * Upstream server username as defined by the `user` directive
     * &lt;https://redis.io/topics/acl&gt;`_ in the server's configuration file.
     * </pre>
     *
     * <code>.envoy.config.core.v3.DataSource auth_username = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.DataSource, io.envoyproxy.envoy.config.core.v3.DataSource.Builder, io.envoyproxy.envoy.config.core.v3.DataSourceOrBuilder> 
        getAuthUsernameFieldBuilder() {
      if (authUsernameBuilder_ == null) {
        authUsernameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.DataSource, io.envoyproxy.envoy.config.core.v3.DataSource.Builder, io.envoyproxy.envoy.config.core.v3.DataSourceOrBuilder>(
                getAuthUsername(),
                getParentForChildren(),
                isClean());
        authUsername_ = null;
      }
      return authUsernameBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions)
  private static final io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions();
  }

  public static io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RedisProtocolOptions>
      PARSER = new com.google.protobuf.AbstractParser<RedisProtocolOptions>() {
    @java.lang.Override
    public RedisProtocolOptions parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RedisProtocolOptions(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RedisProtocolOptions> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RedisProtocolOptions> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.filters.network.redis_proxy.v3.RedisProtocolOptions getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

