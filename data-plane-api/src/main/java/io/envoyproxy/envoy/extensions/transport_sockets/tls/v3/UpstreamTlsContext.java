// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/transport_sockets/tls/v3/tls.proto

package io.envoyproxy.envoy.extensions.transport_sockets.tls.v3;

/**
 * Protobuf type {@code envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext}
 */
public final class UpstreamTlsContext extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext)
    UpstreamTlsContextOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UpstreamTlsContext.newBuilder() to construct.
  private UpstreamTlsContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UpstreamTlsContext() {
    sni_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new UpstreamTlsContext();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private UpstreamTlsContext(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.Builder subBuilder = null;
            if (commonTlsContext_ != null) {
              subBuilder = commonTlsContext_.toBuilder();
            }
            commonTlsContext_ = input.readMessage(io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(commonTlsContext_);
              commonTlsContext_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            sni_ = s;
            break;
          }
          case 24: {

            allowRenegotiation_ = input.readBool();
            break;
          }
          case 34: {
            com.google.protobuf.UInt32Value.Builder subBuilder = null;
            if (maxSessionKeys_ != null) {
              subBuilder = maxSessionKeys_.toBuilder();
            }
            maxSessionKeys_ = input.readMessage(com.google.protobuf.UInt32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maxSessionKeys_);
              maxSessionKeys_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.TlsProto.internal_static_envoy_extensions_transport_sockets_tls_v3_UpstreamTlsContext_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.TlsProto.internal_static_envoy_extensions_transport_sockets_tls_v3_UpstreamTlsContext_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext.class, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext.Builder.class);
  }

  public static final int COMMON_TLS_CONTEXT_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext commonTlsContext_;
  /**
   * <pre>
   * Common TLS context settings.
   * .. attention::
   *   Server certificate verification is not enabled by default. Configure
   *   :ref:`trusted_ca&lt;envoy_api_field_extensions.transport_sockets.tls.v3.CertificateValidationContext.trusted_ca&gt;` to enable
   *   verification.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext common_tls_context = 1;</code>
   * @return Whether the commonTlsContext field is set.
   */
  @java.lang.Override
  public boolean hasCommonTlsContext() {
    return commonTlsContext_ != null;
  }
  /**
   * <pre>
   * Common TLS context settings.
   * .. attention::
   *   Server certificate verification is not enabled by default. Configure
   *   :ref:`trusted_ca&lt;envoy_api_field_extensions.transport_sockets.tls.v3.CertificateValidationContext.trusted_ca&gt;` to enable
   *   verification.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext common_tls_context = 1;</code>
   * @return The commonTlsContext.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext getCommonTlsContext() {
    return commonTlsContext_ == null ? io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.getDefaultInstance() : commonTlsContext_;
  }
  /**
   * <pre>
   * Common TLS context settings.
   * .. attention::
   *   Server certificate verification is not enabled by default. Configure
   *   :ref:`trusted_ca&lt;envoy_api_field_extensions.transport_sockets.tls.v3.CertificateValidationContext.trusted_ca&gt;` to enable
   *   verification.
   * </pre>
   *
   * <code>.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext common_tls_context = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContextOrBuilder getCommonTlsContextOrBuilder() {
    return getCommonTlsContext();
  }

  public static final int SNI_FIELD_NUMBER = 2;
  private volatile java.lang.Object sni_;
  /**
   * <pre>
   * SNI string to use when creating TLS backend connections.
   * </pre>
   *
   * <code>string sni = 2 [(.validate.rules) = { ... }</code>
   * @return The sni.
   */
  @java.lang.Override
  public java.lang.String getSni() {
    java.lang.Object ref = sni_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sni_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * SNI string to use when creating TLS backend connections.
   * </pre>
   *
   * <code>string sni = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for sni.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSniBytes() {
    java.lang.Object ref = sni_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sni_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ALLOW_RENEGOTIATION_FIELD_NUMBER = 3;
  private boolean allowRenegotiation_;
  /**
   * <pre>
   * If true, server-initiated TLS renegotiation will be allowed.
   * .. attention::
   *   TLS renegotiation is considered insecure and shouldn't be used unless absolutely necessary.
   * </pre>
   *
   * <code>bool allow_renegotiation = 3;</code>
   * @return The allowRenegotiation.
   */
  @java.lang.Override
  public boolean getAllowRenegotiation() {
    return allowRenegotiation_;
  }

  public static final int MAX_SESSION_KEYS_FIELD_NUMBER = 4;
  private com.google.protobuf.UInt32Value maxSessionKeys_;
  /**
   * <pre>
   * Maximum number of session keys (Pre-Shared Keys for TLSv1.3+, Session IDs and Session Tickets
   * for TLSv1.2 and older) to store for the purpose of session resumption.
   * Defaults to 1, setting this to 0 disables session resumption.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_session_keys = 4;</code>
   * @return Whether the maxSessionKeys field is set.
   */
  @java.lang.Override
  public boolean hasMaxSessionKeys() {
    return maxSessionKeys_ != null;
  }
  /**
   * <pre>
   * Maximum number of session keys (Pre-Shared Keys for TLSv1.3+, Session IDs and Session Tickets
   * for TLSv1.2 and older) to store for the purpose of session resumption.
   * Defaults to 1, setting this to 0 disables session resumption.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_session_keys = 4;</code>
   * @return The maxSessionKeys.
   */
  @java.lang.Override
  public com.google.protobuf.UInt32Value getMaxSessionKeys() {
    return maxSessionKeys_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxSessionKeys_;
  }
  /**
   * <pre>
   * Maximum number of session keys (Pre-Shared Keys for TLSv1.3+, Session IDs and Session Tickets
   * for TLSv1.2 and older) to store for the purpose of session resumption.
   * Defaults to 1, setting this to 0 disables session resumption.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_session_keys = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.UInt32ValueOrBuilder getMaxSessionKeysOrBuilder() {
    return getMaxSessionKeys();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (commonTlsContext_ != null) {
      output.writeMessage(1, getCommonTlsContext());
    }
    if (!getSniBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sni_);
    }
    if (allowRenegotiation_ != false) {
      output.writeBool(3, allowRenegotiation_);
    }
    if (maxSessionKeys_ != null) {
      output.writeMessage(4, getMaxSessionKeys());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (commonTlsContext_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getCommonTlsContext());
    }
    if (!getSniBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sni_);
    }
    if (allowRenegotiation_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, allowRenegotiation_);
    }
    if (maxSessionKeys_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getMaxSessionKeys());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext other = (io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext) obj;

    if (hasCommonTlsContext() != other.hasCommonTlsContext()) return false;
    if (hasCommonTlsContext()) {
      if (!getCommonTlsContext()
          .equals(other.getCommonTlsContext())) return false;
    }
    if (!getSni()
        .equals(other.getSni())) return false;
    if (getAllowRenegotiation()
        != other.getAllowRenegotiation()) return false;
    if (hasMaxSessionKeys() != other.hasMaxSessionKeys()) return false;
    if (hasMaxSessionKeys()) {
      if (!getMaxSessionKeys()
          .equals(other.getMaxSessionKeys())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasCommonTlsContext()) {
      hash = (37 * hash) + COMMON_TLS_CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getCommonTlsContext().hashCode();
    }
    hash = (37 * hash) + SNI_FIELD_NUMBER;
    hash = (53 * hash) + getSni().hashCode();
    hash = (37 * hash) + ALLOW_RENEGOTIATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAllowRenegotiation());
    if (hasMaxSessionKeys()) {
      hash = (37 * hash) + MAX_SESSION_KEYS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxSessionKeys().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext)
      io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContextOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.TlsProto.internal_static_envoy_extensions_transport_sockets_tls_v3_UpstreamTlsContext_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.TlsProto.internal_static_envoy_extensions_transport_sockets_tls_v3_UpstreamTlsContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext.class, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (commonTlsContextBuilder_ == null) {
        commonTlsContext_ = null;
      } else {
        commonTlsContext_ = null;
        commonTlsContextBuilder_ = null;
      }
      sni_ = "";

      allowRenegotiation_ = false;

      if (maxSessionKeysBuilder_ == null) {
        maxSessionKeys_ = null;
      } else {
        maxSessionKeys_ = null;
        maxSessionKeysBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.TlsProto.internal_static_envoy_extensions_transport_sockets_tls_v3_UpstreamTlsContext_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext getDefaultInstanceForType() {
      return io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext build() {
      io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext buildPartial() {
      io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext result = new io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext(this);
      if (commonTlsContextBuilder_ == null) {
        result.commonTlsContext_ = commonTlsContext_;
      } else {
        result.commonTlsContext_ = commonTlsContextBuilder_.build();
      }
      result.sni_ = sni_;
      result.allowRenegotiation_ = allowRenegotiation_;
      if (maxSessionKeysBuilder_ == null) {
        result.maxSessionKeys_ = maxSessionKeys_;
      } else {
        result.maxSessionKeys_ = maxSessionKeysBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext) {
        return mergeFrom((io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext other) {
      if (other == io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext.getDefaultInstance()) return this;
      if (other.hasCommonTlsContext()) {
        mergeCommonTlsContext(other.getCommonTlsContext());
      }
      if (!other.getSni().isEmpty()) {
        sni_ = other.sni_;
        onChanged();
      }
      if (other.getAllowRenegotiation() != false) {
        setAllowRenegotiation(other.getAllowRenegotiation());
      }
      if (other.hasMaxSessionKeys()) {
        mergeMaxSessionKeys(other.getMaxSessionKeys());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext commonTlsContext_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.Builder, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContextOrBuilder> commonTlsContextBuilder_;
    /**
     * <pre>
     * Common TLS context settings.
     * .. attention::
     *   Server certificate verification is not enabled by default. Configure
     *   :ref:`trusted_ca&lt;envoy_api_field_extensions.transport_sockets.tls.v3.CertificateValidationContext.trusted_ca&gt;` to enable
     *   verification.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext common_tls_context = 1;</code>
     * @return Whether the commonTlsContext field is set.
     */
    public boolean hasCommonTlsContext() {
      return commonTlsContextBuilder_ != null || commonTlsContext_ != null;
    }
    /**
     * <pre>
     * Common TLS context settings.
     * .. attention::
     *   Server certificate verification is not enabled by default. Configure
     *   :ref:`trusted_ca&lt;envoy_api_field_extensions.transport_sockets.tls.v3.CertificateValidationContext.trusted_ca&gt;` to enable
     *   verification.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext common_tls_context = 1;</code>
     * @return The commonTlsContext.
     */
    public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext getCommonTlsContext() {
      if (commonTlsContextBuilder_ == null) {
        return commonTlsContext_ == null ? io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.getDefaultInstance() : commonTlsContext_;
      } else {
        return commonTlsContextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Common TLS context settings.
     * .. attention::
     *   Server certificate verification is not enabled by default. Configure
     *   :ref:`trusted_ca&lt;envoy_api_field_extensions.transport_sockets.tls.v3.CertificateValidationContext.trusted_ca&gt;` to enable
     *   verification.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext common_tls_context = 1;</code>
     */
    public Builder setCommonTlsContext(io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext value) {
      if (commonTlsContextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        commonTlsContext_ = value;
        onChanged();
      } else {
        commonTlsContextBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Common TLS context settings.
     * .. attention::
     *   Server certificate verification is not enabled by default. Configure
     *   :ref:`trusted_ca&lt;envoy_api_field_extensions.transport_sockets.tls.v3.CertificateValidationContext.trusted_ca&gt;` to enable
     *   verification.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext common_tls_context = 1;</code>
     */
    public Builder setCommonTlsContext(
        io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.Builder builderForValue) {
      if (commonTlsContextBuilder_ == null) {
        commonTlsContext_ = builderForValue.build();
        onChanged();
      } else {
        commonTlsContextBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Common TLS context settings.
     * .. attention::
     *   Server certificate verification is not enabled by default. Configure
     *   :ref:`trusted_ca&lt;envoy_api_field_extensions.transport_sockets.tls.v3.CertificateValidationContext.trusted_ca&gt;` to enable
     *   verification.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext common_tls_context = 1;</code>
     */
    public Builder mergeCommonTlsContext(io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext value) {
      if (commonTlsContextBuilder_ == null) {
        if (commonTlsContext_ != null) {
          commonTlsContext_ =
            io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.newBuilder(commonTlsContext_).mergeFrom(value).buildPartial();
        } else {
          commonTlsContext_ = value;
        }
        onChanged();
      } else {
        commonTlsContextBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Common TLS context settings.
     * .. attention::
     *   Server certificate verification is not enabled by default. Configure
     *   :ref:`trusted_ca&lt;envoy_api_field_extensions.transport_sockets.tls.v3.CertificateValidationContext.trusted_ca&gt;` to enable
     *   verification.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext common_tls_context = 1;</code>
     */
    public Builder clearCommonTlsContext() {
      if (commonTlsContextBuilder_ == null) {
        commonTlsContext_ = null;
        onChanged();
      } else {
        commonTlsContext_ = null;
        commonTlsContextBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Common TLS context settings.
     * .. attention::
     *   Server certificate verification is not enabled by default. Configure
     *   :ref:`trusted_ca&lt;envoy_api_field_extensions.transport_sockets.tls.v3.CertificateValidationContext.trusted_ca&gt;` to enable
     *   verification.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext common_tls_context = 1;</code>
     */
    public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.Builder getCommonTlsContextBuilder() {
      
      onChanged();
      return getCommonTlsContextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Common TLS context settings.
     * .. attention::
     *   Server certificate verification is not enabled by default. Configure
     *   :ref:`trusted_ca&lt;envoy_api_field_extensions.transport_sockets.tls.v3.CertificateValidationContext.trusted_ca&gt;` to enable
     *   verification.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext common_tls_context = 1;</code>
     */
    public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContextOrBuilder getCommonTlsContextOrBuilder() {
      if (commonTlsContextBuilder_ != null) {
        return commonTlsContextBuilder_.getMessageOrBuilder();
      } else {
        return commonTlsContext_ == null ?
            io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.getDefaultInstance() : commonTlsContext_;
      }
    }
    /**
     * <pre>
     * Common TLS context settings.
     * .. attention::
     *   Server certificate verification is not enabled by default. Configure
     *   :ref:`trusted_ca&lt;envoy_api_field_extensions.transport_sockets.tls.v3.CertificateValidationContext.trusted_ca&gt;` to enable
     *   verification.
     * </pre>
     *
     * <code>.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext common_tls_context = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.Builder, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContextOrBuilder> 
        getCommonTlsContextFieldBuilder() {
      if (commonTlsContextBuilder_ == null) {
        commonTlsContextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContext.Builder, io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.CommonTlsContextOrBuilder>(
                getCommonTlsContext(),
                getParentForChildren(),
                isClean());
        commonTlsContext_ = null;
      }
      return commonTlsContextBuilder_;
    }

    private java.lang.Object sni_ = "";
    /**
     * <pre>
     * SNI string to use when creating TLS backend connections.
     * </pre>
     *
     * <code>string sni = 2 [(.validate.rules) = { ... }</code>
     * @return The sni.
     */
    public java.lang.String getSni() {
      java.lang.Object ref = sni_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sni_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * SNI string to use when creating TLS backend connections.
     * </pre>
     *
     * <code>string sni = 2 [(.validate.rules) = { ... }</code>
     * @return The bytes for sni.
     */
    public com.google.protobuf.ByteString
        getSniBytes() {
      java.lang.Object ref = sni_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sni_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * SNI string to use when creating TLS backend connections.
     * </pre>
     *
     * <code>string sni = 2 [(.validate.rules) = { ... }</code>
     * @param value The sni to set.
     * @return This builder for chaining.
     */
    public Builder setSni(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      sni_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SNI string to use when creating TLS backend connections.
     * </pre>
     *
     * <code>string sni = 2 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearSni() {
      
      sni_ = getDefaultInstance().getSni();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * SNI string to use when creating TLS backend connections.
     * </pre>
     *
     * <code>string sni = 2 [(.validate.rules) = { ... }</code>
     * @param value The bytes for sni to set.
     * @return This builder for chaining.
     */
    public Builder setSniBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      sni_ = value;
      onChanged();
      return this;
    }

    private boolean allowRenegotiation_ ;
    /**
     * <pre>
     * If true, server-initiated TLS renegotiation will be allowed.
     * .. attention::
     *   TLS renegotiation is considered insecure and shouldn't be used unless absolutely necessary.
     * </pre>
     *
     * <code>bool allow_renegotiation = 3;</code>
     * @return The allowRenegotiation.
     */
    @java.lang.Override
    public boolean getAllowRenegotiation() {
      return allowRenegotiation_;
    }
    /**
     * <pre>
     * If true, server-initiated TLS renegotiation will be allowed.
     * .. attention::
     *   TLS renegotiation is considered insecure and shouldn't be used unless absolutely necessary.
     * </pre>
     *
     * <code>bool allow_renegotiation = 3;</code>
     * @param value The allowRenegotiation to set.
     * @return This builder for chaining.
     */
    public Builder setAllowRenegotiation(boolean value) {
      
      allowRenegotiation_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, server-initiated TLS renegotiation will be allowed.
     * .. attention::
     *   TLS renegotiation is considered insecure and shouldn't be used unless absolutely necessary.
     * </pre>
     *
     * <code>bool allow_renegotiation = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllowRenegotiation() {
      
      allowRenegotiation_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.UInt32Value maxSessionKeys_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> maxSessionKeysBuilder_;
    /**
     * <pre>
     * Maximum number of session keys (Pre-Shared Keys for TLSv1.3+, Session IDs and Session Tickets
     * for TLSv1.2 and older) to store for the purpose of session resumption.
     * Defaults to 1, setting this to 0 disables session resumption.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_session_keys = 4;</code>
     * @return Whether the maxSessionKeys field is set.
     */
    public boolean hasMaxSessionKeys() {
      return maxSessionKeysBuilder_ != null || maxSessionKeys_ != null;
    }
    /**
     * <pre>
     * Maximum number of session keys (Pre-Shared Keys for TLSv1.3+, Session IDs and Session Tickets
     * for TLSv1.2 and older) to store for the purpose of session resumption.
     * Defaults to 1, setting this to 0 disables session resumption.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_session_keys = 4;</code>
     * @return The maxSessionKeys.
     */
    public com.google.protobuf.UInt32Value getMaxSessionKeys() {
      if (maxSessionKeysBuilder_ == null) {
        return maxSessionKeys_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxSessionKeys_;
      } else {
        return maxSessionKeysBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Maximum number of session keys (Pre-Shared Keys for TLSv1.3+, Session IDs and Session Tickets
     * for TLSv1.2 and older) to store for the purpose of session resumption.
     * Defaults to 1, setting this to 0 disables session resumption.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_session_keys = 4;</code>
     */
    public Builder setMaxSessionKeys(com.google.protobuf.UInt32Value value) {
      if (maxSessionKeysBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxSessionKeys_ = value;
        onChanged();
      } else {
        maxSessionKeysBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Maximum number of session keys (Pre-Shared Keys for TLSv1.3+, Session IDs and Session Tickets
     * for TLSv1.2 and older) to store for the purpose of session resumption.
     * Defaults to 1, setting this to 0 disables session resumption.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_session_keys = 4;</code>
     */
    public Builder setMaxSessionKeys(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (maxSessionKeysBuilder_ == null) {
        maxSessionKeys_ = builderForValue.build();
        onChanged();
      } else {
        maxSessionKeysBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Maximum number of session keys (Pre-Shared Keys for TLSv1.3+, Session IDs and Session Tickets
     * for TLSv1.2 and older) to store for the purpose of session resumption.
     * Defaults to 1, setting this to 0 disables session resumption.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_session_keys = 4;</code>
     */
    public Builder mergeMaxSessionKeys(com.google.protobuf.UInt32Value value) {
      if (maxSessionKeysBuilder_ == null) {
        if (maxSessionKeys_ != null) {
          maxSessionKeys_ =
            com.google.protobuf.UInt32Value.newBuilder(maxSessionKeys_).mergeFrom(value).buildPartial();
        } else {
          maxSessionKeys_ = value;
        }
        onChanged();
      } else {
        maxSessionKeysBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Maximum number of session keys (Pre-Shared Keys for TLSv1.3+, Session IDs and Session Tickets
     * for TLSv1.2 and older) to store for the purpose of session resumption.
     * Defaults to 1, setting this to 0 disables session resumption.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_session_keys = 4;</code>
     */
    public Builder clearMaxSessionKeys() {
      if (maxSessionKeysBuilder_ == null) {
        maxSessionKeys_ = null;
        onChanged();
      } else {
        maxSessionKeys_ = null;
        maxSessionKeysBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Maximum number of session keys (Pre-Shared Keys for TLSv1.3+, Session IDs and Session Tickets
     * for TLSv1.2 and older) to store for the purpose of session resumption.
     * Defaults to 1, setting this to 0 disables session resumption.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_session_keys = 4;</code>
     */
    public com.google.protobuf.UInt32Value.Builder getMaxSessionKeysBuilder() {
      
      onChanged();
      return getMaxSessionKeysFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Maximum number of session keys (Pre-Shared Keys for TLSv1.3+, Session IDs and Session Tickets
     * for TLSv1.2 and older) to store for the purpose of session resumption.
     * Defaults to 1, setting this to 0 disables session resumption.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_session_keys = 4;</code>
     */
    public com.google.protobuf.UInt32ValueOrBuilder getMaxSessionKeysOrBuilder() {
      if (maxSessionKeysBuilder_ != null) {
        return maxSessionKeysBuilder_.getMessageOrBuilder();
      } else {
        return maxSessionKeys_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : maxSessionKeys_;
      }
    }
    /**
     * <pre>
     * Maximum number of session keys (Pre-Shared Keys for TLSv1.3+, Session IDs and Session Tickets
     * for TLSv1.2 and older) to store for the purpose of session resumption.
     * Defaults to 1, setting this to 0 disables session resumption.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_session_keys = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getMaxSessionKeysFieldBuilder() {
      if (maxSessionKeysBuilder_ == null) {
        maxSessionKeysBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getMaxSessionKeys(),
                getParentForChildren(),
                isClean());
        maxSessionKeys_ = null;
      }
      return maxSessionKeysBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext)
  }

  // @@protoc_insertion_point(class_scope:envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext)
  private static final io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext();
  }

  public static io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<UpstreamTlsContext>
      PARSER = new com.google.protobuf.AbstractParser<UpstreamTlsContext>() {
    @java.lang.Override
    public UpstreamTlsContext parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new UpstreamTlsContext(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<UpstreamTlsContext> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<UpstreamTlsContext> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

