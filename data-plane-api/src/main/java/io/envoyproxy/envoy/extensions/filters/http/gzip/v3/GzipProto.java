// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/gzip/v3/gzip.proto

package io.envoyproxy.envoy.extensions.filters.http.gzip.v3;

public final class GzipProto {
  private GzipProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_filters_http_gzip_v3_Gzip_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_filters_http_gzip_v3_Gzip_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_envoy_extensions_filters_http_gzip_v3_Gzip_CompressionLevel_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_envoy_extensions_filters_http_gzip_v3_Gzip_CompressionLevel_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0envoy/extensions/filters/http/gzip/v3/" +
      "gzip.proto\022%envoy.extensions.filters.htt" +
      "p.gzip.v3\032<envoy/extensions/filters/http" +
      "/compressor/v3/compressor.proto\032\036google/" +
      "protobuf/wrappers.proto\032\035udpa/annotation" +
      "s/status.proto\032!udpa/annotations/version" +
      "ing.proto\032\027validate/validate.proto\"\301\006\n\004G" +
      "zip\022=\n\014memory_level\030\001 \001(\0132\034.google.proto" +
      "buf.UInt32ValueB\t\372B\006*\004\030\t(\001\022f\n\021compressio" +
      "n_level\030\003 \001(\0162A.envoy.extensions.filters" +
      ".http.gzip.v3.Gzip.CompressionLevel.Enum" +
      "B\010\372B\005\202\001\002\020\001\022g\n\024compression_strategy\030\004 \001(\016" +
      "2?.envoy.extensions.filters.http.gzip.v3" +
      ".Gzip.CompressionStrategyB\010\372B\005\202\001\002\020\001\022<\n\013w" +
      "indow_bits\030\t \001(\0132\034.google.protobuf.UInt3" +
      "2ValueB\t\372B\006*\004\030\017(\t\022K\n\ncompressor\030\n \001(\01327." +
      "envoy.extensions.filters.http.compressor" +
      ".v3.Compressor\022>\n\nchunk_size\030\013 \001(\0132\034.goo" +
      "gle.protobuf.UInt32ValueB\014\372B\t*\007\030\200\200\004(\200 \032{" +
      "\n\020CompressionLevel\"(\n\004Enum\022\013\n\007DEFAULT\020\000\022" +
      "\010\n\004BEST\020\001\022\t\n\005SPEED\020\002:=\232\305\210\0368\n6envoy.confi" +
      "g.filter.http.gzip.v2.Gzip.CompressionLe" +
      "vel\"F\n\023CompressionStrategy\022\013\n\007DEFAULT\020\000\022" +
      "\014\n\010FILTERED\020\001\022\013\n\007HUFFMAN\020\002\022\007\n\003RLE\020\003:,\232\305\210" +
      "\036\'\n%envoy.config.filter.http.gzip.v2.Gzi" +
      "pJ\004\010\002\020\003J\004\010\006\020\007J\004\010\007\020\010J\004\010\010\020\tR\016content_lengt" +
      "hR\014content_typeR\026disable_on_etag_headerR" +
      "\035remove_accept_encoding_headerBJ\n3io.env" +
      "oyproxy.envoy.extensions.filters.http.gz" +
      "ip.v3B\tGzipProtoP\001\272\200\310\321\006\002\020\002b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.envoyproxy.envoy.extensions.filters.http.compressor.v3.CompressorProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
          udpa.annotations.Status.getDescriptor(),
          udpa.annotations.Versioning.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_envoy_extensions_filters_http_gzip_v3_Gzip_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_envoy_extensions_filters_http_gzip_v3_Gzip_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_filters_http_gzip_v3_Gzip_descriptor,
        new java.lang.String[] { "MemoryLevel", "CompressionLevel", "CompressionStrategy", "WindowBits", "Compressor", "ChunkSize", });
    internal_static_envoy_extensions_filters_http_gzip_v3_Gzip_CompressionLevel_descriptor =
      internal_static_envoy_extensions_filters_http_gzip_v3_Gzip_descriptor.getNestedTypes().get(0);
    internal_static_envoy_extensions_filters_http_gzip_v3_Gzip_CompressionLevel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_envoy_extensions_filters_http_gzip_v3_Gzip_CompressionLevel_descriptor,
        new java.lang.String[] { });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(udpa.annotations.Status.fileStatus);
    registry.add(udpa.annotations.Versioning.versioning);
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.envoyproxy.envoy.extensions.filters.http.compressor.v3.CompressorProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
    udpa.annotations.Status.getDescriptor();
    udpa.annotations.Versioning.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
