// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/filters/http/health_check/v3/health_check.proto

package io.envoyproxy.envoy.extensions.filters.http.health_check.v3;

public interface HealthCheckOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.filters.http.health_check.v3.HealthCheck)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Specifies whether the filter operates in pass through mode or not.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the passThroughMode field is set.
   */
  boolean hasPassThroughMode();
  /**
   * <pre>
   * Specifies whether the filter operates in pass through mode or not.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
   * @return The passThroughMode.
   */
  com.google.protobuf.BoolValue getPassThroughMode();
  /**
   * <pre>
   * Specifies whether the filter operates in pass through mode or not.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue pass_through_mode = 1 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.BoolValueOrBuilder getPassThroughModeOrBuilder();

  /**
   * <pre>
   * If operating in pass through mode, the amount of time in milliseconds
   * that the filter should cache the upstream response.
   * </pre>
   *
   * <code>.google.protobuf.Duration cache_time = 3;</code>
   * @return Whether the cacheTime field is set.
   */
  boolean hasCacheTime();
  /**
   * <pre>
   * If operating in pass through mode, the amount of time in milliseconds
   * that the filter should cache the upstream response.
   * </pre>
   *
   * <code>.google.protobuf.Duration cache_time = 3;</code>
   * @return The cacheTime.
   */
  com.google.protobuf.Duration getCacheTime();
  /**
   * <pre>
   * If operating in pass through mode, the amount of time in milliseconds
   * that the filter should cache the upstream response.
   * </pre>
   *
   * <code>.google.protobuf.Duration cache_time = 3;</code>
   */
  com.google.protobuf.DurationOrBuilder getCacheTimeOrBuilder();

  /**
   * <pre>
   * If operating in non-pass-through mode, specifies a set of upstream cluster
   * names and the minimum percentage of servers in each of those clusters that
   * must be healthy or degraded in order for the filter to return a 200.
   * .. note::
   *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
   *    as if it were 12%.
   * </pre>
   *
   * <code>map&lt;string, .envoy.type.v3.Percent&gt; cluster_min_healthy_percentages = 4;</code>
   */
  int getClusterMinHealthyPercentagesCount();
  /**
   * <pre>
   * If operating in non-pass-through mode, specifies a set of upstream cluster
   * names and the minimum percentage of servers in each of those clusters that
   * must be healthy or degraded in order for the filter to return a 200.
   * .. note::
   *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
   *    as if it were 12%.
   * </pre>
   *
   * <code>map&lt;string, .envoy.type.v3.Percent&gt; cluster_min_healthy_percentages = 4;</code>
   */
  boolean containsClusterMinHealthyPercentages(
      java.lang.String key);
  /**
   * Use {@link #getClusterMinHealthyPercentagesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, io.envoyproxy.envoy.type.v3.Percent>
  getClusterMinHealthyPercentages();
  /**
   * <pre>
   * If operating in non-pass-through mode, specifies a set of upstream cluster
   * names and the minimum percentage of servers in each of those clusters that
   * must be healthy or degraded in order for the filter to return a 200.
   * .. note::
   *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
   *    as if it were 12%.
   * </pre>
   *
   * <code>map&lt;string, .envoy.type.v3.Percent&gt; cluster_min_healthy_percentages = 4;</code>
   */
  java.util.Map<java.lang.String, io.envoyproxy.envoy.type.v3.Percent>
  getClusterMinHealthyPercentagesMap();
  /**
   * <pre>
   * If operating in non-pass-through mode, specifies a set of upstream cluster
   * names and the minimum percentage of servers in each of those clusters that
   * must be healthy or degraded in order for the filter to return a 200.
   * .. note::
   *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
   *    as if it were 12%.
   * </pre>
   *
   * <code>map&lt;string, .envoy.type.v3.Percent&gt; cluster_min_healthy_percentages = 4;</code>
   */

  io.envoyproxy.envoy.type.v3.Percent getClusterMinHealthyPercentagesOrDefault(
      java.lang.String key,
      io.envoyproxy.envoy.type.v3.Percent defaultValue);
  /**
   * <pre>
   * If operating in non-pass-through mode, specifies a set of upstream cluster
   * names and the minimum percentage of servers in each of those clusters that
   * must be healthy or degraded in order for the filter to return a 200.
   * .. note::
   *    This value is interpreted as an integer by truncating, so 12.50% will be calculated
   *    as if it were 12%.
   * </pre>
   *
   * <code>map&lt;string, .envoy.type.v3.Percent&gt; cluster_min_healthy_percentages = 4;</code>
   */

  io.envoyproxy.envoy.type.v3.Percent getClusterMinHealthyPercentagesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Specifies a set of health check request headers to match on. The health check filter will
   * check a request’s headers against all the specified headers. To specify the health check
   * endpoint, set the ``:path`` header to match on.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 5;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.route.v3.HeaderMatcher> 
      getHeadersList();
  /**
   * <pre>
   * Specifies a set of health check request headers to match on. The health check filter will
   * check a request’s headers against all the specified headers. To specify the health check
   * endpoint, set the ``:path`` header to match on.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 5;</code>
   */
  io.envoyproxy.envoy.config.route.v3.HeaderMatcher getHeaders(int index);
  /**
   * <pre>
   * Specifies a set of health check request headers to match on. The health check filter will
   * check a request’s headers against all the specified headers. To specify the health check
   * endpoint, set the ``:path`` header to match on.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 5;</code>
   */
  int getHeadersCount();
  /**
   * <pre>
   * Specifies a set of health check request headers to match on. The health check filter will
   * check a request’s headers against all the specified headers. To specify the health check
   * endpoint, set the ``:path`` header to match on.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 5;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder> 
      getHeadersOrBuilderList();
  /**
   * <pre>
   * Specifies a set of health check request headers to match on. The health check filter will
   * check a request’s headers against all the specified headers. To specify the health check
   * endpoint, set the ``:path`` header to match on.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.HeaderMatcher headers = 5;</code>
   */
  io.envoyproxy.envoy.config.route.v3.HeaderMatcherOrBuilder getHeadersOrBuilder(
      int index);
}
