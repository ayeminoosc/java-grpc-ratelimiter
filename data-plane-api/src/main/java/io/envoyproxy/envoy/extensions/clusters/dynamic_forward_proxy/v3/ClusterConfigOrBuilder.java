// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/extensions/clusters/dynamic_forward_proxy/v3/cluster.proto

package io.envoyproxy.envoy.extensions.clusters.dynamic_forward_proxy.v3;

public interface ClusterConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The DNS cache configuration that the cluster will attach to. Note this configuration must
   * match that of associated :ref:`dynamic forward proxy HTTP filter configuration
   * &lt;envoy_api_field_extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig.dns_cache_config&gt;`.
   * </pre>
   *
   * <code>.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig dns_cache_config = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the dnsCacheConfig field is set.
   */
  boolean hasDnsCacheConfig();
  /**
   * <pre>
   * The DNS cache configuration that the cluster will attach to. Note this configuration must
   * match that of associated :ref:`dynamic forward proxy HTTP filter configuration
   * &lt;envoy_api_field_extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig.dns_cache_config&gt;`.
   * </pre>
   *
   * <code>.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig dns_cache_config = 1 [(.validate.rules) = { ... }</code>
   * @return The dnsCacheConfig.
   */
  io.envoyproxy.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig getDnsCacheConfig();
  /**
   * <pre>
   * The DNS cache configuration that the cluster will attach to. Note this configuration must
   * match that of associated :ref:`dynamic forward proxy HTTP filter configuration
   * &lt;envoy_api_field_extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig.dns_cache_config&gt;`.
   * </pre>
   *
   * <code>.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfig dns_cache_config = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.extensions.common.dynamic_forward_proxy.v3.DnsCacheConfigOrBuilder getDnsCacheConfigOrBuilder();

  /**
   * <pre>
   * If true allow the cluster configuration to disable the auto_sni and auto_san_validation options
   * in the :ref:`cluster's upstream_http_protocol_options
   * &lt;envoy_api_field_config.cluster.v3.Cluster.upstream_http_protocol_options&gt;`
   * </pre>
   *
   * <code>bool allow_insecure_cluster_options = 2;</code>
   * @return The allowInsecureClusterOptions.
   */
  boolean getAllowInsecureClusterOptions();
}
