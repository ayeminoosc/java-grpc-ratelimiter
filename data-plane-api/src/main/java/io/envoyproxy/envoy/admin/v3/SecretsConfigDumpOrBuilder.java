// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/admin/v3/config_dump.proto

package io.envoyproxy.envoy.admin.v3;

public interface SecretsConfigDumpOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.admin.v3.SecretsConfigDump)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The statically loaded secrets.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.StaticSecret static_secrets = 1;</code>
   */
  java.util.List<io.envoyproxy.envoy.admin.v3.SecretsConfigDump.StaticSecret> 
      getStaticSecretsList();
  /**
   * <pre>
   * The statically loaded secrets.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.StaticSecret static_secrets = 1;</code>
   */
  io.envoyproxy.envoy.admin.v3.SecretsConfigDump.StaticSecret getStaticSecrets(int index);
  /**
   * <pre>
   * The statically loaded secrets.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.StaticSecret static_secrets = 1;</code>
   */
  int getStaticSecretsCount();
  /**
   * <pre>
   * The statically loaded secrets.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.StaticSecret static_secrets = 1;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.admin.v3.SecretsConfigDump.StaticSecretOrBuilder> 
      getStaticSecretsOrBuilderList();
  /**
   * <pre>
   * The statically loaded secrets.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.StaticSecret static_secrets = 1;</code>
   */
  io.envoyproxy.envoy.admin.v3.SecretsConfigDump.StaticSecretOrBuilder getStaticSecretsOrBuilder(
      int index);

  /**
   * <pre>
   * The dynamically loaded active secrets. These are secrets that are available to service
   * clusters or listeners.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.DynamicSecret dynamic_active_secrets = 2;</code>
   */
  java.util.List<io.envoyproxy.envoy.admin.v3.SecretsConfigDump.DynamicSecret> 
      getDynamicActiveSecretsList();
  /**
   * <pre>
   * The dynamically loaded active secrets. These are secrets that are available to service
   * clusters or listeners.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.DynamicSecret dynamic_active_secrets = 2;</code>
   */
  io.envoyproxy.envoy.admin.v3.SecretsConfigDump.DynamicSecret getDynamicActiveSecrets(int index);
  /**
   * <pre>
   * The dynamically loaded active secrets. These are secrets that are available to service
   * clusters or listeners.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.DynamicSecret dynamic_active_secrets = 2;</code>
   */
  int getDynamicActiveSecretsCount();
  /**
   * <pre>
   * The dynamically loaded active secrets. These are secrets that are available to service
   * clusters or listeners.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.DynamicSecret dynamic_active_secrets = 2;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.admin.v3.SecretsConfigDump.DynamicSecretOrBuilder> 
      getDynamicActiveSecretsOrBuilderList();
  /**
   * <pre>
   * The dynamically loaded active secrets. These are secrets that are available to service
   * clusters or listeners.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.DynamicSecret dynamic_active_secrets = 2;</code>
   */
  io.envoyproxy.envoy.admin.v3.SecretsConfigDump.DynamicSecretOrBuilder getDynamicActiveSecretsOrBuilder(
      int index);

  /**
   * <pre>
   * The dynamically loaded warming secrets. These are secrets that are currently undergoing
   * warming in preparation to service clusters or listeners.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.DynamicSecret dynamic_warming_secrets = 3;</code>
   */
  java.util.List<io.envoyproxy.envoy.admin.v3.SecretsConfigDump.DynamicSecret> 
      getDynamicWarmingSecretsList();
  /**
   * <pre>
   * The dynamically loaded warming secrets. These are secrets that are currently undergoing
   * warming in preparation to service clusters or listeners.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.DynamicSecret dynamic_warming_secrets = 3;</code>
   */
  io.envoyproxy.envoy.admin.v3.SecretsConfigDump.DynamicSecret getDynamicWarmingSecrets(int index);
  /**
   * <pre>
   * The dynamically loaded warming secrets. These are secrets that are currently undergoing
   * warming in preparation to service clusters or listeners.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.DynamicSecret dynamic_warming_secrets = 3;</code>
   */
  int getDynamicWarmingSecretsCount();
  /**
   * <pre>
   * The dynamically loaded warming secrets. These are secrets that are currently undergoing
   * warming in preparation to service clusters or listeners.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.DynamicSecret dynamic_warming_secrets = 3;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.admin.v3.SecretsConfigDump.DynamicSecretOrBuilder> 
      getDynamicWarmingSecretsOrBuilderList();
  /**
   * <pre>
   * The dynamically loaded warming secrets. These are secrets that are currently undergoing
   * warming in preparation to service clusters or listeners.
   * </pre>
   *
   * <code>repeated .envoy.admin.v3.SecretsConfigDump.DynamicSecret dynamic_warming_secrets = 3;</code>
   */
  io.envoyproxy.envoy.admin.v3.SecretsConfigDump.DynamicSecretOrBuilder getDynamicWarmingSecretsOrBuilder(
      int index);
}
