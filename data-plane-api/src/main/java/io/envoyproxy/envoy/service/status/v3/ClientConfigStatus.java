// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/service/status/v3/csds.proto

package io.envoyproxy.envoy.service.status.v3;

/**
 * <pre>
 * Config status from a client-side view.
 * </pre>
 *
 * Protobuf enum {@code envoy.service.status.v3.ClientConfigStatus}
 */
public enum ClientConfigStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Config status is not available/unknown.
   * </pre>
   *
   * <code>CLIENT_UNKNOWN = 0;</code>
   */
  CLIENT_UNKNOWN(0),
  /**
   * <pre>
   * Client requested the config but hasn't received any config from management
   * server yet.
   * </pre>
   *
   * <code>CLIENT_REQUESTED = 1;</code>
   */
  CLIENT_REQUESTED(1),
  /**
   * <pre>
   * Client received the config and replied with ACK.
   * </pre>
   *
   * <code>CLIENT_ACKED = 2;</code>
   */
  CLIENT_ACKED(2),
  /**
   * <pre>
   * Client received the config and replied with NACK. Notably, the attached
   * config dump is not the NACKed version, but the most recent accepted one. If
   * no config is accepted yet, the attached config dump will be empty.
   * </pre>
   *
   * <code>CLIENT_NACKED = 3;</code>
   */
  CLIENT_NACKED(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Config status is not available/unknown.
   * </pre>
   *
   * <code>CLIENT_UNKNOWN = 0;</code>
   */
  public static final int CLIENT_UNKNOWN_VALUE = 0;
  /**
   * <pre>
   * Client requested the config but hasn't received any config from management
   * server yet.
   * </pre>
   *
   * <code>CLIENT_REQUESTED = 1;</code>
   */
  public static final int CLIENT_REQUESTED_VALUE = 1;
  /**
   * <pre>
   * Client received the config and replied with ACK.
   * </pre>
   *
   * <code>CLIENT_ACKED = 2;</code>
   */
  public static final int CLIENT_ACKED_VALUE = 2;
  /**
   * <pre>
   * Client received the config and replied with NACK. Notably, the attached
   * config dump is not the NACKed version, but the most recent accepted one. If
   * no config is accepted yet, the attached config dump will be empty.
   * </pre>
   *
   * <code>CLIENT_NACKED = 3;</code>
   */
  public static final int CLIENT_NACKED_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ClientConfigStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ClientConfigStatus forNumber(int value) {
    switch (value) {
      case 0: return CLIENT_UNKNOWN;
      case 1: return CLIENT_REQUESTED;
      case 2: return CLIENT_ACKED;
      case 3: return CLIENT_NACKED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ClientConfigStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ClientConfigStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ClientConfigStatus>() {
          public ClientConfigStatus findValueByNumber(int number) {
            return ClientConfigStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.envoyproxy.envoy.service.status.v3.CsdsProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final ClientConfigStatus[] VALUES = values();

  public static ClientConfigStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ClientConfigStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:envoy.service.status.v3.ClientConfigStatus)
}

