// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/service/discovery/v3/discovery.proto

package io.envoyproxy.envoy.service.discovery.v3;

public interface ResourceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.service.discovery.v3.Resource)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The resource's name, to distinguish it from others of the same type of resource.
   * </pre>
   *
   * <code>string name = 3;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The resource's name, to distinguish it from others of the same type of resource.
   * </pre>
   *
   * <code>string name = 3;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The aliases are a list of other names that this resource can go by.
   * </pre>
   *
   * <code>repeated string aliases = 4;</code>
   * @return A list containing the aliases.
   */
  java.util.List<java.lang.String>
      getAliasesList();
  /**
   * <pre>
   * The aliases are a list of other names that this resource can go by.
   * </pre>
   *
   * <code>repeated string aliases = 4;</code>
   * @return The count of aliases.
   */
  int getAliasesCount();
  /**
   * <pre>
   * The aliases are a list of other names that this resource can go by.
   * </pre>
   *
   * <code>repeated string aliases = 4;</code>
   * @param index The index of the element to return.
   * @return The aliases at the given index.
   */
  java.lang.String getAliases(int index);
  /**
   * <pre>
   * The aliases are a list of other names that this resource can go by.
   * </pre>
   *
   * <code>repeated string aliases = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the aliases at the given index.
   */
  com.google.protobuf.ByteString
      getAliasesBytes(int index);

  /**
   * <pre>
   * The resource level version. It allows xDS to track the state of individual
   * resources.
   * </pre>
   *
   * <code>string version = 1;</code>
   * @return The version.
   */
  java.lang.String getVersion();
  /**
   * <pre>
   * The resource level version. It allows xDS to track the state of individual
   * resources.
   * </pre>
   *
   * <code>string version = 1;</code>
   * @return The bytes for version.
   */
  com.google.protobuf.ByteString
      getVersionBytes();

  /**
   * <pre>
   * The resource being tracked.
   * </pre>
   *
   * <code>.google.protobuf.Any resource = 2;</code>
   * @return Whether the resource field is set.
   */
  boolean hasResource();
  /**
   * <pre>
   * The resource being tracked.
   * </pre>
   *
   * <code>.google.protobuf.Any resource = 2;</code>
   * @return The resource.
   */
  com.google.protobuf.Any getResource();
  /**
   * <pre>
   * The resource being tracked.
   * </pre>
   *
   * <code>.google.protobuf.Any resource = 2;</code>
   */
  com.google.protobuf.AnyOrBuilder getResourceOrBuilder();

  /**
   * <pre>
   * Time-to-live value for the resource. For each resource, a timer is started. The timer is
   * reset each time the resource is received with a new TTL. If the resource is received with
   * no TTL set, the timer is removed for the resource. Upon expiration of the timer, the
   * configuration for the resource will be removed.
   * The TTL can be refreshed or changed by sending a response that doesn't change the resource
   * version. In this case the resource field does not need to be populated, which allows for
   * light-weight "heartbeat" updates to keep a resource with a TTL alive.
   * The TTL feature is meant to support configurations that should be removed in the event of
   * a management server failure. For example, the feature may be used for fault injection
   * testing where the fault injection should be terminated in the event that Envoy loses contact
   * with the management server.
   * </pre>
   *
   * <code>.google.protobuf.Duration ttl = 6;</code>
   * @return Whether the ttl field is set.
   */
  boolean hasTtl();
  /**
   * <pre>
   * Time-to-live value for the resource. For each resource, a timer is started. The timer is
   * reset each time the resource is received with a new TTL. If the resource is received with
   * no TTL set, the timer is removed for the resource. Upon expiration of the timer, the
   * configuration for the resource will be removed.
   * The TTL can be refreshed or changed by sending a response that doesn't change the resource
   * version. In this case the resource field does not need to be populated, which allows for
   * light-weight "heartbeat" updates to keep a resource with a TTL alive.
   * The TTL feature is meant to support configurations that should be removed in the event of
   * a management server failure. For example, the feature may be used for fault injection
   * testing where the fault injection should be terminated in the event that Envoy loses contact
   * with the management server.
   * </pre>
   *
   * <code>.google.protobuf.Duration ttl = 6;</code>
   * @return The ttl.
   */
  com.google.protobuf.Duration getTtl();
  /**
   * <pre>
   * Time-to-live value for the resource. For each resource, a timer is started. The timer is
   * reset each time the resource is received with a new TTL. If the resource is received with
   * no TTL set, the timer is removed for the resource. Upon expiration of the timer, the
   * configuration for the resource will be removed.
   * The TTL can be refreshed or changed by sending a response that doesn't change the resource
   * version. In this case the resource field does not need to be populated, which allows for
   * light-weight "heartbeat" updates to keep a resource with a TTL alive.
   * The TTL feature is meant to support configurations that should be removed in the event of
   * a management server failure. For example, the feature may be used for fault injection
   * testing where the fault injection should be terminated in the event that Envoy loses contact
   * with the management server.
   * </pre>
   *
   * <code>.google.protobuf.Duration ttl = 6;</code>
   */
  com.google.protobuf.DurationOrBuilder getTtlOrBuilder();

  /**
   * <pre>
   * Cache control properties for the resource.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>.envoy.service.discovery.v3.Resource.CacheControl cache_control = 7;</code>
   * @return Whether the cacheControl field is set.
   */
  boolean hasCacheControl();
  /**
   * <pre>
   * Cache control properties for the resource.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>.envoy.service.discovery.v3.Resource.CacheControl cache_control = 7;</code>
   * @return The cacheControl.
   */
  io.envoyproxy.envoy.service.discovery.v3.Resource.CacheControl getCacheControl();
  /**
   * <pre>
   * Cache control properties for the resource.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>.envoy.service.discovery.v3.Resource.CacheControl cache_control = 7;</code>
   */
  io.envoyproxy.envoy.service.discovery.v3.Resource.CacheControlOrBuilder getCacheControlOrBuilder();
}
