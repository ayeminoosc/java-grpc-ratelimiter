// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/data/tap/v3/transport.proto

package io.envoyproxy.envoy.data.tap.v3;

public interface SocketStreamedTraceSegmentOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.data.tap.v3.SocketStreamedTraceSegment)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Trace ID unique to the originating Envoy only. Trace IDs can repeat and should not be used
   * for long term stable uniqueness. Matches connection IDs used in Envoy logs.
   * </pre>
   *
   * <code>uint64 trace_id = 1;</code>
   * @return The traceId.
   */
  long getTraceId();

  /**
   * <pre>
   * Connection properties.
   * </pre>
   *
   * <code>.envoy.data.tap.v3.Connection connection = 2;</code>
   * @return Whether the connection field is set.
   */
  boolean hasConnection();
  /**
   * <pre>
   * Connection properties.
   * </pre>
   *
   * <code>.envoy.data.tap.v3.Connection connection = 2;</code>
   * @return The connection.
   */
  io.envoyproxy.envoy.data.tap.v3.Connection getConnection();
  /**
   * <pre>
   * Connection properties.
   * </pre>
   *
   * <code>.envoy.data.tap.v3.Connection connection = 2;</code>
   */
  io.envoyproxy.envoy.data.tap.v3.ConnectionOrBuilder getConnectionOrBuilder();

  /**
   * <pre>
   * Socket event.
   * </pre>
   *
   * <code>.envoy.data.tap.v3.SocketEvent event = 3;</code>
   * @return Whether the event field is set.
   */
  boolean hasEvent();
  /**
   * <pre>
   * Socket event.
   * </pre>
   *
   * <code>.envoy.data.tap.v3.SocketEvent event = 3;</code>
   * @return The event.
   */
  io.envoyproxy.envoy.data.tap.v3.SocketEvent getEvent();
  /**
   * <pre>
   * Socket event.
   * </pre>
   *
   * <code>.envoy.data.tap.v3.SocketEvent event = 3;</code>
   */
  io.envoyproxy.envoy.data.tap.v3.SocketEventOrBuilder getEventOrBuilder();

  public io.envoyproxy.envoy.data.tap.v3.SocketStreamedTraceSegment.MessagePieceCase getMessagePieceCase();
}
