// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/data/accesslog/v3/accesslog.proto

package io.envoyproxy.envoy.data.accesslog.v3;

public interface HTTPRequestPropertiesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.data.accesslog.v3.HTTPRequestProperties)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The request method (RFC 7231/2616).
   * </pre>
   *
   * <code>.envoy.config.core.v3.RequestMethod request_method = 1 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for requestMethod.
   */
  int getRequestMethodValue();
  /**
   * <pre>
   * The request method (RFC 7231/2616).
   * </pre>
   *
   * <code>.envoy.config.core.v3.RequestMethod request_method = 1 [(.validate.rules) = { ... }</code>
   * @return The requestMethod.
   */
  io.envoyproxy.envoy.config.core.v3.RequestMethod getRequestMethod();

  /**
   * <pre>
   * The scheme portion of the incoming request URI.
   * </pre>
   *
   * <code>string scheme = 2;</code>
   * @return The scheme.
   */
  java.lang.String getScheme();
  /**
   * <pre>
   * The scheme portion of the incoming request URI.
   * </pre>
   *
   * <code>string scheme = 2;</code>
   * @return The bytes for scheme.
   */
  com.google.protobuf.ByteString
      getSchemeBytes();

  /**
   * <pre>
   * HTTP/2 ``:authority`` or HTTP/1.1 ``Host`` header value.
   * </pre>
   *
   * <code>string authority = 3;</code>
   * @return The authority.
   */
  java.lang.String getAuthority();
  /**
   * <pre>
   * HTTP/2 ``:authority`` or HTTP/1.1 ``Host`` header value.
   * </pre>
   *
   * <code>string authority = 3;</code>
   * @return The bytes for authority.
   */
  com.google.protobuf.ByteString
      getAuthorityBytes();

  /**
   * <pre>
   * The port of the incoming request URI
   * (unused currently, as port is composed onto authority).
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value port = 4;</code>
   * @return Whether the port field is set.
   */
  boolean hasPort();
  /**
   * <pre>
   * The port of the incoming request URI
   * (unused currently, as port is composed onto authority).
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value port = 4;</code>
   * @return The port.
   */
  com.google.protobuf.UInt32Value getPort();
  /**
   * <pre>
   * The port of the incoming request URI
   * (unused currently, as port is composed onto authority).
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value port = 4;</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getPortOrBuilder();

  /**
   * <pre>
   * The path portion from the incoming request URI.
   * </pre>
   *
   * <code>string path = 5;</code>
   * @return The path.
   */
  java.lang.String getPath();
  /**
   * <pre>
   * The path portion from the incoming request URI.
   * </pre>
   *
   * <code>string path = 5;</code>
   * @return The bytes for path.
   */
  com.google.protobuf.ByteString
      getPathBytes();

  /**
   * <pre>
   * Value of the ``User-Agent`` request header.
   * </pre>
   *
   * <code>string user_agent = 6;</code>
   * @return The userAgent.
   */
  java.lang.String getUserAgent();
  /**
   * <pre>
   * Value of the ``User-Agent`` request header.
   * </pre>
   *
   * <code>string user_agent = 6;</code>
   * @return The bytes for userAgent.
   */
  com.google.protobuf.ByteString
      getUserAgentBytes();

  /**
   * <pre>
   * Value of the ``Referer`` request header.
   * </pre>
   *
   * <code>string referer = 7;</code>
   * @return The referer.
   */
  java.lang.String getReferer();
  /**
   * <pre>
   * Value of the ``Referer`` request header.
   * </pre>
   *
   * <code>string referer = 7;</code>
   * @return The bytes for referer.
   */
  com.google.protobuf.ByteString
      getRefererBytes();

  /**
   * <pre>
   * Value of the ``X-Forwarded-For`` request header.
   * </pre>
   *
   * <code>string forwarded_for = 8;</code>
   * @return The forwardedFor.
   */
  java.lang.String getForwardedFor();
  /**
   * <pre>
   * Value of the ``X-Forwarded-For`` request header.
   * </pre>
   *
   * <code>string forwarded_for = 8;</code>
   * @return The bytes for forwardedFor.
   */
  com.google.protobuf.ByteString
      getForwardedForBytes();

  /**
   * <pre>
   * Value of the ``X-Request-Id`` request header
   * This header is used by Envoy to uniquely identify a request.
   * It will be generated for all external requests and internal requests that
   * do not already have a request ID.
   * </pre>
   *
   * <code>string request_id = 9;</code>
   * @return The requestId.
   */
  java.lang.String getRequestId();
  /**
   * <pre>
   * Value of the ``X-Request-Id`` request header
   * This header is used by Envoy to uniquely identify a request.
   * It will be generated for all external requests and internal requests that
   * do not already have a request ID.
   * </pre>
   *
   * <code>string request_id = 9;</code>
   * @return The bytes for requestId.
   */
  com.google.protobuf.ByteString
      getRequestIdBytes();

  /**
   * <pre>
   * Value of the ``X-Envoy-Original-Path`` request header.
   * </pre>
   *
   * <code>string original_path = 10;</code>
   * @return The originalPath.
   */
  java.lang.String getOriginalPath();
  /**
   * <pre>
   * Value of the ``X-Envoy-Original-Path`` request header.
   * </pre>
   *
   * <code>string original_path = 10;</code>
   * @return The bytes for originalPath.
   */
  com.google.protobuf.ByteString
      getOriginalPathBytes();

  /**
   * <pre>
   * Size of the HTTP request headers in bytes.
   * This value is captured from the OSI layer 7 perspective, i.e. it does not
   * include overhead from framing or encoding at other networking layers.
   * </pre>
   *
   * <code>uint64 request_headers_bytes = 11;</code>
   * @return The requestHeadersBytes.
   */
  long getRequestHeadersBytes();

  /**
   * <pre>
   * Size of the HTTP request body in bytes.
   * This value is captured from the OSI layer 7 perspective, i.e. it does not
   * include overhead from framing or encoding at other networking layers.
   * </pre>
   *
   * <code>uint64 request_body_bytes = 12;</code>
   * @return The requestBodyBytes.
   */
  long getRequestBodyBytes();

  /**
   * <pre>
   * Map of additional headers that have been configured to be logged.
   * </pre>
   *
   * <code>map&lt;string, string&gt; request_headers = 13;</code>
   */
  int getRequestHeadersCount();
  /**
   * <pre>
   * Map of additional headers that have been configured to be logged.
   * </pre>
   *
   * <code>map&lt;string, string&gt; request_headers = 13;</code>
   */
  boolean containsRequestHeaders(
      java.lang.String key);
  /**
   * Use {@link #getRequestHeadersMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getRequestHeaders();
  /**
   * <pre>
   * Map of additional headers that have been configured to be logged.
   * </pre>
   *
   * <code>map&lt;string, string&gt; request_headers = 13;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getRequestHeadersMap();
  /**
   * <pre>
   * Map of additional headers that have been configured to be logged.
   * </pre>
   *
   * <code>map&lt;string, string&gt; request_headers = 13;</code>
   */

  java.lang.String getRequestHeadersOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * Map of additional headers that have been configured to be logged.
   * </pre>
   *
   * <code>map&lt;string, string&gt; request_headers = 13;</code>
   */

  java.lang.String getRequestHeadersOrThrow(
      java.lang.String key);
}
