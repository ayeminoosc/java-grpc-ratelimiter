// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/data/core/v3/health_check_event.proto

package io.envoyproxy.envoy.data.core.v3;

public interface HealthCheckEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.data.core.v3.HealthCheckEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.envoy.data.core.v3.HealthCheckerType health_checker_type = 1 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for healthCheckerType.
   */
  int getHealthCheckerTypeValue();
  /**
   * <code>.envoy.data.core.v3.HealthCheckerType health_checker_type = 1 [(.validate.rules) = { ... }</code>
   * @return The healthCheckerType.
   */
  io.envoyproxy.envoy.data.core.v3.HealthCheckerType getHealthCheckerType();

  /**
   * <code>.envoy.config.core.v3.Address host = 2;</code>
   * @return Whether the host field is set.
   */
  boolean hasHost();
  /**
   * <code>.envoy.config.core.v3.Address host = 2;</code>
   * @return The host.
   */
  io.envoyproxy.envoy.config.core.v3.Address getHost();
  /**
   * <code>.envoy.config.core.v3.Address host = 2;</code>
   */
  io.envoyproxy.envoy.config.core.v3.AddressOrBuilder getHostOrBuilder();

  /**
   * <code>string cluster_name = 3 [(.validate.rules) = { ... }</code>
   * @return The clusterName.
   */
  java.lang.String getClusterName();
  /**
   * <code>string cluster_name = 3 [(.validate.rules) = { ... }</code>
   * @return The bytes for clusterName.
   */
  com.google.protobuf.ByteString
      getClusterNameBytes();

  /**
   * <pre>
   * Host ejection.
   * </pre>
   *
   * <code>.envoy.data.core.v3.HealthCheckEjectUnhealthy eject_unhealthy_event = 4;</code>
   * @return Whether the ejectUnhealthyEvent field is set.
   */
  boolean hasEjectUnhealthyEvent();
  /**
   * <pre>
   * Host ejection.
   * </pre>
   *
   * <code>.envoy.data.core.v3.HealthCheckEjectUnhealthy eject_unhealthy_event = 4;</code>
   * @return The ejectUnhealthyEvent.
   */
  io.envoyproxy.envoy.data.core.v3.HealthCheckEjectUnhealthy getEjectUnhealthyEvent();
  /**
   * <pre>
   * Host ejection.
   * </pre>
   *
   * <code>.envoy.data.core.v3.HealthCheckEjectUnhealthy eject_unhealthy_event = 4;</code>
   */
  io.envoyproxy.envoy.data.core.v3.HealthCheckEjectUnhealthyOrBuilder getEjectUnhealthyEventOrBuilder();

  /**
   * <pre>
   * Host addition.
   * </pre>
   *
   * <code>.envoy.data.core.v3.HealthCheckAddHealthy add_healthy_event = 5;</code>
   * @return Whether the addHealthyEvent field is set.
   */
  boolean hasAddHealthyEvent();
  /**
   * <pre>
   * Host addition.
   * </pre>
   *
   * <code>.envoy.data.core.v3.HealthCheckAddHealthy add_healthy_event = 5;</code>
   * @return The addHealthyEvent.
   */
  io.envoyproxy.envoy.data.core.v3.HealthCheckAddHealthy getAddHealthyEvent();
  /**
   * <pre>
   * Host addition.
   * </pre>
   *
   * <code>.envoy.data.core.v3.HealthCheckAddHealthy add_healthy_event = 5;</code>
   */
  io.envoyproxy.envoy.data.core.v3.HealthCheckAddHealthyOrBuilder getAddHealthyEventOrBuilder();

  /**
   * <pre>
   * Host failure.
   * </pre>
   *
   * <code>.envoy.data.core.v3.HealthCheckFailure health_check_failure_event = 7;</code>
   * @return Whether the healthCheckFailureEvent field is set.
   */
  boolean hasHealthCheckFailureEvent();
  /**
   * <pre>
   * Host failure.
   * </pre>
   *
   * <code>.envoy.data.core.v3.HealthCheckFailure health_check_failure_event = 7;</code>
   * @return The healthCheckFailureEvent.
   */
  io.envoyproxy.envoy.data.core.v3.HealthCheckFailure getHealthCheckFailureEvent();
  /**
   * <pre>
   * Host failure.
   * </pre>
   *
   * <code>.envoy.data.core.v3.HealthCheckFailure health_check_failure_event = 7;</code>
   */
  io.envoyproxy.envoy.data.core.v3.HealthCheckFailureOrBuilder getHealthCheckFailureEventOrBuilder();

  /**
   * <pre>
   * Healthy host became degraded.
   * </pre>
   *
   * <code>.envoy.data.core.v3.DegradedHealthyHost degraded_healthy_host = 8;</code>
   * @return Whether the degradedHealthyHost field is set.
   */
  boolean hasDegradedHealthyHost();
  /**
   * <pre>
   * Healthy host became degraded.
   * </pre>
   *
   * <code>.envoy.data.core.v3.DegradedHealthyHost degraded_healthy_host = 8;</code>
   * @return The degradedHealthyHost.
   */
  io.envoyproxy.envoy.data.core.v3.DegradedHealthyHost getDegradedHealthyHost();
  /**
   * <pre>
   * Healthy host became degraded.
   * </pre>
   *
   * <code>.envoy.data.core.v3.DegradedHealthyHost degraded_healthy_host = 8;</code>
   */
  io.envoyproxy.envoy.data.core.v3.DegradedHealthyHostOrBuilder getDegradedHealthyHostOrBuilder();

  /**
   * <pre>
   * A degraded host returned to being healthy.
   * </pre>
   *
   * <code>.envoy.data.core.v3.NoLongerDegradedHost no_longer_degraded_host = 9;</code>
   * @return Whether the noLongerDegradedHost field is set.
   */
  boolean hasNoLongerDegradedHost();
  /**
   * <pre>
   * A degraded host returned to being healthy.
   * </pre>
   *
   * <code>.envoy.data.core.v3.NoLongerDegradedHost no_longer_degraded_host = 9;</code>
   * @return The noLongerDegradedHost.
   */
  io.envoyproxy.envoy.data.core.v3.NoLongerDegradedHost getNoLongerDegradedHost();
  /**
   * <pre>
   * A degraded host returned to being healthy.
   * </pre>
   *
   * <code>.envoy.data.core.v3.NoLongerDegradedHost no_longer_degraded_host = 9;</code>
   */
  io.envoyproxy.envoy.data.core.v3.NoLongerDegradedHostOrBuilder getNoLongerDegradedHostOrBuilder();

  /**
   * <pre>
   * Timestamp for event.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 6;</code>
   * @return Whether the timestamp field is set.
   */
  boolean hasTimestamp();
  /**
   * <pre>
   * Timestamp for event.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 6;</code>
   * @return The timestamp.
   */
  com.google.protobuf.Timestamp getTimestamp();
  /**
   * <pre>
   * Timestamp for event.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 6;</code>
   */
  com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

  public io.envoyproxy.envoy.data.core.v3.HealthCheckEvent.EventCase getEventCase();
}
