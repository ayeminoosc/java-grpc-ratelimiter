// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: udpa/service/orca/v1/orca.proto

package com.github.udpa.udpa.service.orca.v1;

public final class OrcaProto {
  private OrcaProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_udpa_service_orca_v1_OrcaLoadReportRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_udpa_service_orca_v1_OrcaLoadReportRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037udpa/service/orca/v1/orca.proto\022\024udpa." +
      "service.orca.v1\032(udpa/data/orca/v1/orca_" +
      "load_report.proto\032\036google/protobuf/durat" +
      "ion.proto\032\027validate/validate.proto\"g\n\025Or" +
      "caLoadReportRequest\0222\n\017report_interval\030\001" +
      " \001(\0132\031.google.protobuf.Duration\022\032\n\022reque" +
      "st_cost_names\030\002 \003(\t2w\n\016OpenRcaService\022e\n" +
      "\021StreamCoreMetrics\022+.udpa.service.orca.v" +
      "1.OrcaLoadReportRequest\032!.udpa.data.orca" +
      ".v1.OrcaLoadReport0\001B3\n$com.github.udpa." +
      "udpa.service.orca.v1B\tOrcaProtoP\001b\006proto" +
      "3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.github.udpa.udpa.data.orca.v1.OrcaLoadReportProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_udpa_service_orca_v1_OrcaLoadReportRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_udpa_service_orca_v1_OrcaLoadReportRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_udpa_service_orca_v1_OrcaLoadReportRequest_descriptor,
        new java.lang.String[] { "ReportInterval", "RequestCostNames", });
    com.github.udpa.udpa.data.orca.v1.OrcaLoadReportProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
